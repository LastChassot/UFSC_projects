

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Sep 20 17:42:43 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    20                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2
    41                           	psect	text27,local,class=CODE,merge=1,delta=2
    42                           	psect	text28,local,class=CODE,merge=1,delta=2
    43                           	psect	text29,local,class=CODE,merge=1,delta=2
    44                           	psect	text30,local,class=CODE,merge=1,delta=2
    45                           	psect	intentry,global,class=CODE,delta=2
    46                           	psect	text31,local,class=CODE,merge=1,delta=2
    47                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    48                           	dabs	1,0x7E,2
    49  0000                     
    50                           ; Version 2.20
    51                           ; Generated 12/02/2020 GMT
    52                           ; 
    53                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    54                           ; All rights reserved.
    55                           ; 
    56                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    57                           ; 
    58                           ; Redistribution and use in source and binary forms, with or without modification, are
    59                           ; permitted provided that the following conditions are met:
    60                           ; 
    61                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    62                           ;        conditions and the following disclaimer.
    63                           ; 
    64                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    65                           ;        of conditions and the following disclaimer in the documentation and/or other
    66                           ;        materials provided with the distribution.
    67                           ; 
    68                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    69                           ;        software without specific prior written permission.
    70                           ; 
    71                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    72                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    73                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    74                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    75                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    76                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    77                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    78                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    79                           ; 
    80                           ; 
    81                           ; Code-generator required, PIC16F877A Definitions
    82                           ; 
    83                           ; SFR Addresses
    84  0000                     	;# 
    85  0001                     	;# 
    86  0002                     	;# 
    87  0003                     	;# 
    88  0004                     	;# 
    89  0005                     	;# 
    90  0006                     	;# 
    91  0007                     	;# 
    92  0008                     	;# 
    93  0009                     	;# 
    94  000A                     	;# 
    95  000B                     	;# 
    96  000C                     	;# 
    97  000D                     	;# 
    98  000E                     	;# 
    99  000E                     	;# 
   100  000F                     	;# 
   101  0010                     	;# 
   102  0011                     	;# 
   103  0012                     	;# 
   104  0013                     	;# 
   105  0014                     	;# 
   106  0015                     	;# 
   107  0015                     	;# 
   108  0016                     	;# 
   109  0017                     	;# 
   110  0018                     	;# 
   111  0019                     	;# 
   112  001A                     	;# 
   113  001B                     	;# 
   114  001B                     	;# 
   115  001C                     	;# 
   116  001D                     	;# 
   117  001E                     	;# 
   118  001F                     	;# 
   119  0081                     	;# 
   120  0085                     	;# 
   121  0086                     	;# 
   122  0087                     	;# 
   123  0088                     	;# 
   124  0089                     	;# 
   125  008C                     	;# 
   126  008D                     	;# 
   127  008E                     	;# 
   128  0091                     	;# 
   129  0092                     	;# 
   130  0093                     	;# 
   131  0094                     	;# 
   132  0098                     	;# 
   133  0099                     	;# 
   134  009C                     	;# 
   135  009D                     	;# 
   136  009E                     	;# 
   137  009F                     	;# 
   138  010C                     	;# 
   139  010D                     	;# 
   140  010E                     	;# 
   141  010F                     	;# 
   142  018C                     	;# 
   143  018D                     	;# 
   144  0000                     	;# 
   145  0001                     	;# 
   146  0002                     	;# 
   147  0003                     	;# 
   148  0004                     	;# 
   149  0005                     	;# 
   150  0006                     	;# 
   151  0007                     	;# 
   152  0008                     	;# 
   153  0009                     	;# 
   154  000A                     	;# 
   155  000B                     	;# 
   156  000C                     	;# 
   157  000D                     	;# 
   158  000E                     	;# 
   159  000E                     	;# 
   160  000F                     	;# 
   161  0010                     	;# 
   162  0011                     	;# 
   163  0012                     	;# 
   164  0013                     	;# 
   165  0014                     	;# 
   166  0015                     	;# 
   167  0015                     	;# 
   168  0016                     	;# 
   169  0017                     	;# 
   170  0018                     	;# 
   171  0019                     	;# 
   172  001A                     	;# 
   173  001B                     	;# 
   174  001B                     	;# 
   175  001C                     	;# 
   176  001D                     	;# 
   177  001E                     	;# 
   178  001F                     	;# 
   179  0081                     	;# 
   180  0085                     	;# 
   181  0086                     	;# 
   182  0087                     	;# 
   183  0088                     	;# 
   184  0089                     	;# 
   185  008C                     	;# 
   186  008D                     	;# 
   187  008E                     	;# 
   188  0091                     	;# 
   189  0092                     	;# 
   190  0093                     	;# 
   191  0094                     	;# 
   192  0098                     	;# 
   193  0099                     	;# 
   194  009C                     	;# 
   195  009D                     	;# 
   196  009E                     	;# 
   197  009F                     	;# 
   198  010C                     	;# 
   199  010D                     	;# 
   200  010E                     	;# 
   201  010F                     	;# 
   202  018C                     	;# 
   203  018D                     	;# 
   204                           
   205                           	psect	strings
   206  0800                     __pstrings:
   207  0800                     stringtab:
   208  0800                     __stringtab:
   209                           
   210                           ;	String table - string pointers are 1 byte each
   211  0800  1BFF               	btfsc	btemp+1,7
   212  0801  280A               	ljmp	stringcode
   213  0802  1383               	bcf	3,7
   214  0803  187F               	btfsc	btemp+1,0
   215  0804  1783               	bsf	3,7
   216  0805  0800               	movf	0,w
   217  0806  0A84               	incf	4,f
   218  0807  1903               	skipnz
   219  0808  0AFF               	incf	btemp+1,f
   220  0809  0008               	return
   221  080A                     stringcode:
   222  080A                     stringdir:
   223  080A  3008               	movlw	high stringdir
   224  080B  008A               	movwf	10
   225  080C  0804               	movf	4,w
   226  080D  0A84               	incf	4,f
   227  080E  0782               	addwf	2,f
   228  080F                     __stringbase:
   229  080F  3400               	retlw	0
   230  0810                     __end_of__stringtab:
   231  0810                     __powers_:
   232  0810  3400               	retlw	0
   233  0811  3400               	retlw	0
   234  0812  3480               	retlw	128
   235  0813  343F               	retlw	63
   236  0814  3400               	retlw	0
   237  0815  3400               	retlw	0
   238  0816  3420               	retlw	32
   239  0817  3441               	retlw	65
   240  0818  3400               	retlw	0
   241  0819  3400               	retlw	0
   242  081A  34C8               	retlw	200
   243  081B  3442               	retlw	66
   244  081C  3400               	retlw	0
   245  081D  3400               	retlw	0
   246  081E  347A               	retlw	122
   247  081F  3444               	retlw	68
   248  0820  3400               	retlw	0
   249  0821  3440               	retlw	64
   250  0822  341C               	retlw	28
   251  0823  3446               	retlw	70
   252  0824  3400               	retlw	0
   253  0825  3450               	retlw	80
   254  0826  34C3               	retlw	195
   255  0827  3447               	retlw	71
   256  0828  3400               	retlw	0
   257  0829  3424               	retlw	36
   258  082A  3474               	retlw	116
   259  082B  3449               	retlw	73
   260  082C  3480               	retlw	128
   261  082D  3496               	retlw	150
   262  082E  3418               	retlw	24
   263  082F  344B               	retlw	75
   264  0830  3420               	retlw	32
   265  0831  34BC               	retlw	188
   266  0832  34BE               	retlw	190
   267  0833  344C               	retlw	76
   268  0834  3428               	retlw	40
   269  0835  346B               	retlw	107
   270  0836  346E               	retlw	110
   271  0837  344E               	retlw	78
   272  0838  34F9               	retlw	249
   273  0839  3402               	retlw	2
   274  083A  3415               	retlw	21
   275  083B  3450               	retlw	80
   276  083C  34EC               	retlw	236
   277  083D  3478               	retlw	120
   278  083E  34AD               	retlw	173
   279  083F  3460               	retlw	96
   280  0840  34CA               	retlw	202
   281  0841  34F2               	retlw	242
   282  0842  3449               	retlw	73
   283  0843  3471               	retlw	113
   284  0844                     __end_of__powers_:
   285  0844                     __npowers_:
   286  0844  3400               	retlw	0
   287  0845  3400               	retlw	0
   288  0846  3480               	retlw	128
   289  0847  343F               	retlw	63
   290  0848  34CD               	retlw	205
   291  0849  34CC               	retlw	204
   292  084A  34CC               	retlw	204
   293  084B  343D               	retlw	61
   294  084C  340A               	retlw	10
   295  084D  34D7               	retlw	215
   296  084E  3423               	retlw	35
   297  084F  343C               	retlw	60
   298  0850  346F               	retlw	111
   299  0851  3412               	retlw	18
   300  0852  3483               	retlw	131
   301  0853  343A               	retlw	58
   302  0854  3417               	retlw	23
   303  0855  34B7               	retlw	183
   304  0856  34D1               	retlw	209
   305  0857  3438               	retlw	56
   306  0858  34AC               	retlw	172
   307  0859  34C5               	retlw	197
   308  085A  3427               	retlw	39
   309  085B  3437               	retlw	55
   310  085C  34BD               	retlw	189
   311  085D  3437               	retlw	55
   312  085E  3486               	retlw	134
   313  085F  3435               	retlw	53
   314  0860  3495               	retlw	149
   315  0861  34BF               	retlw	191
   316  0862  34D6               	retlw	214
   317  0863  3433               	retlw	51
   318  0864  3477               	retlw	119
   319  0865  34CC               	retlw	204
   320  0866  342B               	retlw	43
   321  0867  3432               	retlw	50
   322  0868  345F               	retlw	95
   323  0869  3470               	retlw	112
   324  086A  3489               	retlw	137
   325  086B  3430               	retlw	48
   326  086C  34FF               	retlw	255
   327  086D  34E6               	retlw	230
   328  086E  34DB               	retlw	219
   329  086F  342E               	retlw	46
   330  0870  3408               	retlw	8
   331  0871  34E5               	retlw	229
   332  0872  343C               	retlw	60
   333  0873  341E               	retlw	30
   334  0874  3460               	retlw	96
   335  0875  3442               	retlw	66
   336  0876  34A2               	retlw	162
   337  0877  340D               	retlw	13
   338  0878                     __end_of__npowers_:
   339  0878                     _dpowers:
   340  0878  3401               	retlw	1
   341  0879  3400               	retlw	0
   342  087A  3400               	retlw	0
   343  087B  3400               	retlw	0
   344  087C  340A               	retlw	10
   345  087D  3400               	retlw	0
   346  087E  3400               	retlw	0
   347  087F  3400               	retlw	0
   348  0880  3464               	retlw	100
   349  0881  3400               	retlw	0
   350  0882  3400               	retlw	0
   351  0883  3400               	retlw	0
   352  0884  34E8               	retlw	232
   353  0885  3403               	retlw	3
   354  0886  3400               	retlw	0
   355  0887  3400               	retlw	0
   356  0888  3410               	retlw	16
   357  0889  3427               	retlw	39
   358  088A  3400               	retlw	0
   359  088B  3400               	retlw	0
   360  088C  34A0               	retlw	160
   361  088D  3486               	retlw	134
   362  088E  3401               	retlw	1
   363  088F  3400               	retlw	0
   364  0890  3440               	retlw	64
   365  0891  3442               	retlw	66
   366  0892  340F               	retlw	15
   367  0893  3400               	retlw	0
   368  0894  3480               	retlw	128
   369  0895  3496               	retlw	150
   370  0896  3498               	retlw	152
   371  0897  3400               	retlw	0
   372  0898  3400               	retlw	0
   373  0899  34E1               	retlw	225
   374  089A  34F5               	retlw	245
   375  089B  3405               	retlw	5
   376  089C  3400               	retlw	0
   377  089D  34CA               	retlw	202
   378  089E  349A               	retlw	154
   379  089F  343B               	retlw	59
   380  08A0                     __end_of_dpowers:
   381  0006                     _PORTBbits	set	6
   382  0010                     _T1CONbits	set	16
   383  000F                     _TMR1H	set	15
   384  000E                     _TMR1L	set	14
   385  000C                     _PIR1bits	set	12
   386  000B                     _INTCONbits	set	11
   387  001E                     _ADRESH	set	30
   388  001F                     _ADCON0	set	31
   389  0008                     _PORTDbits	set	8
   390  00FA                     _GO_DONE	set	250
   391  00FA                     _GO	set	250
   392  00F8                     _ADON	set	248
   393  0088                     _TRISD	set	136
   394  0086                     _TRISB	set	134
   395  0085                     _TRISA	set	133
   396  009F                     _ADCON1	set	159
   397  008C                     _PIE1bits	set	140
   398  0081                     _OPTION_REGbits	set	129
   399  009E                     _ADRESL	set	158
   400  08A0                     STR_4:
   401  08A0  3454               	retlw	84	;'T'
   402  08A1  3465               	retlw	101	;'e'
   403  08A2  346E               	retlw	110	;'n'
   404  08A3  3473               	retlw	115	;'s'
   405  08A4  3461               	retlw	97	;'a'
   406  08A5  346F               	retlw	111	;'o'
   407  08A6  3420               	retlw	32	;' '
   408  08A7  343D               	retlw	61	;'='
   409  08A8  3420               	retlw	32	;' '
   410  08A9  3425               	retlw	37	;'%'
   411  08AA  342E               	retlw	46	;'.'
   412  08AB  3431               	retlw	49	;'1'
   413  08AC  3466               	retlw	102	;'f'
   414  08AD  3420               	retlw	32	;' '
   415  08AE  3420               	retlw	32	;' '
   416  08AF  3420               	retlw	32	;' '
   417  08B0  3400               	retlw	0
   418  08B1                     STR_3:
   419  08B1  3454               	retlw	84	;'T'
   420  08B2  3465               	retlw	101	;'e'
   421  08B3  346D               	retlw	109	;'m'
   422  08B4  3470               	retlw	112	;'p'
   423  08B5  3420               	retlw	32	;' '
   424  08B6  343D               	retlw	61	;'='
   425  08B7  3420               	retlw	32	;' '
   426  08B8  3425               	retlw	37	;'%'
   427  08B9  342E               	retlw	46	;'.'
   428  08BA  3431               	retlw	49	;'1'
   429  08BB  3466               	retlw	102	;'f'
   430  08BC  3420               	retlw	32	;' '
   431  08BD  3420               	retlw	32	;' '
   432  08BE  3420               	retlw	32	;' '
   433  08BF  3400               	retlw	0
   434  08C0                     STR_1:
   435  08C0  3441               	retlw	65	;'A'
   436  08C1  3474               	retlw	116	;'t'
   437  08C2  3475               	retlw	117	;'u'
   438  08C3  3461               	retlw	97	;'a'
   439  08C4  346C               	retlw	108	;'l'
   440  08C5  3469               	retlw	105	;'i'
   441  08C6  347A               	retlw	122	;'z'
   442  08C7  3461               	retlw	97	;'a'
   443  08C8  346E               	retlw	110	;'n'
   444  08C9  3464               	retlw	100	;'d'
   445  08CA  346F               	retlw	111	;'o'
   446  08CB  342E               	retlw	46	;'.'
   447  08CC  342E               	retlw	46	;'.'
   448  08CD  342E               	retlw	46	;'.'
   449  08CE  3400               	retlw	0
   450  08CF                     STR_2:
   451  08CF  3449               	retlw	73	;'I'
   452  08D0  346E               	retlw	110	;'n'
   453  08D1  3469               	retlw	105	;'i'
   454  08D2  3463               	retlw	99	;'c'
   455  08D3  3469               	retlw	105	;'i'
   456  08D4  3461               	retlw	97	;'a'
   457  08D5  346C               	retlw	108	;'l'
   458  08D6  3469               	retlw	105	;'i'
   459  08D7  347A               	retlw	122	;'z'
   460  08D8  3461               	retlw	97	;'a'
   461  08D9  346E               	retlw	110	;'n'
   462  08DA  3464               	retlw	100	;'d'
   463  08DB  346F               	retlw	111	;'o'
   464  08DC  3400               	retlw	0
   465                           
   466                           	psect	cinit
   467  000F                     start_initialization:	
   468                           ; #config settings
   469                           
   470  000F                     __initialization:
   471                           
   472                           ; Clear objects allocated to COMMON
   473  000F  01F5               	clrf	__pbssCOMMON& (0+127)
   474  0010  01F6               	clrf	(__pbssCOMMON+1)& (0+127)
   475  0011  01F7               	clrf	(__pbssCOMMON+2)& (0+127)
   476  0012  01F8               	clrf	(__pbssCOMMON+3)& (0+127)
   477                           
   478                           ; Clear objects allocated to BANK1
   479  0013  1683               	bsf	3,5	;RP0=1, select bank1
   480  0014  1303               	bcf	3,6	;RP1=0, select bank1
   481  0015  01D2               	clrf	__pbssBANK1& (0+127)
   482  0016  01D3               	clrf	(__pbssBANK1+1)& (0+127)
   483  0017  01D4               	clrf	(__pbssBANK1+2)& (0+127)
   484  0018  01D5               	clrf	(__pbssBANK1+3)& (0+127)
   485  0019  01D6               	clrf	(__pbssBANK1+4)& (0+127)
   486                           
   487                           ; Clear objects allocated to BANK3
   488  001A  1783               	bsf	3,7	;select IRP bank2
   489  001B  30B8               	movlw	low __pbssBANK3
   490  001C  0084               	movwf	4
   491  001D  30CC               	movlw	low (__pbssBANK3+20)
   492  001E  160A  158A  2071  120A  118A  	fcall	clear_ram0
   493  0023                     end_of_initialization:	
   494                           ;End of C runtime variable initialization code
   495                           
   496  0023                     __end_of__initialization:
   497  0023  0183               	clrf	3
   498  0024  160A  118A  2A86   	ljmp	_main	;jump to C main() function
   499                           
   500                           	psect	bssCOMMON
   501  0075                     __pbssCOMMON:
   502  0075                     _Timer:
   503  0075                     	ds	2
   504  0077                     _i:
   505  0077                     	ds	2
   506                           
   507                           	psect	bssBANK1
   508  00D2                     __pbssBANK1:
   509  00D2                     _buffer:
   510  00D2                     	ds	5
   511                           
   512                           	psect	bssBANK3
   513  01B8                     __pbssBANK3:
   514  01B8                     _corrente:
   515  01B8                     	ds	4
   516  01BC                     _tensao:
   517  01BC                     	ds	4
   518  01C0                     _temperatura:
   519  01C0                     	ds	4
   520  01C4                     _ADC_corrente:
   521  01C4                     	ds	2
   522  01C6                     _ADC_tensao:
   523  01C6                     	ds	2
   524  01C8                     _ADC_temp:
   525  01C8                     	ds	2
   526  01CA                     _flag:
   527  01CA                     	ds	2
   528                           
   529                           	psect	clrtext
   530  1871                     clear_ram0:	
   531                           ;	Called with FSR containing the base address, and
   532                           ;	W with the last address+1
   533                           
   534  1871  0064               	clrwdt	;clear the watchdog before getting into this loop
   535  1872                     clrloop0:
   536  1872  0180               	clrf	0	;clear RAM location pointed to by FSR
   537  1873  0A84               	incf	4,f	;increment pointer
   538  1874  0604               	xorwf	4,w	;XOR with final address
   539  1875  1903               	btfsc	3,2	;have we reached the end yet?
   540  1876  3400               	retlw	0	;all done for this memory range, return
   541  1877  0604               	xorwf	4,w	;XOR again to restore value
   542  1878  2872               	goto	clrloop0	;do the next byte
   543                           
   544                           	psect	cstackBANK3
   545  0190                     __pcstackBANK3:
   546  0190                     main@msg1:
   547                           
   548                           ; 20 bytes @ 0x0
   549  0190                     	ds	20
   550  01A4                     main@msg:
   551                           
   552                           ; 20 bytes @ 0x14
   553  01A4                     	ds	20
   554                           
   555                           	psect	cstackBANK1
   556  00A0                     __pcstackBANK1:
   557  00A0                     ___fladd@signs:
   558                           
   559                           ; 1 bytes @ 0x0
   560  00A0                     	ds	1
   561  00A1                     ___fladd@aexp:
   562                           
   563                           ; 1 bytes @ 0x1
   564  00A1                     	ds	1
   565  00A2                     ___fladd@bexp:
   566                           
   567                           ; 1 bytes @ 0x2
   568  00A2                     	ds	1
   569  00A3                     ___fladd@grs:
   570                           
   571                           ; 1 bytes @ 0x3
   572  00A3                     	ds	1
   573  00A4                     ?___flsub:
   574  00A4                     ___flsub@a:	
   575                           ; 4 bytes @ 0x4
   576                           
   577                           
   578                           ; 4 bytes @ 0x4
   579  00A4                     	ds	4
   580  00A8                     ___flsub@b:
   581                           
   582                           ; 4 bytes @ 0x8
   583  00A8                     	ds	4
   584  00AC                     ?_sprintf:
   585  00AC                     sprintf@f:	
   586                           ; 2 bytes @ 0xC
   587                           
   588                           
   589                           ; 1 bytes @ 0xC
   590  00AC                     	ds	5
   591  00B1                     ??_sprintf:
   592                           
   593                           ; 1 bytes @ 0x11
   594  00B1                     	ds	5
   595  00B6                     _sprintf$1013:
   596                           
   597                           ; 4 bytes @ 0x16
   598  00B6                     	ds	4
   599  00BA                     sprintf@ap:
   600                           
   601                           ; 1 bytes @ 0x1A
   602  00BA                     	ds	1
   603  00BB                     sprintf@flag:
   604                           
   605                           ; 2 bytes @ 0x1B
   606  00BB                     	ds	2
   607  00BD                     sprintf@val:
   608                           
   609                           ; 4 bytes @ 0x1D
   610  00BD                     	ds	4
   611  00C1                     sprintf@eexp:
   612                           
   613                           ; 2 bytes @ 0x21
   614  00C1                     	ds	2
   615  00C3                     sprintf@tmpval:
   616                           
   617                           ; 4 bytes @ 0x23
   618  00C3                     	ds	4
   619  00C7                     sprintf@sp:
   620                           
   621                           ; 1 bytes @ 0x27
   622  00C7                     	ds	1
   623  00C8                     sprintf@prec:
   624                           
   625                           ; 2 bytes @ 0x28
   626  00C8                     	ds	2
   627  00CA                     sprintf@fval:
   628                           
   629                           ; 4 bytes @ 0x2A
   630  00CA                     	ds	4
   631  00CE                     sprintf@c:
   632                           
   633                           ; 1 bytes @ 0x2E
   634  00CE                     	ds	1
   635  00CF                     ??_main:
   636                           
   637                           ; 1 bytes @ 0x2F
   638  00CF                     	ds	3
   639                           
   640                           	psect	cstackCOMMON
   641  0070                     __pcstackCOMMON:
   642  0070                     ?_isdigit:
   643  0070                     ?_Lcd_Port:	
   644                           ; 1 bit 
   645                           
   646  0070                     ?_Lcd_Cmd:	
   647                           ; 1 bytes @ 0x0
   648                           
   649  0070                     ?_Lcd_Clear:	
   650                           ; 1 bytes @ 0x0
   651                           
   652  0070                     ?_Lcd_Init:	
   653                           ; 1 bytes @ 0x0
   654                           
   655  0070                     ?_Lcd_Write_Char:	
   656                           ; 1 bytes @ 0x0
   657                           
   658  0070                     ?_Interrupcao:	
   659                           ; 1 bytes @ 0x0
   660                           
   661  0070                     ?_main:	
   662                           ; 1 bytes @ 0x0
   663                           
   664  0070                     ?_conversorADC:	
   665                           ; 1 bytes @ 0x0
   666                           
   667  0070                     conversorADC@canal:	
   668                           ; 2 bytes @ 0x0
   669                           
   670                           
   671                           ; 2 bytes @ 0x0
   672  0070                     	ds	2
   673  0072                     ??_conversorADC:
   674                           
   675                           ; 1 bytes @ 0x2
   676  0072                     	ds	1
   677  0073                     ??_Interrupcao:
   678                           
   679                           ; 1 bytes @ 0x3
   680  0073                     	ds	2
   681  0075                     ??_isdigit:
   682  0075                     ??_Lcd_Port:	
   683                           ; 1 bytes @ 0x5
   684                           
   685  0075                     ??_Lcd_Clear:	
   686                           ; 1 bytes @ 0x5
   687                           
   688  0075                     ??___wmul:	
   689                           ; 1 bytes @ 0x5
   690                           
   691  0075                     ??___flneg:	
   692                           ; 1 bytes @ 0x5
   693                           
   694  0075                     ??___flsub:	
   695                           ; 1 bytes @ 0x5
   696                           
   697                           
   698                           	psect	cstackBANK0
   699  0020                     __pcstackBANK0:	
   700                           ; 1 bytes @ 0x5
   701                           
   702  0020                     ?___fleq:
   703  0020                     ?___flge:	
   704                           ; 1 bit 
   705                           
   706  0020                     ?__Umul8_16:	
   707                           ; 1 bit 
   708                           
   709  0020                     ?___wmul:	
   710                           ; 2 bytes @ 0x0
   711                           
   712  0020                     ?___awmod:	
   713                           ; 2 bytes @ 0x0
   714                           
   715  0020                     ?___lwmod:	
   716                           ; 2 bytes @ 0x0
   717                           
   718  0020                     ?__tdiv_to_l_:	
   719                           ; 2 bytes @ 0x0
   720                           
   721  0020                     ?__div_to_l_:	
   722                           ; 4 bytes @ 0x0
   723                           
   724  0020                     ?___lldiv:	
   725                           ; 4 bytes @ 0x0
   726                           
   727  0020                     ?___flneg:	
   728                           ; 4 bytes @ 0x0
   729                           
   730  0020                     ?___llmod:	
   731                           ; 4 bytes @ 0x0
   732                           
   733  0020                     Lcd_Port@a:	
   734                           ; 4 bytes @ 0x0
   735                           
   736  0020                     __Umul8_16@multiplicand:	
   737                           ; 1 bytes @ 0x0
   738                           
   739  0020                     _isdigit$819:	
   740                           ; 1 bytes @ 0x0
   741                           
   742  0020                     ___wmul@multiplier:	
   743                           ; 1 bytes @ 0x0
   744                           
   745  0020                     ___awmod@divisor:	
   746                           ; 2 bytes @ 0x0
   747                           
   748  0020                     ___lwmod@divisor:	
   749                           ; 2 bytes @ 0x0
   750                           
   751  0020                     ___lldiv@divisor:	
   752                           ; 2 bytes @ 0x0
   753                           
   754  0020                     __div_to_l_@f1:	
   755                           ; 4 bytes @ 0x0
   756                           
   757  0020                     ___fleq@ff1:	
   758                           ; 4 bytes @ 0x0
   759                           
   760  0020                     ___flge@ff1:	
   761                           ; 4 bytes @ 0x0
   762                           
   763  0020                     ___flneg@f1:	
   764                           ; 4 bytes @ 0x0
   765                           
   766  0020                     __tdiv_to_l_@f1:	
   767                           ; 4 bytes @ 0x0
   768                           
   769  0020                     ___llmod@divisor:	
   770                           ; 4 bytes @ 0x0
   771                           
   772                           
   773                           ; 4 bytes @ 0x0
   774  0020                     	ds	1
   775  0021                     ??_Lcd_Cmd:
   776  0021                     ??_Lcd_Write_Char:	
   777                           ; 1 bytes @ 0x1
   778                           
   779  0021                     isdigit@c:	
   780                           ; 1 bytes @ 0x1
   781                           
   782                           
   783                           ; 1 bytes @ 0x1
   784  0021                     	ds	1
   785  0022                     ??__Umul8_16:
   786  0022                     Lcd_Write_Char@temp:	
   787                           ; 1 bytes @ 0x2
   788                           
   789  0022                     ___wmul@multiplicand:	
   790                           ; 1 bytes @ 0x2
   791                           
   792  0022                     ___awmod@dividend:	
   793                           ; 2 bytes @ 0x2
   794                           
   795  0022                     ___lwmod@dividend:	
   796                           ; 2 bytes @ 0x2
   797                           
   798                           
   799                           ; 2 bytes @ 0x2
   800  0022                     	ds	1
   801  0023                     Lcd_Cmd@a:
   802  0023                     Lcd_Write_Char@y:	
   803                           ; 1 bytes @ 0x3
   804                           
   805                           
   806                           ; 1 bytes @ 0x3
   807  0023                     	ds	1
   808  0024                     ?_Lcd_Set_Cursor:
   809  0024                     ??_Lcd_Init:	
   810                           ; 1 bytes @ 0x4
   811                           
   812  0024                     ??___awmod:	
   813                           ; 1 bytes @ 0x4
   814                           
   815  0024                     ??___lwmod:	
   816                           ; 1 bytes @ 0x4
   817                           
   818  0024                     Lcd_Set_Cursor@b:	
   819                           ; 1 bytes @ 0x4
   820                           
   821  0024                     Lcd_Write_Char@a:	
   822                           ; 1 bytes @ 0x4
   823                           
   824  0024                     ___wmul@product:	
   825                           ; 1 bytes @ 0x4
   826                           
   827  0024                     __Umul8_16@product:	
   828                           ; 2 bytes @ 0x4
   829                           
   830  0024                     ___lldiv@dividend:	
   831                           ; 2 bytes @ 0x4
   832                           
   833  0024                     __div_to_l_@f2:	
   834                           ; 4 bytes @ 0x4
   835                           
   836  0024                     ___fleq@ff2:	
   837                           ; 4 bytes @ 0x4
   838                           
   839  0024                     ___flge@ff2:	
   840                           ; 4 bytes @ 0x4
   841                           
   842  0024                     __tdiv_to_l_@f2:	
   843                           ; 4 bytes @ 0x4
   844                           
   845  0024                     ___llmod@dividend:	
   846                           ; 4 bytes @ 0x4
   847                           
   848                           
   849                           ; 4 bytes @ 0x4
   850  0024                     	ds	1
   851  0025                     ??_Lcd_Set_Cursor:
   852  0025                     ?_Lcd_Write_String:	
   853                           ; 1 bytes @ 0x5
   854                           
   855  0025                     ___awmod@counter:	
   856                           ; 1 bytes @ 0x5
   857                           
   858  0025                     ___lwmod@counter:	
   859                           ; 1 bytes @ 0x5
   860                           
   861  0025                     Lcd_Write_String@a:	
   862                           ; 1 bytes @ 0x5
   863                           
   864                           
   865                           ; 2 bytes @ 0x5
   866  0025                     	ds	1
   867  0026                     ?___lwdiv:
   868  0026                     ___awmod@sign:	
   869                           ; 2 bytes @ 0x6
   870                           
   871  0026                     ___lwdiv@divisor:	
   872                           ; 1 bytes @ 0x6
   873                           
   874  0026                     __Umul8_16@word_mpld:	
   875                           ; 2 bytes @ 0x6
   876                           
   877                           
   878                           ; 2 bytes @ 0x6
   879  0026                     	ds	1
   880  0027                     ??_Lcd_Write_String:
   881  0027                     ?___awdiv:	
   882                           ; 1 bytes @ 0x7
   883                           
   884  0027                     Lcd_Set_Cursor@a:	
   885                           ; 2 bytes @ 0x7
   886                           
   887  0027                     ___awdiv@divisor:	
   888                           ; 1 bytes @ 0x7
   889                           
   890                           
   891                           ; 2 bytes @ 0x7
   892  0027                     	ds	1
   893  0028                     ??__tdiv_to_l_:
   894  0028                     ??__div_to_l_:	
   895                           ; 1 bytes @ 0x8
   896                           
   897  0028                     ??___lldiv:	
   898                           ; 1 bytes @ 0x8
   899                           
   900  0028                     ??___fleq:	
   901                           ; 1 bytes @ 0x8
   902                           
   903  0028                     ??___flge:	
   904                           ; 1 bytes @ 0x8
   905                           
   906  0028                     ??___llmod:	
   907                           ; 1 bytes @ 0x8
   908                           
   909  0028                     Lcd_Set_Cursor@z:	
   910                           ; 1 bytes @ 0x8
   911                           
   912  0028                     __Umul8_16@multiplier:	
   913                           ; 1 bytes @ 0x8
   914                           
   915  0028                     ___lwdiv@dividend:	
   916                           ; 1 bytes @ 0x8
   917                           
   918                           
   919                           ; 2 bytes @ 0x8
   920  0028                     	ds	1
   921  0029                     Lcd_Set_Cursor@y:
   922  0029                     ___llmod@counter:	
   923                           ; 1 bytes @ 0x9
   924                           
   925  0029                     ___awdiv@dividend:	
   926                           ; 1 bytes @ 0x9
   927                           
   928  0029                     ___lldiv@quotient:	
   929                           ; 2 bytes @ 0x9
   930                           
   931  0029                     __div_to_l_@quot:	
   932                           ; 4 bytes @ 0x9
   933                           
   934                           
   935                           ; 4 bytes @ 0x9
   936  0029                     	ds	1
   937  002A                     ??___lwdiv:
   938  002A                     Lcd_Set_Cursor@temp:	
   939                           ; 1 bytes @ 0xA
   940                           
   941  002A                     Lcd_Write_String@i:	
   942                           ; 1 bytes @ 0xA
   943                           
   944                           
   945                           ; 2 bytes @ 0xA
   946  002A                     	ds	1
   947  002B                     ??___awdiv:
   948  002B                     ___lwdiv@quotient:	
   949                           ; 1 bytes @ 0xB
   950                           
   951                           
   952                           ; 2 bytes @ 0xB
   953  002B                     	ds	1
   954  002C                     ___awdiv@counter:
   955  002C                     __tdiv_to_l_@quot:	
   956                           ; 1 bytes @ 0xC
   957                           
   958                           
   959                           ; 4 bytes @ 0xC
   960  002C                     	ds	1
   961  002D                     ___lldiv@counter:
   962  002D                     ___awdiv@sign:	
   963                           ; 1 bytes @ 0xD
   964                           
   965  002D                     __div_to_l_@cntr:	
   966                           ; 1 bytes @ 0xD
   967                           
   968  002D                     ___lwdiv@counter:	
   969                           ; 1 bytes @ 0xD
   970                           
   971                           
   972                           ; 1 bytes @ 0xD
   973  002D                     	ds	1
   974  002E                     __div_to_l_@exp1:
   975  002E                     ___awdiv@quotient:	
   976                           ; 1 bytes @ 0xE
   977                           
   978                           
   979                           ; 2 bytes @ 0xE
   980  002E                     	ds	2
   981  0030                     ?___flmul:
   982  0030                     ?___xxtofl:	
   983                           ; 4 bytes @ 0x10
   984                           
   985  0030                     __tdiv_to_l_@cntr:	
   986                           ; 4 bytes @ 0x10
   987                           
   988  0030                     ___flmul@b:	
   989                           ; 1 bytes @ 0x10
   990                           
   991  0030                     ___xxtofl@val:	
   992                           ; 4 bytes @ 0x10
   993                           
   994                           
   995                           ; 4 bytes @ 0x10
   996  0030                     	ds	1
   997  0031                     __tdiv_to_l_@exp1:
   998                           
   999                           ; 1 bytes @ 0x11
  1000  0031                     	ds	3
  1001  0034                     ??___xxtofl:
  1002  0034                     ___flmul@a:	
  1003                           ; 1 bytes @ 0x14
  1004                           
  1005                           
  1006                           ; 4 bytes @ 0x14
  1007  0034                     	ds	4
  1008  0038                     ??___flmul:
  1009  0038                     ___xxtofl@sign:	
  1010                           ; 1 bytes @ 0x18
  1011                           
  1012                           
  1013                           ; 1 bytes @ 0x18
  1014  0038                     	ds	1
  1015  0039                     ___xxtofl@exp:
  1016                           
  1017                           ; 1 bytes @ 0x19
  1018  0039                     	ds	1
  1019  003A                     ___xxtofl@arg:
  1020                           
  1021                           ; 4 bytes @ 0x1A
  1022  003A                     	ds	3
  1023  003D                     ___flmul@sign:
  1024                           
  1025                           ; 1 bytes @ 0x1D
  1026  003D                     	ds	1
  1027  003E                     ___flmul@aexp:
  1028                           
  1029                           ; 1 bytes @ 0x1E
  1030  003E                     	ds	1
  1031  003F                     ___flmul@grs:
  1032                           
  1033                           ; 4 bytes @ 0x1F
  1034  003F                     	ds	4
  1035  0043                     ___flmul@bexp:
  1036                           
  1037                           ; 1 bytes @ 0x23
  1038  0043                     	ds	1
  1039  0044                     ___flmul@prod:
  1040                           
  1041                           ; 4 bytes @ 0x24
  1042  0044                     	ds	4
  1043  0048                     ___flmul@temp:
  1044                           
  1045                           ; 2 bytes @ 0x28
  1046  0048                     	ds	2
  1047  004A                     ?_fround:
  1048  004A                     ?_scale:	
  1049                           ; 4 bytes @ 0x2A
  1050                           
  1051                           
  1052                           ; 4 bytes @ 0x2A
  1053  004A                     	ds	4
  1054  004E                     ??_fround:
  1055  004E                     ??_scale:	
  1056                           ; 1 bytes @ 0x2E
  1057                           
  1058                           
  1059                           ; 1 bytes @ 0x2E
  1060  004E                     	ds	7
  1061  0055                     _fround$1011:
  1062                           
  1063                           ; 4 bytes @ 0x35
  1064  0055                     	ds	3
  1065  0058                     _scale$1012:
  1066                           
  1067                           ; 4 bytes @ 0x38
  1068  0058                     	ds	1
  1069  0059                     _fround$1010:
  1070                           
  1071                           ; 4 bytes @ 0x39
  1072  0059                     	ds	3
  1073  005C                     scale@scl:
  1074                           
  1075                           ; 1 bytes @ 0x3C
  1076  005C                     	ds	1
  1077  005D                     ?___fltol:
  1078  005D                     fround@prec:	
  1079                           ; 4 bytes @ 0x3D
  1080                           
  1081  005D                     ___fltol@f1:	
  1082                           ; 1 bytes @ 0x3D
  1083                           
  1084                           
  1085                           ; 4 bytes @ 0x3D
  1086  005D                     	ds	1
  1087  005E                     ?___fladd:
  1088  005E                     ___fladd@b:	
  1089                           ; 4 bytes @ 0x3E
  1090                           
  1091                           
  1092                           ; 4 bytes @ 0x3E
  1093  005E                     	ds	3
  1094  0061                     ??___fltol:
  1095                           
  1096                           ; 1 bytes @ 0x41
  1097  0061                     	ds	1
  1098  0062                     ___fladd@a:
  1099                           
  1100                           ; 4 bytes @ 0x42
  1101  0062                     	ds	4
  1102  0066                     ??___fladd:
  1103  0066                     ___fltol@sign1:	
  1104                           ; 1 bytes @ 0x46
  1105                           
  1106                           
  1107                           ; 1 bytes @ 0x46
  1108  0066                     	ds	1
  1109  0067                     ___fltol@exp1:
  1110                           
  1111                           ; 1 bytes @ 0x47
  1112  0067                     	ds	7
  1113                           
  1114                           	psect	maintext
  1115  1286                     __pmaintext:	
  1116 ;;
  1117 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1118 ;;
  1119 ;; *************** function _main *****************
  1120 ;; Defined at:
  1121 ;;		line 61 in file "Main.c"
  1122 ;; Parameters:    Size  Location     Type
  1123 ;;		None
  1124 ;; Auto vars:     Size  Location     Type
  1125 ;;  msg            20   20[BANK3 ] unsigned char [20]
  1126 ;;  msg1           20    0[BANK3 ] unsigned char [20]
  1127 ;; Return value:  Size  Location     Type
  1128 ;;                  1    wreg      void 
  1129 ;; Registers used:
  1130 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1131 ;; Tracked objects:
  1132 ;;		On entry : B00/0
  1133 ;;		On exit  : 0/0
  1134 ;;		Unchanged: 0/0
  1135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1136 ;;      Params:         0       0       0       0       0
  1137 ;;      Locals:         0       0       0      40       0
  1138 ;;      Temps:          0       0       3       0       0
  1139 ;;      Totals:         0       0       3      40       0
  1140 ;;Total ram usage:       43 bytes
  1141 ;; Hardware stack levels required when called: 6
  1142 ;; This function calls:
  1143 ;;		_Lcd_Clear
  1144 ;;		_Lcd_Init
  1145 ;;		_Lcd_Set_Cursor
  1146 ;;		_Lcd_Write_String
  1147 ;;		___awdiv
  1148 ;;		___flge
  1149 ;;		___xxtofl
  1150 ;;		_sprintf
  1151 ;; This function is called by:
  1152 ;;		Startup code after reset
  1153 ;; This function uses a non-reentrant model
  1154 ;;
  1155                           
  1156                           
  1157                           ;psect for function _main
  1158  1286                     _main:
  1159  1286                     l4422:	
  1160                           ;incstack = 0
  1161                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1162                           
  1163                           
  1164                           ;Main.c: 63:  OPTION_REGbits.nRBPU = 0;
  1165  1286  1683               	bsf	3,5	;RP0=1, select bank1
  1166  1287  1303               	bcf	3,6	;RP1=0, select bank1
  1167  1288  1381               	bcf	1,7	;volatile
  1168                           
  1169                           ;Main.c: 64:  OPTION_REGbits.INTEDG = 0;
  1170  1289  1301               	bcf	1,6	;volatile
  1171                           
  1172                           ;Main.c: 65:  OPTION_REGbits.T0CS = 0;
  1173  128A  1281               	bcf	1,5	;volatile
  1174                           
  1175                           ;Main.c: 66:  OPTION_REGbits.PSA = 1;
  1176  128B  1581               	bsf	1,3	;volatile
  1177  128C                     l4424:
  1178                           
  1179                           ;Main.c: 67:  OPTION_REGbits.PS = 0b110;
  1180  128C  0801               	movf	1,w	;volatile
  1181  128D  39F8               	andlw	-8
  1182  128E  3806               	iorlw	6
  1183  128F  0081               	movwf	1	;volatile
  1184  1290                     l4426:
  1185                           
  1186                           ;Main.c: 70:  INTCONbits.GIE = 1;
  1187  1290  178B               	bsf	11,7	;volatile
  1188  1291                     l4428:
  1189                           
  1190                           ;Main.c: 71:  INTCONbits.PEIE = 1;
  1191  1291  170B               	bsf	11,6	;volatile
  1192  1292                     l4430:
  1193                           
  1194                           ;Main.c: 72:  INTCONbits.TMR0IE = 0;
  1195  1292  128B               	bcf	11,5	;volatile
  1196  1293                     l4432:
  1197                           
  1198                           ;Main.c: 73:  INTCONbits.INTE = 0;
  1199  1293  120B               	bcf	11,4	;volatile
  1200  1294                     l4434:
  1201                           
  1202                           ;Main.c: 74:  INTCONbits.TMR0IF = 0;
  1203  1294  110B               	bcf	11,2	;volatile
  1204  1295                     l4436:
  1205                           
  1206                           ;Main.c: 77:  PIE1bits.ADIE = 0;
  1207  1295  130C               	bcf	12,6	;volatile
  1208  1296                     l4438:
  1209                           
  1210                           ;Main.c: 78:  PIE1bits.TMR1IE = 1;
  1211  1296  140C               	bsf	12,0	;volatile
  1212  1297                     l4440:
  1213                           
  1214                           ;Main.c: 82:  PIR1bits.TMR1IF = 0;
  1215  1297  1283               	bcf	3,5	;RP0=0, select bank0
  1216  1298  1303               	bcf	3,6	;RP1=0, select bank0
  1217  1299  100C               	bcf	12,0	;volatile
  1218                           
  1219                           ;Main.c: 85:  T1CONbits.T1CKPS = 0b11;
  1220  129A  3030               	movlw	48
  1221  129B  0490               	iorwf	16,f	;volatile
  1222  129C                     l4442:
  1223                           
  1224                           ;Main.c: 86:  T1CONbits.TMR1CS = 0;
  1225  129C  1090               	bcf	16,1	;volatile
  1226  129D                     l4444:
  1227                           
  1228                           ;Main.c: 87:  T1CONbits.TMR1ON = 1;
  1229  129D  1410               	bsf	16,0	;volatile
  1230  129E                     l4446:
  1231                           
  1232                           ;Main.c: 90:  TMR1L = 220;
  1233  129E  30DC               	movlw	220
  1234  129F  008E               	movwf	14	;volatile
  1235  12A0                     l4448:
  1236                           
  1237                           ;Main.c: 91:  TMR1H = 11;
  1238  12A0  300B               	movlw	11
  1239  12A1  008F               	movwf	15	;volatile
  1240  12A2                     l4450:
  1241                           
  1242                           ;Main.c: 93:  ADCON0 = 0x00;
  1243  12A2  019F               	clrf	31	;volatile
  1244  12A3                     l4452:
  1245                           
  1246                           ;Main.c: 94:     ADCON1 = 0x80;
  1247  12A3  3080               	movlw	128
  1248  12A4  1683               	bsf	3,5	;RP0=1, select bank1
  1249  12A5  1303               	bcf	3,6	;RP1=0, select bank1
  1250  12A6  009F               	movwf	31	;volatile
  1251  12A7                     l4454:
  1252                           
  1253                           ;Main.c: 97:  ADRESL = 0;
  1254  12A7  019E               	clrf	30	;volatile
  1255  12A8                     l4456:
  1256                           
  1257                           ;Main.c: 98:  ADRESH = 0;
  1258  12A8  1283               	bcf	3,5	;RP0=0, select bank0
  1259  12A9  1303               	bcf	3,6	;RP1=0, select bank0
  1260  12AA  019E               	clrf	30	;volatile
  1261  12AB                     l4458:
  1262                           
  1263                           ;Main.c: 101:     TRISA = 0b11111111;
  1264  12AB  30FF               	movlw	255
  1265  12AC  1683               	bsf	3,5	;RP0=1, select bank1
  1266  12AD  1303               	bcf	3,6	;RP1=0, select bank1
  1267  12AE  0085               	movwf	5	;volatile
  1268  12AF                     l4460:
  1269                           
  1270                           ;Main.c: 102:     TRISB = 0b00000000;
  1271  12AF  0186               	clrf	6	;volatile
  1272  12B0                     l4462:
  1273                           
  1274                           ;Main.c: 103:     TRISD = 0b00000000;
  1275  12B0  0188               	clrf	8	;volatile
  1276  12B1                     l4464:
  1277                           
  1278                           ;Main.c: 106:     PORTBbits.RB0 = 0;
  1279  12B1  1283               	bcf	3,5	;RP0=0, select bank0
  1280  12B2  1303               	bcf	3,6	;RP1=0, select bank0
  1281  12B3  1006               	bcf	6,0	;volatile
  1282  12B4                     l4466:
  1283                           
  1284                           ;Main.c: 107:     PORTBbits.RB1 = 0;
  1285  12B4  1086               	bcf	6,1	;volatile
  1286  12B5                     l4468:
  1287                           
  1288                           ;Main.c: 108:     PORTDbits.RD0 = 0;
  1289  12B5  1008               	bcf	8,0	;volatile
  1290  12B6                     l4470:
  1291                           
  1292                           ;Main.c: 109:  Lcd_Init();
  1293  12B6  160A  158A  23DE  160A  118A  	fcall	_Lcd_Init
  1294  12BB                     l122:	
  1295                           ;Main.c: 111:     char msg[20];;Main.c: 112:     char msg1[20];;Main.c: 114:     while (
      +                          1) {
  1296                           
  1297  12BB  0064               	clrwdt	;# 
  1298  12BC                     l4472:
  1299                           
  1300                           ;Main.c: 116:   if (flag == 1){
  1301  12BC  1683               	bsf	3,5	;RP0=1, select bank3
  1302  12BD  1703               	bsf	3,6	;RP1=1, select bank3
  1303  12BE  034A               	decf	_flag^(0+384),w
  1304  12BF  044B               	iorwf	(_flag+1)^(0+384),w
  1305  12C0  1D03               	btfss	3,2
  1306  12C1  2AC3               	goto	u7861
  1307  12C2  2AC4               	goto	u7860
  1308  12C3                     u7861:
  1309  12C3  2AF0               	goto	l4482
  1310  12C4                     u7860:
  1311  12C4                     l4474:
  1312                           
  1313                           ;Main.c: 117:    Lcd_Clear();
  1314  12C4  160A  158A  2079  160A  118A  	fcall	_Lcd_Clear
  1315                           
  1316                           ;Main.c: 118:    Lcd_Set_Cursor(1, 1);
  1317  12C9  1283               	bcf	3,5	;RP0=0, select bank0
  1318  12CA  1303               	bcf	3,6	;RP1=0, select bank0
  1319  12CB  01A4               	clrf	Lcd_Set_Cursor@b
  1320  12CC  0AA4               	incf	Lcd_Set_Cursor@b,f
  1321  12CD  3001               	movlw	1
  1322  12CE  160A  158A  2386  160A  118A  	fcall	_Lcd_Set_Cursor
  1323  12D3                     l4476:
  1324                           
  1325                           ;Main.c: 119:    Lcd_Write_String("Atualizando...");
  1326  12D3  30B1               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1327  12D4  1283               	bcf	3,5	;RP0=0, select bank0
  1328  12D5  1303               	bcf	3,6	;RP1=0, select bank0
  1329  12D6  00A5               	movwf	Lcd_Write_String@a
  1330  12D7  3080               	movlw	128
  1331  12D8  00A6               	movwf	Lcd_Write_String@a+1
  1332  12D9  160A  158A  21AC  160A  118A  	fcall	_Lcd_Write_String
  1333  12DE                     l4478:
  1334                           
  1335                           ;Main.c: 120:    _delay((unsigned long)((150)*(20000000/4000.0)));
  1336  12DE  3004               	movlw	4
  1337  12DF  1683               	bsf	3,5	;RP0=1, select bank1
  1338  12E0  1303               	bcf	3,6	;RP1=0, select bank1
  1339  12E1  00D1               	movwf	(??_main^(0+128)+2)
  1340  12E2  30CF               	movlw	207
  1341  12E3  00D0               	movwf	(??_main^(0+128)+1)
  1342  12E4  3001               	movlw	1
  1343  12E5  00CF               	movwf	??_main^(0+128)
  1344  12E6                     u7907:
  1345  12E6  0BCF               	decfsz	??_main^(0+128),f
  1346  12E7  2AE6               	goto	u7907
  1347  12E8  0BD0               	decfsz	(??_main^(0+128)+1),f
  1348  12E9  2AE6               	goto	u7907
  1349  12EA  0BD1               	decfsz	(??_main^(0+128)+2),f
  1350  12EB  2AE6               	goto	u7907
  1351  12EC                     l4480:
  1352                           
  1353                           ;Main.c: 121:    flag = 0;
  1354  12EC  1683               	bsf	3,5	;RP0=1, select bank3
  1355  12ED  1703               	bsf	3,6	;RP1=1, select bank3
  1356  12EE  01CA               	clrf	_flag^(0+384)
  1357  12EF  01CB               	clrf	(_flag+1)^(0+384)
  1358  12F0                     l4482:
  1359                           
  1360                           ;Main.c: 124:         temperatura = (ADC_temp/2)-1;
  1361  12F0  0849               	movf	(_ADC_temp+1)^(0+384),w
  1362  12F1  1283               	bcf	3,5	;RP0=0, select bank0
  1363  12F2  1303               	bcf	3,6	;RP1=0, select bank0
  1364  12F3  00AA               	movwf	___awdiv@dividend+1
  1365  12F4  1683               	bsf	3,5	;RP0=1, select bank3
  1366  12F5  1703               	bsf	3,6	;RP1=1, select bank3
  1367  12F6  0848               	movf	_ADC_temp^(0+384),w
  1368  12F7  1283               	bcf	3,5	;RP0=0, select bank0
  1369  12F8  1303               	bcf	3,6	;RP1=0, select bank0
  1370  12F9  00A9               	movwf	___awdiv@dividend
  1371  12FA  3002               	movlw	2
  1372  12FB  00A7               	movwf	___awdiv@divisor
  1373  12FC  3000               	movlw	0
  1374  12FD  00A8               	movwf	___awdiv@divisor+1
  1375  12FE  160A  118A  2010  160A  118A  	fcall	___awdiv
  1376  1303  1283               	bcf	3,5	;RP0=0, select bank0
  1377  1304  1303               	bcf	3,6	;RP1=0, select bank0
  1378  1305  0827               	movf	?___awdiv,w
  1379  1306  3EFF               	addlw	255
  1380  1307  1683               	bsf	3,5	;RP0=1, select bank1
  1381  1308  1303               	bcf	3,6	;RP1=0, select bank1
  1382  1309  00CF               	movwf	??_main^(0+128)
  1383  130A  1283               	bcf	3,5	;RP0=0, select bank0
  1384  130B  1303               	bcf	3,6	;RP1=0, select bank0
  1385  130C  0828               	movf	?___awdiv+1,w
  1386  130D  1803               	skipnc
  1387  130E  3E01               	addlw	1
  1388  130F  3EFF               	addlw	255
  1389  1310  1683               	bsf	3,5	;RP0=1, select bank1
  1390  1311  1303               	bcf	3,6	;RP1=0, select bank1
  1391  1312  00D0               	movwf	(??_main+1)^(0+128)
  1392  1313  084F               	movf	??_main^(0+128),w
  1393  1314  1283               	bcf	3,5	;RP0=0, select bank0
  1394  1315  1303               	bcf	3,6	;RP1=0, select bank0
  1395  1316  00B0               	movwf	___xxtofl@val
  1396  1317  1683               	bsf	3,5	;RP0=1, select bank1
  1397  1318  1303               	bcf	3,6	;RP1=0, select bank1
  1398  1319  0850               	movf	(??_main+1)^(0+128),w
  1399  131A  1283               	bcf	3,5	;RP0=0, select bank0
  1400  131B  1303               	bcf	3,6	;RP1=0, select bank0
  1401  131C  00B1               	movwf	___xxtofl@val+1
  1402  131D  3000               	movlw	0
  1403  131E  1BB1               	btfsc	___xxtofl@val+1,7
  1404  131F  30FF               	movlw	255
  1405  1320  00B2               	movwf	___xxtofl@val+2
  1406  1321  00B3               	movwf	___xxtofl@val+3
  1407  1322  3001               	movlw	1
  1408  1323  160A  158A  25C9  160A  118A  	fcall	___xxtofl
  1409  1328  1283               	bcf	3,5	;RP0=0, select bank0
  1410  1329  1303               	bcf	3,6	;RP1=0, select bank0
  1411  132A  0833               	movf	?___xxtofl+3,w
  1412  132B  1683               	bsf	3,5	;RP0=1, select bank3
  1413  132C  1703               	bsf	3,6	;RP1=1, select bank3
  1414  132D  00C3               	movwf	(_temperatura+3)^(0+384)
  1415  132E  1283               	bcf	3,5	;RP0=0, select bank0
  1416  132F  1303               	bcf	3,6	;RP1=0, select bank0
  1417  1330  0832               	movf	?___xxtofl+2,w
  1418  1331  1683               	bsf	3,5	;RP0=1, select bank3
  1419  1332  1703               	bsf	3,6	;RP1=1, select bank3
  1420  1333  00C2               	movwf	(_temperatura+2)^(0+384)
  1421  1334  1283               	bcf	3,5	;RP0=0, select bank0
  1422  1335  1303               	bcf	3,6	;RP1=0, select bank0
  1423  1336  0831               	movf	?___xxtofl+1,w
  1424  1337  1683               	bsf	3,5	;RP0=1, select bank3
  1425  1338  1703               	bsf	3,6	;RP1=1, select bank3
  1426  1339  00C1               	movwf	(_temperatura+1)^(0+384)
  1427  133A  1283               	bcf	3,5	;RP0=0, select bank0
  1428  133B  1303               	bcf	3,6	;RP1=0, select bank0
  1429  133C  0830               	movf	?___xxtofl,w
  1430  133D  1683               	bsf	3,5	;RP0=1, select bank3
  1431  133E  1703               	bsf	3,6	;RP1=1, select bank3
  1432  133F  00C0               	movwf	_temperatura^(0+384)
  1433  1340                     l4484:
  1434                           
  1435                           ;Main.c: 125:         tensao = ADC_tensao;
  1436  1340  0846               	movf	_ADC_tensao^(0+384),w
  1437  1341  1283               	bcf	3,5	;RP0=0, select bank0
  1438  1342  1303               	bcf	3,6	;RP1=0, select bank0
  1439  1343  00B0               	movwf	___xxtofl@val
  1440  1344  1683               	bsf	3,5	;RP0=1, select bank3
  1441  1345  1703               	bsf	3,6	;RP1=1, select bank3
  1442  1346  0847               	movf	(_ADC_tensao+1)^(0+384),w
  1443  1347  1283               	bcf	3,5	;RP0=0, select bank0
  1444  1348  1303               	bcf	3,6	;RP1=0, select bank0
  1445  1349  00B1               	movwf	___xxtofl@val+1
  1446  134A  3000               	movlw	0
  1447  134B  1BB1               	btfsc	___xxtofl@val+1,7
  1448  134C  30FF               	movlw	255
  1449  134D  00B2               	movwf	___xxtofl@val+2
  1450  134E  00B3               	movwf	___xxtofl@val+3
  1451  134F  3001               	movlw	1
  1452  1350  160A  158A  25C9  160A  118A  	fcall	___xxtofl
  1453  1355  1283               	bcf	3,5	;RP0=0, select bank0
  1454  1356  1303               	bcf	3,6	;RP1=0, select bank0
  1455  1357  0833               	movf	?___xxtofl+3,w
  1456  1358  1683               	bsf	3,5	;RP0=1, select bank3
  1457  1359  1703               	bsf	3,6	;RP1=1, select bank3
  1458  135A  00BF               	movwf	(_tensao+3)^(0+384)
  1459  135B  1283               	bcf	3,5	;RP0=0, select bank0
  1460  135C  1303               	bcf	3,6	;RP1=0, select bank0
  1461  135D  0832               	movf	?___xxtofl+2,w
  1462  135E  1683               	bsf	3,5	;RP0=1, select bank3
  1463  135F  1703               	bsf	3,6	;RP1=1, select bank3
  1464  1360  00BE               	movwf	(_tensao+2)^(0+384)
  1465  1361  1283               	bcf	3,5	;RP0=0, select bank0
  1466  1362  1303               	bcf	3,6	;RP1=0, select bank0
  1467  1363  0831               	movf	?___xxtofl+1,w
  1468  1364  1683               	bsf	3,5	;RP0=1, select bank3
  1469  1365  1703               	bsf	3,6	;RP1=1, select bank3
  1470  1366  00BD               	movwf	(_tensao+1)^(0+384)
  1471  1367  1283               	bcf	3,5	;RP0=0, select bank0
  1472  1368  1303               	bcf	3,6	;RP1=0, select bank0
  1473  1369  0830               	movf	?___xxtofl,w
  1474  136A  1683               	bsf	3,5	;RP0=1, select bank3
  1475  136B  1703               	bsf	3,6	;RP1=1, select bank3
  1476  136C  00BC               	movwf	_tensao^(0+384)
  1477  136D                     l4486:
  1478                           
  1479                           ;Main.c: 126:         if (temperatura <= -1 && tensao <= 0){
  1480  136D  30BF               	movlw	191
  1481  136E  1283               	bcf	3,5	;RP0=0, select bank0
  1482  136F  1303               	bcf	3,6	;RP1=0, select bank0
  1483  1370  00A3               	movwf	___flge@ff1+3
  1484  1371  3080               	movlw	128
  1485  1372  00A2               	movwf	___flge@ff1+2
  1486  1373  3000               	movlw	0
  1487  1374  00A1               	movwf	___flge@ff1+1
  1488  1375  3000               	movlw	0
  1489  1376  00A0               	movwf	___flge@ff1
  1490  1377  1683               	bsf	3,5	;RP0=1, select bank3
  1491  1378  1703               	bsf	3,6	;RP1=1, select bank3
  1492  1379  0843               	movf	(_temperatura+3)^(0+384),w
  1493  137A  1283               	bcf	3,5	;RP0=0, select bank0
  1494  137B  1303               	bcf	3,6	;RP1=0, select bank0
  1495  137C  00A7               	movwf	___flge@ff2+3
  1496  137D  1683               	bsf	3,5	;RP0=1, select bank3
  1497  137E  1703               	bsf	3,6	;RP1=1, select bank3
  1498  137F  0842               	movf	(_temperatura+2)^(0+384),w
  1499  1380  1283               	bcf	3,5	;RP0=0, select bank0
  1500  1381  1303               	bcf	3,6	;RP1=0, select bank0
  1501  1382  00A6               	movwf	___flge@ff2+2
  1502  1383  1683               	bsf	3,5	;RP0=1, select bank3
  1503  1384  1703               	bsf	3,6	;RP1=1, select bank3
  1504  1385  0841               	movf	(_temperatura+1)^(0+384),w
  1505  1386  1283               	bcf	3,5	;RP0=0, select bank0
  1506  1387  1303               	bcf	3,6	;RP1=0, select bank0
  1507  1388  00A5               	movwf	___flge@ff2+1
  1508  1389  1683               	bsf	3,5	;RP0=1, select bank3
  1509  138A  1703               	bsf	3,6	;RP1=1, select bank3
  1510  138B  0840               	movf	_temperatura^(0+384),w
  1511  138C  1283               	bcf	3,5	;RP0=0, select bank0
  1512  138D  1303               	bcf	3,6	;RP1=0, select bank0
  1513  138E  00A4               	movwf	___flge@ff2
  1514  138F  160A  158A  2525  160A  118A  	fcall	___flge
  1515  1394  1C03               	btfss	3,0
  1516  1395  2B97               	goto	u7871
  1517  1396  2B98               	goto	u7870
  1518  1397                     u7871:
  1519  1397  2BE5               	goto	l4496
  1520  1398                     u7870:
  1521  1398                     l4488:
  1522  1398  3000               	movlw	0
  1523  1399  1283               	bcf	3,5	;RP0=0, select bank0
  1524  139A  1303               	bcf	3,6	;RP1=0, select bank0
  1525  139B  00A3               	movwf	___flge@ff1+3
  1526  139C  3000               	movlw	0
  1527  139D  00A2               	movwf	___flge@ff1+2
  1528  139E  3000               	movlw	0
  1529  139F  00A1               	movwf	___flge@ff1+1
  1530  13A0  3000               	movlw	0
  1531  13A1  00A0               	movwf	___flge@ff1
  1532  13A2  1683               	bsf	3,5	;RP0=1, select bank3
  1533  13A3  1703               	bsf	3,6	;RP1=1, select bank3
  1534  13A4  083F               	movf	(_tensao+3)^(0+384),w
  1535  13A5  1283               	bcf	3,5	;RP0=0, select bank0
  1536  13A6  1303               	bcf	3,6	;RP1=0, select bank0
  1537  13A7  00A7               	movwf	___flge@ff2+3
  1538  13A8  1683               	bsf	3,5	;RP0=1, select bank3
  1539  13A9  1703               	bsf	3,6	;RP1=1, select bank3
  1540  13AA  083E               	movf	(_tensao+2)^(0+384),w
  1541  13AB  1283               	bcf	3,5	;RP0=0, select bank0
  1542  13AC  1303               	bcf	3,6	;RP1=0, select bank0
  1543  13AD  00A6               	movwf	___flge@ff2+2
  1544  13AE  1683               	bsf	3,5	;RP0=1, select bank3
  1545  13AF  1703               	bsf	3,6	;RP1=1, select bank3
  1546  13B0  083D               	movf	(_tensao+1)^(0+384),w
  1547  13B1  1283               	bcf	3,5	;RP0=0, select bank0
  1548  13B2  1303               	bcf	3,6	;RP1=0, select bank0
  1549  13B3  00A5               	movwf	___flge@ff2+1
  1550  13B4  1683               	bsf	3,5	;RP0=1, select bank3
  1551  13B5  1703               	bsf	3,6	;RP1=1, select bank3
  1552  13B6  083C               	movf	_tensao^(0+384),w
  1553  13B7  1283               	bcf	3,5	;RP0=0, select bank0
  1554  13B8  1303               	bcf	3,6	;RP1=0, select bank0
  1555  13B9  00A4               	movwf	___flge@ff2
  1556  13BA  160A  158A  2525  160A  118A  	fcall	___flge
  1557  13BF  1C03               	btfss	3,0
  1558  13C0  2BC2               	goto	u7881
  1559  13C1  2BC3               	goto	u7880
  1560  13C2                     u7881:
  1561  13C2  2BE5               	goto	l4496
  1562  13C3                     u7880:
  1563  13C3                     l4490:
  1564                           
  1565                           ;Main.c: 127:             sprintf (msg, "Inicializando");
  1566  13C3  30C0               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1567  13C4  1683               	bsf	3,5	;RP0=1, select bank1
  1568  13C5  1303               	bcf	3,6	;RP1=0, select bank1
  1569  13C6  00CF               	movwf	??_main^(0+128)
  1570  13C7  084F               	movf	??_main^(0+128),w
  1571  13C8  00AC               	movwf	sprintf@f^(0+128)
  1572  13C9  30A4               	movlw	(low (main@msg| (0+256)))& (0+255)
  1573  13CA  120A  118A  2027  160A  118A  	fcall	_sprintf
  1574  13CF                     l4492:
  1575                           
  1576                           ;Main.c: 128:             Lcd_Set_Cursor(1, 1);
  1577  13CF  1283               	bcf	3,5	;RP0=0, select bank0
  1578  13D0  1303               	bcf	3,6	;RP1=0, select bank0
  1579  13D1  01A4               	clrf	Lcd_Set_Cursor@b
  1580  13D2  0AA4               	incf	Lcd_Set_Cursor@b,f
  1581  13D3  3001               	movlw	1
  1582  13D4  160A  158A  2386  160A  118A  	fcall	_Lcd_Set_Cursor
  1583  13D9                     l4494:
  1584                           
  1585                           ;Main.c: 129:             Lcd_Write_String(msg);
  1586  13D9  30A4               	movlw	(low (main@msg| (0+256)))& (0+255)
  1587  13DA  1283               	bcf	3,5	;RP0=0, select bank0
  1588  13DB  1303               	bcf	3,6	;RP1=0, select bank0
  1589  13DC  00A5               	movwf	Lcd_Write_String@a
  1590  13DD  3001               	movlw	1
  1591  13DE  00A6               	movwf	Lcd_Write_String@a+1
  1592  13DF  160A  158A  21AC  160A  118A  	fcall	_Lcd_Write_String
  1593                           
  1594                           ;Main.c: 130:         }
  1595  13E4  2ABB               	goto	l122
  1596  13E5                     l4496:
  1597                           
  1598                           ;Main.c: 133:         sprintf (msg1,"Temp = %.1f   ",temperatura);
  1599  13E5  30A2               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1600  13E6  1683               	bsf	3,5	;RP0=1, select bank1
  1601  13E7  1303               	bcf	3,6	;RP1=0, select bank1
  1602  13E8  00CF               	movwf	??_main^(0+128)
  1603  13E9  084F               	movf	??_main^(0+128),w
  1604  13EA  00AC               	movwf	sprintf@f^(0+128)
  1605  13EB  1683               	bsf	3,5	;RP0=1, select bank3
  1606  13EC  1703               	bsf	3,6	;RP1=1, select bank3
  1607  13ED  0843               	movf	(_temperatura+3)^(0+384),w
  1608  13EE  1683               	bsf	3,5	;RP0=1, select bank1
  1609  13EF  1303               	bcf	3,6	;RP1=0, select bank1
  1610  13F0  00B0               	movwf	((?_sprintf+3)^(0+128)+1)
  1611  13F1  1683               	bsf	3,5	;RP0=1, select bank3
  1612  13F2  1703               	bsf	3,6	;RP1=1, select bank3
  1613  13F3  0842               	movf	(_temperatura+2)^(0+384),w
  1614  13F4  1683               	bsf	3,5	;RP0=1, select bank1
  1615  13F5  1303               	bcf	3,6	;RP1=0, select bank1
  1616  13F6  00AF               	movwf	((?_sprintf+2)^(0+128)+1)
  1617  13F7  1683               	bsf	3,5	;RP0=1, select bank3
  1618  13F8  1703               	bsf	3,6	;RP1=1, select bank3
  1619  13F9  0841               	movf	(_temperatura+1)^(0+384),w
  1620  13FA  1683               	bsf	3,5	;RP0=1, select bank1
  1621  13FB  1303               	bcf	3,6	;RP1=0, select bank1
  1622  13FC  00AE               	movwf	((?_sprintf+1)^(0+128)+1)
  1623  13FD  1683               	bsf	3,5	;RP0=1, select bank3
  1624  13FE  1703               	bsf	3,6	;RP1=1, select bank3
  1625  13FF  0840               	movf	_temperatura^(0+384),w
  1626  1400  1683               	bsf	3,5	;RP0=1, select bank1
  1627  1401  1303               	bcf	3,6	;RP1=0, select bank1
  1628  1402  00AD               	movwf	(?_sprintf^(0+128)+1)
  1629  1403  3090               	movlw	(low (main@msg1| (0+256)))& (0+255)
  1630  1404  120A  118A  2027  160A  118A  	fcall	_sprintf
  1631  1409                     l4498:
  1632                           
  1633                           ;Main.c: 134:         Lcd_Set_Cursor(1, 1);
  1634  1409  1283               	bcf	3,5	;RP0=0, select bank0
  1635  140A  1303               	bcf	3,6	;RP1=0, select bank0
  1636  140B  01A4               	clrf	Lcd_Set_Cursor@b
  1637  140C  0AA4               	incf	Lcd_Set_Cursor@b,f
  1638  140D  3001               	movlw	1
  1639  140E  160A  158A  2386  160A  118A  	fcall	_Lcd_Set_Cursor
  1640  1413                     l4500:
  1641                           
  1642                           ;Main.c: 135:   Lcd_Write_String(msg1);
  1643  1413  3090               	movlw	(low (main@msg1| (0+256)))& (0+255)
  1644  1414  1283               	bcf	3,5	;RP0=0, select bank0
  1645  1415  1303               	bcf	3,6	;RP1=0, select bank0
  1646  1416  00A5               	movwf	Lcd_Write_String@a
  1647  1417  3001               	movlw	1
  1648  1418  00A6               	movwf	Lcd_Write_String@a+1
  1649  1419  160A  158A  21AC  160A  118A  	fcall	_Lcd_Write_String
  1650  141E                     l4502:
  1651                           
  1652                           ;Main.c: 137:         sprintf (msg,"Tensao = %.1f   ",tensao);
  1653  141E  3091               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1654  141F  1683               	bsf	3,5	;RP0=1, select bank1
  1655  1420  1303               	bcf	3,6	;RP1=0, select bank1
  1656  1421  00CF               	movwf	??_main^(0+128)
  1657  1422  084F               	movf	??_main^(0+128),w
  1658  1423  00AC               	movwf	sprintf@f^(0+128)
  1659  1424  1683               	bsf	3,5	;RP0=1, select bank3
  1660  1425  1703               	bsf	3,6	;RP1=1, select bank3
  1661  1426  083F               	movf	(_tensao+3)^(0+384),w
  1662  1427  1683               	bsf	3,5	;RP0=1, select bank1
  1663  1428  1303               	bcf	3,6	;RP1=0, select bank1
  1664  1429  00B0               	movwf	((?_sprintf+3)^(0+128)+1)
  1665  142A  1683               	bsf	3,5	;RP0=1, select bank3
  1666  142B  1703               	bsf	3,6	;RP1=1, select bank3
  1667  142C  083E               	movf	(_tensao+2)^(0+384),w
  1668  142D  1683               	bsf	3,5	;RP0=1, select bank1
  1669  142E  1303               	bcf	3,6	;RP1=0, select bank1
  1670  142F  00AF               	movwf	((?_sprintf+2)^(0+128)+1)
  1671  1430  1683               	bsf	3,5	;RP0=1, select bank3
  1672  1431  1703               	bsf	3,6	;RP1=1, select bank3
  1673  1432  083D               	movf	(_tensao+1)^(0+384),w
  1674  1433  1683               	bsf	3,5	;RP0=1, select bank1
  1675  1434  1303               	bcf	3,6	;RP1=0, select bank1
  1676  1435  00AE               	movwf	((?_sprintf+1)^(0+128)+1)
  1677  1436  1683               	bsf	3,5	;RP0=1, select bank3
  1678  1437  1703               	bsf	3,6	;RP1=1, select bank3
  1679  1438  083C               	movf	_tensao^(0+384),w
  1680  1439  1683               	bsf	3,5	;RP0=1, select bank1
  1681  143A  1303               	bcf	3,6	;RP1=0, select bank1
  1682  143B  00AD               	movwf	(?_sprintf^(0+128)+1)
  1683  143C  30A4               	movlw	(low (main@msg| (0+256)))& (0+255)
  1684  143D  120A  118A  2027  160A  118A  	fcall	_sprintf
  1685  1442                     l4504:
  1686                           
  1687                           ;Main.c: 138:         Lcd_Set_Cursor(2, 1);
  1688  1442  1283               	bcf	3,5	;RP0=0, select bank0
  1689  1443  1303               	bcf	3,6	;RP1=0, select bank0
  1690  1444  01A4               	clrf	Lcd_Set_Cursor@b
  1691  1445  0AA4               	incf	Lcd_Set_Cursor@b,f
  1692  1446  3002               	movlw	2
  1693  1447  160A  158A  2386  160A  118A  	fcall	_Lcd_Set_Cursor
  1694                           
  1695                           ;Main.c: 139:   Lcd_Write_String(msg);
  1696  144C  30A4               	movlw	(low (main@msg| (0+256)))& (0+255)
  1697  144D  1283               	bcf	3,5	;RP0=0, select bank0
  1698  144E  1303               	bcf	3,6	;RP1=0, select bank0
  1699  144F  00A5               	movwf	Lcd_Write_String@a
  1700  1450  3001               	movlw	1
  1701  1451  00A6               	movwf	Lcd_Write_String@a+1
  1702  1452  160A  158A  21AC  160A  118A  	fcall	_Lcd_Write_String
  1703  1457                     l4506:
  1704                           
  1705                           ;Main.c: 141:         corrente = ADC_corrente;
  1706  1457  1683               	bsf	3,5	;RP0=1, select bank3
  1707  1458  1703               	bsf	3,6	;RP1=1, select bank3
  1708  1459  0844               	movf	_ADC_corrente^(0+384),w
  1709  145A  1283               	bcf	3,5	;RP0=0, select bank0
  1710  145B  1303               	bcf	3,6	;RP1=0, select bank0
  1711  145C  00B0               	movwf	___xxtofl@val
  1712  145D  1683               	bsf	3,5	;RP0=1, select bank3
  1713  145E  1703               	bsf	3,6	;RP1=1, select bank3
  1714  145F  0845               	movf	(_ADC_corrente+1)^(0+384),w
  1715  1460  1283               	bcf	3,5	;RP0=0, select bank0
  1716  1461  1303               	bcf	3,6	;RP1=0, select bank0
  1717  1462  00B1               	movwf	___xxtofl@val+1
  1718  1463  3000               	movlw	0
  1719  1464  1BB1               	btfsc	___xxtofl@val+1,7
  1720  1465  30FF               	movlw	255
  1721  1466  00B2               	movwf	___xxtofl@val+2
  1722  1467  00B3               	movwf	___xxtofl@val+3
  1723  1468  3001               	movlw	1
  1724  1469  160A  158A  25C9  160A  118A  	fcall	___xxtofl
  1725  146E  1283               	bcf	3,5	;RP0=0, select bank0
  1726  146F  1303               	bcf	3,6	;RP1=0, select bank0
  1727  1470  0833               	movf	?___xxtofl+3,w
  1728  1471  1683               	bsf	3,5	;RP0=1, select bank3
  1729  1472  1703               	bsf	3,6	;RP1=1, select bank3
  1730  1473  00BB               	movwf	(_corrente+3)^(0+384)
  1731  1474  1283               	bcf	3,5	;RP0=0, select bank0
  1732  1475  1303               	bcf	3,6	;RP1=0, select bank0
  1733  1476  0832               	movf	?___xxtofl+2,w
  1734  1477  1683               	bsf	3,5	;RP0=1, select bank3
  1735  1478  1703               	bsf	3,6	;RP1=1, select bank3
  1736  1479  00BA               	movwf	(_corrente+2)^(0+384)
  1737  147A  1283               	bcf	3,5	;RP0=0, select bank0
  1738  147B  1303               	bcf	3,6	;RP1=0, select bank0
  1739  147C  0831               	movf	?___xxtofl+1,w
  1740  147D  1683               	bsf	3,5	;RP0=1, select bank3
  1741  147E  1703               	bsf	3,6	;RP1=1, select bank3
  1742  147F  00B9               	movwf	(_corrente+1)^(0+384)
  1743  1480  1283               	bcf	3,5	;RP0=0, select bank0
  1744  1481  1303               	bcf	3,6	;RP1=0, select bank0
  1745  1482  0830               	movf	?___xxtofl,w
  1746  1483  1683               	bsf	3,5	;RP0=1, select bank3
  1747  1484  1703               	bsf	3,6	;RP1=1, select bank3
  1748  1485  00B8               	movwf	_corrente^(0+384)
  1749  1486                     l4508:
  1750                           
  1751                           ;Main.c: 142:   if (corrente > 250){
  1752  1486  3043               	movlw	67
  1753  1487  1283               	bcf	3,5	;RP0=0, select bank0
  1754  1488  1303               	bcf	3,6	;RP1=0, select bank0
  1755  1489  00A3               	movwf	___flge@ff1+3
  1756  148A  307A               	movlw	122
  1757  148B  00A2               	movwf	___flge@ff1+2
  1758  148C  3000               	movlw	0
  1759  148D  00A1               	movwf	___flge@ff1+1
  1760  148E  3000               	movlw	0
  1761  148F  00A0               	movwf	___flge@ff1
  1762  1490  1683               	bsf	3,5	;RP0=1, select bank3
  1763  1491  1703               	bsf	3,6	;RP1=1, select bank3
  1764  1492  083B               	movf	(_corrente+3)^(0+384),w
  1765  1493  1283               	bcf	3,5	;RP0=0, select bank0
  1766  1494  1303               	bcf	3,6	;RP1=0, select bank0
  1767  1495  00A7               	movwf	___flge@ff2+3
  1768  1496  1683               	bsf	3,5	;RP0=1, select bank3
  1769  1497  1703               	bsf	3,6	;RP1=1, select bank3
  1770  1498  083A               	movf	(_corrente+2)^(0+384),w
  1771  1499  1283               	bcf	3,5	;RP0=0, select bank0
  1772  149A  1303               	bcf	3,6	;RP1=0, select bank0
  1773  149B  00A6               	movwf	___flge@ff2+2
  1774  149C  1683               	bsf	3,5	;RP0=1, select bank3
  1775  149D  1703               	bsf	3,6	;RP1=1, select bank3
  1776  149E  0839               	movf	(_corrente+1)^(0+384),w
  1777  149F  1283               	bcf	3,5	;RP0=0, select bank0
  1778  14A0  1303               	bcf	3,6	;RP1=0, select bank0
  1779  14A1  00A5               	movwf	___flge@ff2+1
  1780  14A2  1683               	bsf	3,5	;RP0=1, select bank3
  1781  14A3  1703               	bsf	3,6	;RP1=1, select bank3
  1782  14A4  0838               	movf	_corrente^(0+384),w
  1783  14A5  1283               	bcf	3,5	;RP0=0, select bank0
  1784  14A6  1303               	bcf	3,6	;RP1=0, select bank0
  1785  14A7  00A4               	movwf	___flge@ff2
  1786  14A8  160A  158A  2525  160A  118A  	fcall	___flge
  1787  14AD  1803               	btfsc	3,0
  1788  14AE  2CB0               	goto	u7891
  1789  14AF  2CB1               	goto	u7890
  1790  14B0                     u7891:
  1791  14B0  2CB7               	goto	l126
  1792  14B1                     u7890:
  1793  14B1                     l4510:
  1794                           
  1795                           ;Main.c: 143:    PORTBbits.RB0 = 1;
  1796  14B1  1283               	bcf	3,5	;RP0=0, select bank0
  1797  14B2  1303               	bcf	3,6	;RP1=0, select bank0
  1798  14B3  1406               	bsf	6,0	;volatile
  1799                           
  1800                           ;Main.c: 144:    PORTBbits.RB1 = 0;
  1801  14B4  1086               	bcf	6,1	;volatile
  1802                           
  1803                           ;Main.c: 145:    PORTDbits.RD0 = 0;
  1804  14B5  1008               	bcf	8,0	;volatile
  1805                           
  1806                           ;Main.c: 146:   }
  1807  14B6  2ABB               	goto	l122
  1808  14B7                     l126:	
  1809                           ;Main.c: 147:   else{
  1810                           
  1811                           
  1812                           ;Main.c: 148:    PORTBbits.RB0 = 0;
  1813  14B7  1283               	bcf	3,5	;RP0=0, select bank0
  1814  14B8  1303               	bcf	3,6	;RP1=0, select bank0
  1815  14B9  1006               	bcf	6,0	;volatile
  1816                           
  1817                           ;Main.c: 149:    PORTBbits.RB1 = 1;
  1818  14BA  1486               	bsf	6,1	;volatile
  1819                           
  1820                           ;Main.c: 150:    PORTDbits.RD0 = 1;
  1821  14BB  1408               	bsf	8,0	;volatile
  1822  14BC  2ABB               	goto	l122
  1823  14BD  120A  118A  280C   	ljmp	start
  1824  14C0                     __end_of_main:
  1825                           
  1826                           	psect	text1
  1827  0027                     __ptext1:	
  1828 ;; *************** function _sprintf *****************
  1829 ;; Defined at:
  1830 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c"
  1831 ;; Parameters:    Size  Location     Type
  1832 ;;  sp              1    wreg     PTR unsigned char 
  1833 ;;		 -> main@msg1(20), main@msg(20), 
  1834 ;;  f               1   12[BANK1 ] PTR const unsigned char 
  1835 ;;		 -> STR_4(17), STR_3(15), STR_2(14), 
  1836 ;; Auto vars:     Size  Location     Type
  1837 ;;  sp              1   39[BANK1 ] PTR unsigned char 
  1838 ;;		 -> main@msg1(20), main@msg(20), 
  1839 ;;  fval            4   42[BANK1 ] PTR unsigned char 
  1840 ;;  tmpval          4   35[BANK1 ] struct .
  1841 ;;  val             4   29[BANK1 ] unsigned long 
  1842 ;;  prec            2   40[BANK1 ] int 
  1843 ;;  eexp            2   33[BANK1 ] int 
  1844 ;;  flag            2   27[BANK1 ] unsigned short 
  1845 ;;  cp              2    0        PTR const unsigned char 
  1846 ;;  len             2    0        unsigned int 
  1847 ;;  width           2    0        int 
  1848 ;;  c               1   46[BANK1 ] unsigned char 
  1849 ;;  ap              1   26[BANK1 ] PTR void [1]
  1850 ;;		 -> ?_sprintf(2), 
  1851 ;;  d               1    0        unsigned char 
  1852 ;; Return value:  Size  Location     Type
  1853 ;;                  2   12[BANK1 ] int 
  1854 ;; Registers used:
  1855 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1856 ;; Tracked objects:
  1857 ;;		On entry : 0/0
  1858 ;;		On exit  : 0/0
  1859 ;;		Unchanged: 0/0
  1860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1861 ;;      Params:         0       0       5       0       0
  1862 ;;      Locals:         0       0      25       0       0
  1863 ;;      Temps:          0       0       5       0       0
  1864 ;;      Totals:         0       0      35       0       0
  1865 ;;Total ram usage:       35 bytes
  1866 ;; Hardware stack levels used: 1
  1867 ;; Hardware stack levels required when called: 5
  1868 ;; This function calls:
  1869 ;;		___awdiv
  1870 ;;		___fladd
  1871 ;;		___fleq
  1872 ;;		___flge
  1873 ;;		___flmul
  1874 ;;		___flneg
  1875 ;;		___flsub
  1876 ;;		___fltol
  1877 ;;		___lldiv
  1878 ;;		___llmod
  1879 ;;		___wmul
  1880 ;;		___xxtofl
  1881 ;;		__div_to_l_
  1882 ;;		__tdiv_to_l_
  1883 ;;		_fround
  1884 ;;		_isdigit
  1885 ;;		_scale
  1886 ;; This function is called by:
  1887 ;;		_main
  1888 ;; This function uses a non-reentrant model
  1889 ;;
  1890                           
  1891                           
  1892                           ;psect for function _sprintf
  1893  0027                     _sprintf:
  1894                           
  1895                           ;incstack = 0
  1896                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1897                           ;sprintf@sp stored from wreg
  1898  0027  1683               	bsf	3,5	;RP0=1, select bank1
  1899  0028  1303               	bcf	3,6	;RP1=0, select bank1
  1900  0029  00C7               	movwf	sprintf@sp^(0+128)
  1901  002A                     l4212:
  1902                           
  1903                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  1904  002A  30AD               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1905  002B  00B1               	movwf	??_sprintf^(0+128)
  1906  002C  0831               	movf	??_sprintf^(0+128),w
  1907  002D  00BA               	movwf	sprintf@ap^(0+128)
  1908                           
  1909                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1910  002E  2FD0               	goto	l4406
  1911  002F                     l4214:
  1912                           
  1913                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1914  002F  3025               	movlw	37
  1915  0030  064E               	xorwf	sprintf@c^(0+128),w
  1916  0031  1903               	btfsc	3,2
  1917  0032  2834               	goto	u7511
  1918  0033  2835               	goto	u7510
  1919  0034                     u7511:
  1920  0034  2841               	goto	l4220
  1921  0035                     u7510:
  1922  0035                     l4216:
  1923                           
  1924                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1925  0035  084E               	movf	sprintf@c^(0+128),w
  1926  0036  00B1               	movwf	??_sprintf^(0+128)
  1927  0037  0847               	movf	sprintf@sp^(0+128),w
  1928  0038  0084               	movwf	4
  1929  0039  0831               	movf	??_sprintf^(0+128),w
  1930  003A  1783               	bsf	3,7	;select IRP bank2
  1931  003B  0080               	movwf	0
  1932  003C                     l4218:
  1933  003C  3001               	movlw	1
  1934  003D  00B1               	movwf	??_sprintf^(0+128)
  1935  003E  0831               	movf	??_sprintf^(0+128),w
  1936  003F  07C7               	addwf	sprintf@sp^(0+128),f
  1937                           
  1938                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 559:    continue;
  1939  0040  2FD0               	goto	l4406
  1940  0041                     l4220:
  1941                           
  1942                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1943  0041  01BB               	clrf	sprintf@flag^(0+128)
  1944  0042  01BC               	clrf	(sprintf@flag+1)^(0+128)
  1945  0043                     l4222:
  1946                           
  1947                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  1948  0043  082C               	movf	sprintf@f^(0+128),w
  1949  0044  0084               	movwf	4
  1950  0045  120A  158A  200A  120A  118A  	fcall	stringdir
  1951  004A  3A2E               	xorlw	46
  1952  004B  1D03               	skipz
  1953  004C  284E               	goto	u7521
  1954  004D  284F               	goto	u7520
  1955  004E                     u7521:
  1956  004E  28A2               	goto	l4238
  1957  004F                     u7520:
  1958  004F                     l4224:
  1959                           
  1960                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 629:    flag |= 0
      +                          x4000;
  1961  004F  173C               	bsf	(sprintf@flag^(0+128)+1),6
  1962  0050                     l4226:
  1963                           
  1964                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 630:    f++;
  1965  0050  3001               	movlw	1
  1966  0051  00B1               	movwf	??_sprintf^(0+128)
  1967  0052  0831               	movf	??_sprintf^(0+128),w
  1968  0053  07AC               	addwf	sprintf@f^(0+128),f
  1969  0054                     l4228:
  1970                           
  1971                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  1972  0054  01C8               	clrf	sprintf@prec^(0+128)
  1973  0055  01C9               	clrf	(sprintf@prec+1)^(0+128)
  1974                           
  1975                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1976  0056  2891               	goto	l4236
  1977  0057                     l4230:
  1978                           
  1979                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  1980  0057  300A               	movlw	10
  1981  0058  1283               	bcf	3,5	;RP0=0, select bank0
  1982  0059  1303               	bcf	3,6	;RP1=0, select bank0
  1983  005A  00A0               	movwf	___wmul@multiplier
  1984  005B  3000               	movlw	0
  1985  005C  00A1               	movwf	___wmul@multiplier+1
  1986  005D  1683               	bsf	3,5	;RP0=1, select bank1
  1987  005E  1303               	bcf	3,6	;RP1=0, select bank1
  1988  005F  0849               	movf	(sprintf@prec+1)^(0+128),w
  1989  0060  1283               	bcf	3,5	;RP0=0, select bank0
  1990  0061  1303               	bcf	3,6	;RP1=0, select bank0
  1991  0062  00A3               	movwf	___wmul@multiplicand+1
  1992  0063  1683               	bsf	3,5	;RP0=1, select bank1
  1993  0064  1303               	bcf	3,6	;RP1=0, select bank1
  1994  0065  0848               	movf	sprintf@prec^(0+128),w
  1995  0066  1283               	bcf	3,5	;RP0=0, select bank0
  1996  0067  1303               	bcf	3,6	;RP1=0, select bank0
  1997  0068  00A2               	movwf	___wmul@multiplicand
  1998  0069  160A  158A  20E3  120A  118A  	fcall	___wmul
  1999  006E  1283               	bcf	3,5	;RP0=0, select bank0
  2000  006F  1303               	bcf	3,6	;RP1=0, select bank0
  2001  0070  0821               	movf	?___wmul+1,w
  2002  0071  1683               	bsf	3,5	;RP0=1, select bank1
  2003  0072  1303               	bcf	3,6	;RP1=0, select bank1
  2004  0073  00C9               	movwf	(sprintf@prec+1)^(0+128)
  2005  0074  1283               	bcf	3,5	;RP0=0, select bank0
  2006  0075  1303               	bcf	3,6	;RP1=0, select bank0
  2007  0076  0820               	movf	?___wmul,w
  2008  0077  1683               	bsf	3,5	;RP0=1, select bank1
  2009  0078  1303               	bcf	3,6	;RP1=0, select bank1
  2010  0079  00C8               	movwf	sprintf@prec^(0+128)
  2011  007A                     l4232:
  2012                           
  2013                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  2014  007A  082C               	movf	sprintf@f^(0+128),w
  2015  007B  0084               	movwf	4
  2016  007C  120A  158A  200A  120A  118A  	fcall	stringdir
  2017  0081  3ED0               	addlw	208
  2018  0082  00B1               	movwf	??_sprintf^(0+128)
  2019  0083  30FF               	movlw	255
  2020  0084  1803               	skipnc
  2021  0085  3000               	movlw	0
  2022  0086  00B2               	movwf	(??_sprintf^(0+128)+1)
  2023  0087  0831               	movf	??_sprintf^(0+128),w
  2024  0088  07C8               	addwf	sprintf@prec^(0+128),f
  2025  0089  1803               	skipnc
  2026  008A  0AC9               	incf	(sprintf@prec+1)^(0+128),f
  2027  008B  0832               	movf	(??_sprintf+1)^(0+128),w
  2028  008C  07C9               	addwf	(sprintf@prec+1)^(0+128),f
  2029  008D                     l4234:
  2030  008D  3001               	movlw	1
  2031  008E  00B1               	movwf	??_sprintf^(0+128)
  2032  008F  0831               	movf	??_sprintf^(0+128),w
  2033  0090  07AC               	addwf	sprintf@f^(0+128),f
  2034  0091                     l4236:
  2035                           
  2036                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2037  0091  082C               	movf	sprintf@f^(0+128),w
  2038  0092  0084               	movwf	4
  2039  0093  120A  158A  200A  120A  118A  	fcall	stringdir
  2040  0098  120A  118A  27E7  120A  118A  	fcall	_isdigit
  2041  009D  1803               	btfsc	3,0
  2042  009E  28A0               	goto	u7531
  2043  009F  28A1               	goto	u7530
  2044  00A0                     u7531:
  2045  00A0  2857               	goto	l4230
  2046  00A1                     u7530:
  2047  00A1  28A8               	goto	l4244
  2048  00A2                     l4238:
  2049                           
  2050                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  2051  00A2  01C8               	clrf	sprintf@prec^(0+128)
  2052  00A3  01C9               	clrf	(sprintf@prec+1)^(0+128)
  2053  00A4                     l4240:
  2054                           
  2055                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 654:    flag |= 0
      +                          x1000;
  2056  00A4  163C               	bsf	(sprintf@flag^(0+128)+1),4
  2057  00A5  28A8               	goto	l4244
  2058  00A6                     l258:	
  2059                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  2060                           
  2061                           
  2062                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  2063  00A6  153C               	bsf	(sprintf@flag^(0+128)+1),2
  2064                           
  2065                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 690:    break;
  2066  00A7  28C4               	goto	l4246
  2067  00A8                     l4244:
  2068  00A8  3001               	movlw	1
  2069  00A9  1683               	bsf	3,5	;RP0=1, select bank1
  2070  00AA  1303               	bcf	3,6	;RP1=0, select bank1
  2071  00AB  07AC               	addwf	sprintf@f^(0+128),f
  2072  00AC  30FF               	movlw	-1
  2073  00AD  072C               	addwf	sprintf@f^(0+128),w
  2074  00AE  0084               	movwf	4
  2075  00AF  120A  158A  200A  120A  118A  	fcall	stringdir
  2076  00B4  00CE               	movwf	sprintf@c^(0+128)
  2077  00B5  00B1               	movwf	??_sprintf^(0+128)
  2078  00B6  01B2               	clrf	(??_sprintf^(0+128)+1)
  2079                           
  2080                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2081                           ; Switch size 1, requested type "simple"
  2082                           ; Number of cases is 1, Range of values is 0 to 0
  2083                           ; switch strategies available:
  2084                           ; Name         Instructions Cycles
  2085                           ; simple_byte            4     3 (average)
  2086                           ; direct_byte           11     8 (fixed)
  2087                           ; jumptable            260     6 (fixed)
  2088                           ;	Chosen strategy is simple_byte
  2089  00B7  0832               	movf	(??_sprintf+1)^(0+128),w
  2090  00B8  3A00               	xorlw	0	; case 0
  2091  00B9  1903               	skipnz
  2092  00BA  28BC               	goto	l4542
  2093  00BB  2FD0               	goto	l4406
  2094  00BC                     l4542:
  2095                           
  2096                           ; Switch size 1, requested type "simple"
  2097                           ; Number of cases is 2, Range of values is 0 to 102
  2098                           ; switch strategies available:
  2099                           ; Name         Instructions Cycles
  2100                           ; simple_byte            7     4 (average)
  2101                           ; jumptable            260     6 (fixed)
  2102                           ;	Chosen strategy is simple_byte
  2103  00BC  0831               	movf	??_sprintf^(0+128),w
  2104  00BD  3A00               	xorlw	0	; case 0
  2105  00BE  1903               	skipnz
  2106  00BF  2FE2               	goto	l4408
  2107  00C0  3A66               	xorlw	102	; case 102
  2108  00C1  1903               	skipnz
  2109  00C2  28A6               	goto	l258
  2110  00C3  2FD0               	goto	l4406
  2111  00C4                     l4246:
  2112                           
  2113                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  2114  00C4  3000               	movlw	0
  2115  00C5  053B               	andwf	sprintf@flag^(0+128),w
  2116  00C6  00B1               	movwf	??_sprintf^(0+128)
  2117  00C7  3007               	movlw	7
  2118  00C8  053C               	andwf	(sprintf@flag+1)^(0+128),w
  2119  00C9  00B2               	movwf	(??_sprintf+1)^(0+128)
  2120  00CA  0831               	movf	??_sprintf^(0+128),w
  2121  00CB  0432               	iorwf	(??_sprintf^(0+128)+1),w
  2122  00CC  1903               	btfsc	3,2
  2123  00CD  28CF               	goto	u7541
  2124  00CE  28D0               	goto	u7540
  2125  00CF                     u7541:
  2126  00CF  2F8B               	goto	l4388
  2127  00D0                     u7540:
  2128  00D0                     l4248:
  2129                           
  2130                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 853:    if(flag &
      +                           0x1000)
  2131  00D0  1E3C               	btfss	(sprintf@flag+1)^(0+128),4
  2132  00D1  28D3               	goto	u7551
  2133  00D2  28D4               	goto	u7550
  2134  00D3                     u7551:
  2135  00D3  28D8               	goto	l4252
  2136  00D4                     u7550:
  2137  00D4                     l4250:
  2138                           
  2139                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  2140  00D4  3006               	movlw	6
  2141  00D5  00C8               	movwf	sprintf@prec^(0+128)
  2142  00D6  3000               	movlw	0
  2143  00D7  00C9               	movwf	(sprintf@prec^(0+128)+1)
  2144  00D8                     l4252:
  2145                           
  2146                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  2147  00D8  083A               	movf	sprintf@ap^(0+128),w
  2148  00D9  0084               	movwf	4
  2149  00DA  1383               	bcf	3,7	;select IRP bank0
  2150  00DB  0800               	movf	0,w
  2151  00DC  00CA               	movwf	sprintf@fval^(0+128)
  2152  00DD  0A84               	incf	4,f
  2153  00DE  0800               	movf	0,w
  2154  00DF  00CB               	movwf	(sprintf@fval+1)^(0+128)
  2155  00E0  0A84               	incf	4,f
  2156  00E1  0800               	movf	0,w
  2157  00E2  00CC               	movwf	(sprintf@fval+2)^(0+128)
  2158  00E3  0A84               	incf	4,f
  2159  00E4  0800               	movf	0,w
  2160  00E5  00CD               	movwf	(sprintf@fval+3)^(0+128)
  2161  00E6                     l4254:
  2162  00E6  3004               	movlw	4
  2163  00E7  00B1               	movwf	??_sprintf^(0+128)
  2164  00E8  0831               	movf	??_sprintf^(0+128),w
  2165  00E9  07BA               	addwf	sprintf@ap^(0+128),f
  2166  00EA                     l4256:
  2167                           
  2168                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  2169  00EA  084D               	movf	(sprintf@fval+3)^(0+128),w
  2170  00EB  1283               	bcf	3,5	;RP0=0, select bank0
  2171  00EC  1303               	bcf	3,6	;RP1=0, select bank0
  2172  00ED  00A3               	movwf	___flge@ff1+3
  2173  00EE  1683               	bsf	3,5	;RP0=1, select bank1
  2174  00EF  1303               	bcf	3,6	;RP1=0, select bank1
  2175  00F0  084C               	movf	(sprintf@fval+2)^(0+128),w
  2176  00F1  1283               	bcf	3,5	;RP0=0, select bank0
  2177  00F2  1303               	bcf	3,6	;RP1=0, select bank0
  2178  00F3  00A2               	movwf	___flge@ff1+2
  2179  00F4  1683               	bsf	3,5	;RP0=1, select bank1
  2180  00F5  1303               	bcf	3,6	;RP1=0, select bank1
  2181  00F6  084B               	movf	(sprintf@fval+1)^(0+128),w
  2182  00F7  1283               	bcf	3,5	;RP0=0, select bank0
  2183  00F8  1303               	bcf	3,6	;RP1=0, select bank0
  2184  00F9  00A1               	movwf	___flge@ff1+1
  2185  00FA  1683               	bsf	3,5	;RP0=1, select bank1
  2186  00FB  1303               	bcf	3,6	;RP1=0, select bank1
  2187  00FC  084A               	movf	sprintf@fval^(0+128),w
  2188  00FD  1283               	bcf	3,5	;RP0=0, select bank0
  2189  00FE  1303               	bcf	3,6	;RP1=0, select bank0
  2190  00FF  00A0               	movwf	___flge@ff1
  2191  0100  3000               	movlw	0
  2192  0101  00A7               	movwf	___flge@ff2+3
  2193  0102  3000               	movlw	0
  2194  0103  00A6               	movwf	___flge@ff2+2
  2195  0104  3000               	movlw	0
  2196  0105  00A5               	movwf	___flge@ff2+1
  2197  0106  3000               	movlw	0
  2198  0107  00A4               	movwf	___flge@ff2
  2199  0108  160A  158A  2525  120A  118A  	fcall	___flge
  2200  010D  1803               	btfsc	3,0
  2201  010E  2910               	goto	u7561
  2202  010F  2911               	goto	u7560
  2203  0110                     u7561:
  2204  0110  294A               	goto	l4262
  2205  0111                     u7560:
  2206  0111                     l4258:
  2207                           
  2208                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  2209  0111  1683               	bsf	3,5	;RP0=1, select bank1
  2210  0112  1303               	bcf	3,6	;RP1=0, select bank1
  2211  0113  084D               	movf	(sprintf@fval+3)^(0+128),w
  2212  0114  1283               	bcf	3,5	;RP0=0, select bank0
  2213  0115  1303               	bcf	3,6	;RP1=0, select bank0
  2214  0116  00A3               	movwf	___flneg@f1+3
  2215  0117  1683               	bsf	3,5	;RP0=1, select bank1
  2216  0118  1303               	bcf	3,6	;RP1=0, select bank1
  2217  0119  084C               	movf	(sprintf@fval+2)^(0+128),w
  2218  011A  1283               	bcf	3,5	;RP0=0, select bank0
  2219  011B  1303               	bcf	3,6	;RP1=0, select bank0
  2220  011C  00A2               	movwf	___flneg@f1+2
  2221  011D  1683               	bsf	3,5	;RP0=1, select bank1
  2222  011E  1303               	bcf	3,6	;RP1=0, select bank1
  2223  011F  084B               	movf	(sprintf@fval+1)^(0+128),w
  2224  0120  1283               	bcf	3,5	;RP0=0, select bank0
  2225  0121  1303               	bcf	3,6	;RP1=0, select bank0
  2226  0122  00A1               	movwf	___flneg@f1+1
  2227  0123  1683               	bsf	3,5	;RP0=1, select bank1
  2228  0124  1303               	bcf	3,6	;RP1=0, select bank1
  2229  0125  084A               	movf	sprintf@fval^(0+128),w
  2230  0126  1283               	bcf	3,5	;RP0=0, select bank0
  2231  0127  1303               	bcf	3,6	;RP1=0, select bank0
  2232  0128  00A0               	movwf	___flneg@f1
  2233  0129  160A  118A  2003  120A  118A  	fcall	___flneg
  2234  012E  1283               	bcf	3,5	;RP0=0, select bank0
  2235  012F  1303               	bcf	3,6	;RP1=0, select bank0
  2236  0130  0823               	movf	?___flneg+3,w
  2237  0131  1683               	bsf	3,5	;RP0=1, select bank1
  2238  0132  1303               	bcf	3,6	;RP1=0, select bank1
  2239  0133  00CD               	movwf	(sprintf@fval+3)^(0+128)
  2240  0134  1283               	bcf	3,5	;RP0=0, select bank0
  2241  0135  1303               	bcf	3,6	;RP1=0, select bank0
  2242  0136  0822               	movf	?___flneg+2,w
  2243  0137  1683               	bsf	3,5	;RP0=1, select bank1
  2244  0138  1303               	bcf	3,6	;RP1=0, select bank1
  2245  0139  00CC               	movwf	(sprintf@fval+2)^(0+128)
  2246  013A  1283               	bcf	3,5	;RP0=0, select bank0
  2247  013B  1303               	bcf	3,6	;RP1=0, select bank0
  2248  013C  0821               	movf	?___flneg+1,w
  2249  013D  1683               	bsf	3,5	;RP0=1, select bank1
  2250  013E  1303               	bcf	3,6	;RP1=0, select bank1
  2251  013F  00CB               	movwf	(sprintf@fval+1)^(0+128)
  2252  0140  1283               	bcf	3,5	;RP0=0, select bank0
  2253  0141  1303               	bcf	3,6	;RP1=0, select bank0
  2254  0142  0820               	movf	?___flneg,w
  2255  0143  1683               	bsf	3,5	;RP0=1, select bank1
  2256  0144  1303               	bcf	3,6	;RP1=0, select bank1
  2257  0145  00CA               	movwf	sprintf@fval^(0+128)
  2258  0146                     l4260:
  2259                           
  2260                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  2261  0146  3003               	movlw	3
  2262  0147  04BB               	iorwf	sprintf@flag^(0+128),f
  2263  0148  3000               	movlw	0
  2264  0149  04BC               	iorwf	(sprintf@flag+1)^(0+128),f
  2265  014A                     l4262:
  2266                           
  2267                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  2268  014A  1683               	bsf	3,5	;RP0=1, select bank1
  2269  014B  1303               	bcf	3,6	;RP1=0, select bank1
  2270  014C  01C1               	clrf	sprintf@eexp^(0+128)
  2271  014D  01C2               	clrf	(sprintf@eexp+1)^(0+128)
  2272  014E                     l4264:
  2273                           
  2274                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  2275  014E  084D               	movf	(sprintf@fval+3)^(0+128),w
  2276  014F  1283               	bcf	3,5	;RP0=0, select bank0
  2277  0150  1303               	bcf	3,6	;RP1=0, select bank0
  2278  0151  00A3               	movwf	___fleq@ff1+3
  2279  0152  1683               	bsf	3,5	;RP0=1, select bank1
  2280  0153  1303               	bcf	3,6	;RP1=0, select bank1
  2281  0154  084C               	movf	(sprintf@fval+2)^(0+128),w
  2282  0155  1283               	bcf	3,5	;RP0=0, select bank0
  2283  0156  1303               	bcf	3,6	;RP1=0, select bank0
  2284  0157  00A2               	movwf	___fleq@ff1+2
  2285  0158  1683               	bsf	3,5	;RP0=1, select bank1
  2286  0159  1303               	bcf	3,6	;RP1=0, select bank1
  2287  015A  084B               	movf	(sprintf@fval+1)^(0+128),w
  2288  015B  1283               	bcf	3,5	;RP0=0, select bank0
  2289  015C  1303               	bcf	3,6	;RP1=0, select bank0
  2290  015D  00A1               	movwf	___fleq@ff1+1
  2291  015E  1683               	bsf	3,5	;RP0=1, select bank1
  2292  015F  1303               	bcf	3,6	;RP1=0, select bank1
  2293  0160  084A               	movf	sprintf@fval^(0+128),w
  2294  0161  1283               	bcf	3,5	;RP0=0, select bank0
  2295  0162  1303               	bcf	3,6	;RP1=0, select bank0
  2296  0163  00A0               	movwf	___fleq@ff1
  2297  0164  3000               	movlw	0
  2298  0165  00A7               	movwf	___fleq@ff2+3
  2299  0166  3000               	movlw	0
  2300  0167  00A6               	movwf	___fleq@ff2+2
  2301  0168  3000               	movlw	0
  2302  0169  00A5               	movwf	___fleq@ff2+1
  2303  016A  3000               	movlw	0
  2304  016B  00A4               	movwf	___fleq@ff2
  2305  016C  160A  158A  2238  120A  118A  	fcall	___fleq
  2306  0171  1803               	btfsc	3,0
  2307  0172  2974               	goto	u7571
  2308  0173  2975               	goto	u7570
  2309  0174                     u7571:
  2310  0174  2AA1               	goto	l4290
  2311  0175                     u7570:
  2312  0175                     l4266:
  2313                           
  2314                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  2315  0175  1003               	clrc
  2316  0176  1683               	bsf	3,5	;RP0=1, select bank1
  2317  0177  1303               	bcf	3,6	;RP1=0, select bank1
  2318  0178  0D4C               	rlf	(sprintf@fval+2)^(0+128),w
  2319  0179  0D4D               	rlf	(sprintf@fval+3)^(0+128),w
  2320  017A  3E82               	addlw	130
  2321  017B  00C1               	movwf	sprintf@eexp^(0+128)
  2322  017C  30FF               	movlw	255
  2323  017D  1803               	skipnc
  2324  017E  3000               	movlw	0
  2325  017F  00C2               	movwf	(sprintf@eexp^(0+128)+1)
  2326  0180                     l4268:
  2327                           
  2328                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  2329  0180  30FF               	movlw	255
  2330  0181  07C1               	addwf	sprintf@eexp^(0+128),f
  2331  0182  1803               	skipnc
  2332  0183  0AC2               	incf	(sprintf@eexp+1)^(0+128),f
  2333  0184  30FF               	movlw	255
  2334  0185  07C2               	addwf	(sprintf@eexp+1)^(0+128),f
  2335  0186                     l4270:
  2336                           
  2337                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  2338  0186  3003               	movlw	3
  2339  0187  1283               	bcf	3,5	;RP0=0, select bank0
  2340  0188  1303               	bcf	3,6	;RP1=0, select bank0
  2341  0189  00A0               	movwf	___wmul@multiplier
  2342  018A  3000               	movlw	0
  2343  018B  00A1               	movwf	___wmul@multiplier+1
  2344  018C  1683               	bsf	3,5	;RP0=1, select bank1
  2345  018D  1303               	bcf	3,6	;RP1=0, select bank1
  2346  018E  0842               	movf	(sprintf@eexp+1)^(0+128),w
  2347  018F  1283               	bcf	3,5	;RP0=0, select bank0
  2348  0190  1303               	bcf	3,6	;RP1=0, select bank0
  2349  0191  00A3               	movwf	___wmul@multiplicand+1
  2350  0192  1683               	bsf	3,5	;RP0=1, select bank1
  2351  0193  1303               	bcf	3,6	;RP1=0, select bank1
  2352  0194  0841               	movf	sprintf@eexp^(0+128),w
  2353  0195  1283               	bcf	3,5	;RP0=0, select bank0
  2354  0196  1303               	bcf	3,6	;RP1=0, select bank0
  2355  0197  00A2               	movwf	___wmul@multiplicand
  2356  0198  160A  158A  20E3  120A  118A  	fcall	___wmul
  2357  019D  1283               	bcf	3,5	;RP0=0, select bank0
  2358  019E  1303               	bcf	3,6	;RP1=0, select bank0
  2359  019F  0821               	movf	?___wmul+1,w
  2360  01A0  1683               	bsf	3,5	;RP0=1, select bank1
  2361  01A1  1303               	bcf	3,6	;RP1=0, select bank1
  2362  01A2  00C2               	movwf	(sprintf@eexp+1)^(0+128)
  2363  01A3  1283               	bcf	3,5	;RP0=0, select bank0
  2364  01A4  1303               	bcf	3,6	;RP1=0, select bank0
  2365  01A5  0820               	movf	?___wmul,w
  2366  01A6  1683               	bsf	3,5	;RP0=1, select bank1
  2367  01A7  1303               	bcf	3,6	;RP1=0, select bank1
  2368  01A8  00C1               	movwf	sprintf@eexp^(0+128)
  2369  01A9                     l4272:
  2370                           
  2371                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  2372  01A9  300A               	movlw	10
  2373  01AA  1283               	bcf	3,5	;RP0=0, select bank0
  2374  01AB  1303               	bcf	3,6	;RP1=0, select bank0
  2375  01AC  00A7               	movwf	___awdiv@divisor
  2376  01AD  3000               	movlw	0
  2377  01AE  00A8               	movwf	___awdiv@divisor+1
  2378  01AF  1683               	bsf	3,5	;RP0=1, select bank1
  2379  01B0  1303               	bcf	3,6	;RP1=0, select bank1
  2380  01B1  0842               	movf	(sprintf@eexp+1)^(0+128),w
  2381  01B2  1283               	bcf	3,5	;RP0=0, select bank0
  2382  01B3  1303               	bcf	3,6	;RP1=0, select bank0
  2383  01B4  00AA               	movwf	___awdiv@dividend+1
  2384  01B5  1683               	bsf	3,5	;RP0=1, select bank1
  2385  01B6  1303               	bcf	3,6	;RP1=0, select bank1
  2386  01B7  0841               	movf	sprintf@eexp^(0+128),w
  2387  01B8  1283               	bcf	3,5	;RP0=0, select bank0
  2388  01B9  1303               	bcf	3,6	;RP1=0, select bank0
  2389  01BA  00A9               	movwf	___awdiv@dividend
  2390  01BB  160A  118A  2010  120A  118A  	fcall	___awdiv
  2391  01C0  1283               	bcf	3,5	;RP0=0, select bank0
  2392  01C1  1303               	bcf	3,6	;RP1=0, select bank0
  2393  01C2  0828               	movf	?___awdiv+1,w
  2394  01C3  1683               	bsf	3,5	;RP0=1, select bank1
  2395  01C4  1303               	bcf	3,6	;RP1=0, select bank1
  2396  01C5  00C2               	movwf	(sprintf@eexp+1)^(0+128)
  2397  01C6  1283               	bcf	3,5	;RP0=0, select bank0
  2398  01C7  1303               	bcf	3,6	;RP1=0, select bank0
  2399  01C8  0827               	movf	?___awdiv,w
  2400  01C9  1683               	bsf	3,5	;RP0=1, select bank1
  2401  01CA  1303               	bcf	3,6	;RP1=0, select bank1
  2402  01CB  00C1               	movwf	sprintf@eexp^(0+128)
  2403  01CC                     l4274:
  2404                           
  2405                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  2406  01CC  1FC2               	btfss	(sprintf@eexp+1)^(0+128),7
  2407  01CD  29CF               	goto	u7581
  2408  01CE  29D0               	goto	u7580
  2409  01CF                     u7581:
  2410  01CF  29D6               	goto	l4278
  2411  01D0                     u7580:
  2412  01D0                     l4276:
  2413                           
  2414                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  2415  01D0  30FF               	movlw	255
  2416  01D1  07C1               	addwf	sprintf@eexp^(0+128),f
  2417  01D2  1803               	skipnc
  2418  01D3  0AC2               	incf	(sprintf@eexp+1)^(0+128),f
  2419  01D4  30FF               	movlw	255
  2420  01D5  07C2               	addwf	(sprintf@eexp+1)^(0+128),f
  2421  01D6                     l4278:
  2422                           
  2423                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  2424  01D6  0341               	decf	sprintf@eexp^(0+128),w
  2425  01D7  3AFF               	xorlw	255
  2426  01D8  120A  158A  249D  120A  118A  	fcall	_scale
  2427  01DD  1283               	bcf	3,5	;RP0=0, select bank0
  2428  01DE  1303               	bcf	3,6	;RP1=0, select bank0
  2429  01DF  084D               	movf	?_scale+3,w
  2430  01E0  1683               	bsf	3,5	;RP0=1, select bank1
  2431  01E1  1303               	bcf	3,6	;RP1=0, select bank1
  2432  01E2  00C6               	movwf	(sprintf@tmpval+3)^(0+128)
  2433  01E3  1283               	bcf	3,5	;RP0=0, select bank0
  2434  01E4  1303               	bcf	3,6	;RP1=0, select bank0
  2435  01E5  084C               	movf	?_scale+2,w
  2436  01E6  1683               	bsf	3,5	;RP0=1, select bank1
  2437  01E7  1303               	bcf	3,6	;RP1=0, select bank1
  2438  01E8  00C5               	movwf	(sprintf@tmpval+2)^(0+128)
  2439  01E9  1283               	bcf	3,5	;RP0=0, select bank0
  2440  01EA  1303               	bcf	3,6	;RP1=0, select bank0
  2441  01EB  084B               	movf	?_scale+1,w
  2442  01EC  1683               	bsf	3,5	;RP0=1, select bank1
  2443  01ED  1303               	bcf	3,6	;RP1=0, select bank1
  2444  01EE  00C4               	movwf	(sprintf@tmpval+1)^(0+128)
  2445  01EF  1283               	bcf	3,5	;RP0=0, select bank0
  2446  01F0  1303               	bcf	3,6	;RP1=0, select bank0
  2447  01F1  084A               	movf	?_scale,w
  2448  01F2  1683               	bsf	3,5	;RP0=1, select bank1
  2449  01F3  1303               	bcf	3,6	;RP1=0, select bank1
  2450  01F4  00C3               	movwf	sprintf@tmpval^(0+128)
  2451  01F5                     l4280:
  2452                           
  2453                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  2454  01F5  084D               	movf	(sprintf@fval+3)^(0+128),w
  2455  01F6  1283               	bcf	3,5	;RP0=0, select bank0
  2456  01F7  1303               	bcf	3,6	;RP1=0, select bank0
  2457  01F8  00B3               	movwf	___flmul@b+3
  2458  01F9  1683               	bsf	3,5	;RP0=1, select bank1
  2459  01FA  1303               	bcf	3,6	;RP1=0, select bank1
  2460  01FB  084C               	movf	(sprintf@fval+2)^(0+128),w
  2461  01FC  1283               	bcf	3,5	;RP0=0, select bank0
  2462  01FD  1303               	bcf	3,6	;RP1=0, select bank0
  2463  01FE  00B2               	movwf	___flmul@b+2
  2464  01FF  1683               	bsf	3,5	;RP0=1, select bank1
  2465  0200  1303               	bcf	3,6	;RP1=0, select bank1
  2466  0201  084B               	movf	(sprintf@fval+1)^(0+128),w
  2467  0202  1283               	bcf	3,5	;RP0=0, select bank0
  2468  0203  1303               	bcf	3,6	;RP1=0, select bank0
  2469  0204  00B1               	movwf	___flmul@b+1
  2470  0205  1683               	bsf	3,5	;RP0=1, select bank1
  2471  0206  1303               	bcf	3,6	;RP1=0, select bank1
  2472  0207  084A               	movf	sprintf@fval^(0+128),w
  2473  0208  1283               	bcf	3,5	;RP0=0, select bank0
  2474  0209  1303               	bcf	3,6	;RP1=0, select bank0
  2475  020A  00B0               	movwf	___flmul@b
  2476  020B  1683               	bsf	3,5	;RP0=1, select bank1
  2477  020C  1303               	bcf	3,6	;RP1=0, select bank1
  2478  020D  0846               	movf	(sprintf@tmpval+3)^(0+128),w
  2479  020E  1283               	bcf	3,5	;RP0=0, select bank0
  2480  020F  1303               	bcf	3,6	;RP1=0, select bank0
  2481  0210  00B7               	movwf	___flmul@a+3
  2482  0211  1683               	bsf	3,5	;RP0=1, select bank1
  2483  0212  1303               	bcf	3,6	;RP1=0, select bank1
  2484  0213  0845               	movf	(sprintf@tmpval+2)^(0+128),w
  2485  0214  1283               	bcf	3,5	;RP0=0, select bank0
  2486  0215  1303               	bcf	3,6	;RP1=0, select bank0
  2487  0216  00B6               	movwf	___flmul@a+2
  2488  0217  1683               	bsf	3,5	;RP0=1, select bank1
  2489  0218  1303               	bcf	3,6	;RP1=0, select bank1
  2490  0219  0844               	movf	(sprintf@tmpval+1)^(0+128),w
  2491  021A  1283               	bcf	3,5	;RP0=0, select bank0
  2492  021B  1303               	bcf	3,6	;RP1=0, select bank0
  2493  021C  00B5               	movwf	___flmul@a+1
  2494  021D  1683               	bsf	3,5	;RP0=1, select bank1
  2495  021E  1303               	bcf	3,6	;RP1=0, select bank1
  2496  021F  0843               	movf	sprintf@tmpval^(0+128),w
  2497  0220  1283               	bcf	3,5	;RP0=0, select bank0
  2498  0221  1303               	bcf	3,6	;RP1=0, select bank0
  2499  0222  00B4               	movwf	___flmul@a
  2500  0223  120A  158A  213C  120A  118A  	fcall	___flmul
  2501  0228  1283               	bcf	3,5	;RP0=0, select bank0
  2502  0229  1303               	bcf	3,6	;RP1=0, select bank0
  2503  022A  0833               	movf	?___flmul+3,w
  2504  022B  1683               	bsf	3,5	;RP0=1, select bank1
  2505  022C  1303               	bcf	3,6	;RP1=0, select bank1
  2506  022D  00C6               	movwf	(sprintf@tmpval+3)^(0+128)
  2507  022E  1283               	bcf	3,5	;RP0=0, select bank0
  2508  022F  1303               	bcf	3,6	;RP1=0, select bank0
  2509  0230  0832               	movf	?___flmul+2,w
  2510  0231  1683               	bsf	3,5	;RP0=1, select bank1
  2511  0232  1303               	bcf	3,6	;RP1=0, select bank1
  2512  0233  00C5               	movwf	(sprintf@tmpval+2)^(0+128)
  2513  0234  1283               	bcf	3,5	;RP0=0, select bank0
  2514  0235  1303               	bcf	3,6	;RP1=0, select bank0
  2515  0236  0831               	movf	?___flmul+1,w
  2516  0237  1683               	bsf	3,5	;RP0=1, select bank1
  2517  0238  1303               	bcf	3,6	;RP1=0, select bank1
  2518  0239  00C4               	movwf	(sprintf@tmpval+1)^(0+128)
  2519  023A  1283               	bcf	3,5	;RP0=0, select bank0
  2520  023B  1303               	bcf	3,6	;RP1=0, select bank0
  2521  023C  0830               	movf	?___flmul,w
  2522  023D  1683               	bsf	3,5	;RP0=1, select bank1
  2523  023E  1303               	bcf	3,6	;RP1=0, select bank1
  2524  023F  00C3               	movwf	sprintf@tmpval^(0+128)
  2525  0240                     l4282:
  2526                           
  2527                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  2528  0240  0846               	movf	(sprintf@tmpval+3)^(0+128),w
  2529  0241  1283               	bcf	3,5	;RP0=0, select bank0
  2530  0242  1303               	bcf	3,6	;RP1=0, select bank0
  2531  0243  00A3               	movwf	___flge@ff1+3
  2532  0244  1683               	bsf	3,5	;RP0=1, select bank1
  2533  0245  1303               	bcf	3,6	;RP1=0, select bank1
  2534  0246  0845               	movf	(sprintf@tmpval+2)^(0+128),w
  2535  0247  1283               	bcf	3,5	;RP0=0, select bank0
  2536  0248  1303               	bcf	3,6	;RP1=0, select bank0
  2537  0249  00A2               	movwf	___flge@ff1+2
  2538  024A  1683               	bsf	3,5	;RP0=1, select bank1
  2539  024B  1303               	bcf	3,6	;RP1=0, select bank1
  2540  024C  0844               	movf	(sprintf@tmpval+1)^(0+128),w
  2541  024D  1283               	bcf	3,5	;RP0=0, select bank0
  2542  024E  1303               	bcf	3,6	;RP1=0, select bank0
  2543  024F  00A1               	movwf	___flge@ff1+1
  2544  0250  1683               	bsf	3,5	;RP0=1, select bank1
  2545  0251  1303               	bcf	3,6	;RP1=0, select bank1
  2546  0252  0843               	movf	sprintf@tmpval^(0+128),w
  2547  0253  1283               	bcf	3,5	;RP0=0, select bank0
  2548  0254  1303               	bcf	3,6	;RP1=0, select bank0
  2549  0255  00A0               	movwf	___flge@ff1
  2550  0256  303F               	movlw	63
  2551  0257  00A7               	movwf	___flge@ff2+3
  2552  0258  3080               	movlw	128
  2553  0259  00A6               	movwf	___flge@ff2+2
  2554  025A  3000               	movlw	0
  2555  025B  00A5               	movwf	___flge@ff2+1
  2556  025C  3000               	movlw	0
  2557  025D  00A4               	movwf	___flge@ff2
  2558  025E  160A  158A  2525  120A  118A  	fcall	___flge
  2559  0263  1803               	btfsc	3,0
  2560  0264  2A66               	goto	u7591
  2561  0265  2A67               	goto	u7590
  2562  0266                     u7591:
  2563  0266  2A70               	goto	l4286
  2564  0267                     u7590:
  2565  0267                     l4284:
  2566                           
  2567                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  2568  0267  30FF               	movlw	255
  2569  0268  1683               	bsf	3,5	;RP0=1, select bank1
  2570  0269  1303               	bcf	3,6	;RP1=0, select bank1
  2571  026A  07C1               	addwf	sprintf@eexp^(0+128),f
  2572  026B  1803               	skipnc
  2573  026C  0AC2               	incf	(sprintf@eexp+1)^(0+128),f
  2574  026D  30FF               	movlw	255
  2575  026E  07C2               	addwf	(sprintf@eexp+1)^(0+128),f
  2576  026F  2AA1               	goto	l4290
  2577  0270                     l4286:
  2578  0270  1683               	bsf	3,5	;RP0=1, select bank1
  2579  0271  1303               	bcf	3,6	;RP1=0, select bank1
  2580  0272  0846               	movf	(sprintf@tmpval+3)^(0+128),w
  2581  0273  1283               	bcf	3,5	;RP0=0, select bank0
  2582  0274  1303               	bcf	3,6	;RP1=0, select bank0
  2583  0275  00A3               	movwf	___flge@ff1+3
  2584  0276  1683               	bsf	3,5	;RP0=1, select bank1
  2585  0277  1303               	bcf	3,6	;RP1=0, select bank1
  2586  0278  0845               	movf	(sprintf@tmpval+2)^(0+128),w
  2587  0279  1283               	bcf	3,5	;RP0=0, select bank0
  2588  027A  1303               	bcf	3,6	;RP1=0, select bank0
  2589  027B  00A2               	movwf	___flge@ff1+2
  2590  027C  1683               	bsf	3,5	;RP0=1, select bank1
  2591  027D  1303               	bcf	3,6	;RP1=0, select bank1
  2592  027E  0844               	movf	(sprintf@tmpval+1)^(0+128),w
  2593  027F  1283               	bcf	3,5	;RP0=0, select bank0
  2594  0280  1303               	bcf	3,6	;RP1=0, select bank0
  2595  0281  00A1               	movwf	___flge@ff1+1
  2596  0282  1683               	bsf	3,5	;RP0=1, select bank1
  2597  0283  1303               	bcf	3,6	;RP1=0, select bank1
  2598  0284  0843               	movf	sprintf@tmpval^(0+128),w
  2599  0285  1283               	bcf	3,5	;RP0=0, select bank0
  2600  0286  1303               	bcf	3,6	;RP1=0, select bank0
  2601  0287  00A0               	movwf	___flge@ff1
  2602  0288  3041               	movlw	65
  2603  0289  00A7               	movwf	___flge@ff2+3
  2604  028A  3020               	movlw	32
  2605  028B  00A6               	movwf	___flge@ff2+2
  2606  028C  3000               	movlw	0
  2607  028D  00A5               	movwf	___flge@ff2+1
  2608  028E  3000               	movlw	0
  2609  028F  00A4               	movwf	___flge@ff2
  2610  0290  160A  158A  2525  120A  118A  	fcall	___flge
  2611  0295  1C03               	btfss	3,0
  2612  0296  2A98               	goto	u7601
  2613  0297  2A99               	goto	u7600
  2614  0298                     u7601:
  2615  0298  2AA1               	goto	l4290
  2616  0299                     u7600:
  2617  0299                     l4288:
  2618                           
  2619                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  2620  0299  3001               	movlw	1
  2621  029A  1683               	bsf	3,5	;RP0=1, select bank1
  2622  029B  1303               	bcf	3,6	;RP1=0, select bank1
  2623  029C  07C1               	addwf	sprintf@eexp^(0+128),f
  2624  029D  1803               	skipnc
  2625  029E  0AC2               	incf	(sprintf@eexp+1)^(0+128),f
  2626  029F  3000               	movlw	0
  2627  02A0  07C2               	addwf	(sprintf@eexp+1)^(0+128),f
  2628  02A1                     l4290:
  2629                           
  2630                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  2631  02A1  1683               	bsf	3,5	;RP0=1, select bank1
  2632  02A2  1303               	bcf	3,6	;RP1=0, select bank1
  2633  02A3  0849               	movf	(sprintf@prec+1)^(0+128),w
  2634  02A4  3A80               	xorlw	128
  2635  02A5  00FF               	movwf	btemp+1
  2636  02A6  3080               	movlw	128
  2637  02A7  027F               	subwf	btemp+1,w
  2638  02A8  1D03               	skipz
  2639  02A9  2AAC               	goto	u7615
  2640  02AA  300D               	movlw	13
  2641  02AB  0248               	subwf	sprintf@prec^(0+128),w
  2642  02AC                     u7615:
  2643  02AC  1803               	skipnc
  2644  02AD  2AAF               	goto	u7611
  2645  02AE  2AB0               	goto	u7610
  2646  02AF                     u7611:
  2647  02AF  2AF7               	goto	l4294
  2648  02B0                     u7610:
  2649  02B0                     l4292:
  2650                           
  2651                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  2652  02B0  1683               	bsf	3,5	;RP0=1, select bank1
  2653  02B1  1303               	bcf	3,6	;RP1=0, select bank1
  2654  02B2  0848               	movf	sprintf@prec^(0+128),w
  2655  02B3  160A  118A  2079  120A  118A  	fcall	_fround
  2656  02B8  1283               	bcf	3,5	;RP0=0, select bank0
  2657  02B9  1303               	bcf	3,6	;RP1=0, select bank0
  2658  02BA  084D               	movf	?_fround+3,w
  2659  02BB  00E1               	movwf	___fladd@b+3
  2660  02BC  084C               	movf	?_fround+2,w
  2661  02BD  00E0               	movwf	___fladd@b+2
  2662  02BE  084B               	movf	?_fround+1,w
  2663  02BF  00DF               	movwf	___fladd@b+1
  2664  02C0  084A               	movf	?_fround,w
  2665  02C1  00DE               	movwf	___fladd@b
  2666  02C2  1683               	bsf	3,5	;RP0=1, select bank1
  2667  02C3  1303               	bcf	3,6	;RP1=0, select bank1
  2668  02C4  084D               	movf	(sprintf@fval+3)^(0+128),w
  2669  02C5  1283               	bcf	3,5	;RP0=0, select bank0
  2670  02C6  1303               	bcf	3,6	;RP1=0, select bank0
  2671  02C7  00E5               	movwf	___fladd@a+3
  2672  02C8  1683               	bsf	3,5	;RP0=1, select bank1
  2673  02C9  1303               	bcf	3,6	;RP1=0, select bank1
  2674  02CA  084C               	movf	(sprintf@fval+2)^(0+128),w
  2675  02CB  1283               	bcf	3,5	;RP0=0, select bank0
  2676  02CC  1303               	bcf	3,6	;RP1=0, select bank0
  2677  02CD  00E4               	movwf	___fladd@a+2
  2678  02CE  1683               	bsf	3,5	;RP0=1, select bank1
  2679  02CF  1303               	bcf	3,6	;RP1=0, select bank1
  2680  02D0  084B               	movf	(sprintf@fval+1)^(0+128),w
  2681  02D1  1283               	bcf	3,5	;RP0=0, select bank0
  2682  02D2  1303               	bcf	3,6	;RP1=0, select bank0
  2683  02D3  00E3               	movwf	___fladd@a+1
  2684  02D4  1683               	bsf	3,5	;RP0=1, select bank1
  2685  02D5  1303               	bcf	3,6	;RP1=0, select bank1
  2686  02D6  084A               	movf	sprintf@fval^(0+128),w
  2687  02D7  1283               	bcf	3,5	;RP0=0, select bank0
  2688  02D8  1303               	bcf	3,6	;RP1=0, select bank0
  2689  02D9  00E2               	movwf	___fladd@a
  2690  02DA  160A  118A  24C0  120A  118A  	fcall	___fladd
  2691  02DF  1283               	bcf	3,5	;RP0=0, select bank0
  2692  02E0  1303               	bcf	3,6	;RP1=0, select bank0
  2693  02E1  0861               	movf	?___fladd+3,w
  2694  02E2  1683               	bsf	3,5	;RP0=1, select bank1
  2695  02E3  1303               	bcf	3,6	;RP1=0, select bank1
  2696  02E4  00CD               	movwf	(sprintf@fval+3)^(0+128)
  2697  02E5  1283               	bcf	3,5	;RP0=0, select bank0
  2698  02E6  1303               	bcf	3,6	;RP1=0, select bank0
  2699  02E7  0860               	movf	?___fladd+2,w
  2700  02E8  1683               	bsf	3,5	;RP0=1, select bank1
  2701  02E9  1303               	bcf	3,6	;RP1=0, select bank1
  2702  02EA  00CC               	movwf	(sprintf@fval+2)^(0+128)
  2703  02EB  1283               	bcf	3,5	;RP0=0, select bank0
  2704  02EC  1303               	bcf	3,6	;RP1=0, select bank0
  2705  02ED  085F               	movf	?___fladd+1,w
  2706  02EE  1683               	bsf	3,5	;RP0=1, select bank1
  2707  02EF  1303               	bcf	3,6	;RP1=0, select bank1
  2708  02F0  00CB               	movwf	(sprintf@fval+1)^(0+128)
  2709  02F1  1283               	bcf	3,5	;RP0=0, select bank0
  2710  02F2  1303               	bcf	3,6	;RP1=0, select bank0
  2711  02F3  085E               	movf	?___fladd,w
  2712  02F4  1683               	bsf	3,5	;RP0=1, select bank1
  2713  02F5  1303               	bcf	3,6	;RP1=0, select bank1
  2714  02F6  00CA               	movwf	sprintf@fval^(0+128)
  2715  02F7                     l4294:
  2716                           
  2717                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2718  02F7  1683               	bsf	3,5	;RP0=1, select bank1
  2719  02F8  1303               	bcf	3,6	;RP1=0, select bank1
  2720  02F9  0842               	movf	(sprintf@eexp+1)^(0+128),w
  2721  02FA  3A80               	xorlw	128
  2722  02FB  00FF               	movwf	btemp+1
  2723  02FC  3080               	movlw	128
  2724  02FD  027F               	subwf	btemp+1,w
  2725  02FE  1D03               	skipz
  2726  02FF  2B02               	goto	u7625
  2727  0300  300A               	movlw	10
  2728  0301  0241               	subwf	sprintf@eexp^(0+128),w
  2729  0302                     u7625:
  2730  0302  1803               	skipnc
  2731  0303  2B05               	goto	u7621
  2732  0304  2B06               	goto	u7620
  2733  0305                     u7621:
  2734  0305  2B65               	goto	l4302
  2735  0306                     u7620:
  2736  0306                     l4296:
  2737  0306  1683               	bsf	3,5	;RP0=1, select bank1
  2738  0307  1303               	bcf	3,6	;RP1=0, select bank1
  2739  0308  084D               	movf	(sprintf@fval+3)^(0+128),w
  2740  0309  1283               	bcf	3,5	;RP0=0, select bank0
  2741  030A  1303               	bcf	3,6	;RP1=0, select bank0
  2742  030B  00A3               	movwf	___fleq@ff1+3
  2743  030C  1683               	bsf	3,5	;RP0=1, select bank1
  2744  030D  1303               	bcf	3,6	;RP1=0, select bank1
  2745  030E  084C               	movf	(sprintf@fval+2)^(0+128),w
  2746  030F  1283               	bcf	3,5	;RP0=0, select bank0
  2747  0310  1303               	bcf	3,6	;RP1=0, select bank0
  2748  0311  00A2               	movwf	___fleq@ff1+2
  2749  0312  1683               	bsf	3,5	;RP0=1, select bank1
  2750  0313  1303               	bcf	3,6	;RP1=0, select bank1
  2751  0314  084B               	movf	(sprintf@fval+1)^(0+128),w
  2752  0315  1283               	bcf	3,5	;RP0=0, select bank0
  2753  0316  1303               	bcf	3,6	;RP1=0, select bank0
  2754  0317  00A1               	movwf	___fleq@ff1+1
  2755  0318  1683               	bsf	3,5	;RP0=1, select bank1
  2756  0319  1303               	bcf	3,6	;RP1=0, select bank1
  2757  031A  084A               	movf	sprintf@fval^(0+128),w
  2758  031B  1283               	bcf	3,5	;RP0=0, select bank0
  2759  031C  1303               	bcf	3,6	;RP1=0, select bank0
  2760  031D  00A0               	movwf	___fleq@ff1
  2761  031E  3000               	movlw	0
  2762  031F  00A7               	movwf	___fleq@ff2+3
  2763  0320  3000               	movlw	0
  2764  0321  00A6               	movwf	___fleq@ff2+2
  2765  0322  3000               	movlw	0
  2766  0323  00A5               	movwf	___fleq@ff2+1
  2767  0324  3000               	movlw	0
  2768  0325  00A4               	movwf	___fleq@ff2
  2769  0326  160A  158A  2238  120A  118A  	fcall	___fleq
  2770  032B  1803               	btfsc	3,0
  2771  032C  2B2E               	goto	u7631
  2772  032D  2B2F               	goto	u7630
  2773  032E                     u7631:
  2774  032E  2C11               	goto	l4316
  2775  032F                     u7630:
  2776  032F                     l4298:
  2777  032F  1683               	bsf	3,5	;RP0=1, select bank1
  2778  0330  1303               	bcf	3,6	;RP1=0, select bank1
  2779  0331  084D               	movf	(sprintf@fval+3)^(0+128),w
  2780  0332  1283               	bcf	3,5	;RP0=0, select bank0
  2781  0333  1303               	bcf	3,6	;RP1=0, select bank0
  2782  0334  00E0               	movwf	___fltol@f1+3
  2783  0335  1683               	bsf	3,5	;RP0=1, select bank1
  2784  0336  1303               	bcf	3,6	;RP1=0, select bank1
  2785  0337  084C               	movf	(sprintf@fval+2)^(0+128),w
  2786  0338  1283               	bcf	3,5	;RP0=0, select bank0
  2787  0339  1303               	bcf	3,6	;RP1=0, select bank0
  2788  033A  00DF               	movwf	___fltol@f1+2
  2789  033B  1683               	bsf	3,5	;RP0=1, select bank1
  2790  033C  1303               	bcf	3,6	;RP1=0, select bank1
  2791  033D  084B               	movf	(sprintf@fval+1)^(0+128),w
  2792  033E  1283               	bcf	3,5	;RP0=0, select bank0
  2793  033F  1303               	bcf	3,6	;RP1=0, select bank0
  2794  0340  00DE               	movwf	___fltol@f1+1
  2795  0341  1683               	bsf	3,5	;RP0=1, select bank1
  2796  0342  1303               	bcf	3,6	;RP1=0, select bank1
  2797  0343  084A               	movf	sprintf@fval^(0+128),w
  2798  0344  1283               	bcf	3,5	;RP0=0, select bank0
  2799  0345  1303               	bcf	3,6	;RP1=0, select bank0
  2800  0346  00DD               	movwf	___fltol@f1
  2801  0347  160A  158A  24A9  120A  118A  	fcall	___fltol
  2802  034C  1283               	bcf	3,5	;RP0=0, select bank0
  2803  034D  1303               	bcf	3,6	;RP1=0, select bank0
  2804  034E  0860               	movf	?___fltol+3,w
  2805  034F  045F               	iorwf	?___fltol+2,w
  2806  0350  045E               	iorwf	?___fltol+1,w
  2807  0351  045D               	iorwf	?___fltol,w
  2808  0352  1D03               	skipz
  2809  0353  2B55               	goto	u7641
  2810  0354  2B56               	goto	u7640
  2811  0355                     u7641:
  2812  0355  2C11               	goto	l4316
  2813  0356                     u7640:
  2814  0356                     l4300:
  2815  0356  1683               	bsf	3,5	;RP0=1, select bank1
  2816  0357  1303               	bcf	3,6	;RP1=0, select bank1
  2817  0358  0842               	movf	(sprintf@eexp+1)^(0+128),w
  2818  0359  3A80               	xorlw	128
  2819  035A  00FF               	movwf	btemp+1
  2820  035B  3080               	movlw	128
  2821  035C  027F               	subwf	btemp+1,w
  2822  035D  1D03               	skipz
  2823  035E  2B61               	goto	u7655
  2824  035F  3002               	movlw	2
  2825  0360  0241               	subwf	sprintf@eexp^(0+128),w
  2826  0361                     u7655:
  2827  0361  1C03               	skipc
  2828  0362  2B64               	goto	u7651
  2829  0363  2B65               	goto	u7650
  2830  0364                     u7651:
  2831  0364  2C11               	goto	l4316
  2832  0365                     u7650:
  2833  0365                     l4302:
  2834                           
  2835                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
  2836  0365  1683               	bsf	3,5	;RP0=1, select bank1
  2837  0366  1303               	bcf	3,6	;RP1=0, select bank1
  2838  0367  0846               	movf	(sprintf@tmpval+3)^(0+128),w
  2839  0368  1283               	bcf	3,5	;RP0=0, select bank0
  2840  0369  1303               	bcf	3,6	;RP1=0, select bank0
  2841  036A  00A3               	movwf	___flge@ff1+3
  2842  036B  1683               	bsf	3,5	;RP0=1, select bank1
  2843  036C  1303               	bcf	3,6	;RP1=0, select bank1
  2844  036D  0845               	movf	(sprintf@tmpval+2)^(0+128),w
  2845  036E  1283               	bcf	3,5	;RP0=0, select bank0
  2846  036F  1303               	bcf	3,6	;RP1=0, select bank0
  2847  0370  00A2               	movwf	___flge@ff1+2
  2848  0371  1683               	bsf	3,5	;RP0=1, select bank1
  2849  0372  1303               	bcf	3,6	;RP1=0, select bank1
  2850  0373  0844               	movf	(sprintf@tmpval+1)^(0+128),w
  2851  0374  1283               	bcf	3,5	;RP0=0, select bank0
  2852  0375  1303               	bcf	3,6	;RP1=0, select bank0
  2853  0376  00A1               	movwf	___flge@ff1+1
  2854  0377  1683               	bsf	3,5	;RP0=1, select bank1
  2855  0378  1303               	bcf	3,6	;RP1=0, select bank1
  2856  0379  0843               	movf	sprintf@tmpval^(0+128),w
  2857  037A  1283               	bcf	3,5	;RP0=0, select bank0
  2858  037B  1303               	bcf	3,6	;RP1=0, select bank0
  2859  037C  00A0               	movwf	___flge@ff1
  2860  037D  3040               	movlw	64
  2861  037E  00A7               	movwf	___flge@ff2+3
  2862  037F  3089               	movlw	137
  2863  0380  00A6               	movwf	___flge@ff2+2
  2864  0381  3070               	movlw	112
  2865  0382  00A5               	movwf	___flge@ff2+1
  2866  0383  305F               	movlw	95
  2867  0384  00A4               	movwf	___flge@ff2
  2868  0385  160A  158A  2525  120A  118A  	fcall	___flge
  2869  038A  1803               	btfsc	3,0
  2870  038B  2B8D               	goto	u7661
  2871  038C  2B8E               	goto	u7660
  2872  038D                     u7661:
  2873  038D  2B97               	goto	l4306
  2874  038E                     u7660:
  2875  038E                     l4304:
  2876                           
  2877                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
  2878  038E  30F7               	movlw	247
  2879  038F  1683               	bsf	3,5	;RP0=1, select bank1
  2880  0390  1303               	bcf	3,6	;RP1=0, select bank1
  2881  0391  07C1               	addwf	sprintf@eexp^(0+128),f
  2882  0392  1803               	skipnc
  2883  0393  0AC2               	incf	(sprintf@eexp+1)^(0+128),f
  2884  0394  30FF               	movlw	255
  2885  0395  07C2               	addwf	(sprintf@eexp+1)^(0+128),f
  2886                           
  2887                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1148:      }else{
  2888  0396  2B9F               	goto	l4308
  2889  0397                     l4306:
  2890                           
  2891                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
  2892  0397  30F8               	movlw	248
  2893  0398  1683               	bsf	3,5	;RP0=1, select bank1
  2894  0399  1303               	bcf	3,6	;RP1=0, select bank1
  2895  039A  07C1               	addwf	sprintf@eexp^(0+128),f
  2896  039B  1803               	skipnc
  2897  039C  0AC2               	incf	(sprintf@eexp+1)^(0+128),f
  2898  039D  30FF               	movlw	255
  2899  039E  07C2               	addwf	(sprintf@eexp+1)^(0+128),f
  2900  039F                     l4308:
  2901                           
  2902                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
  2903  039F  0841               	movf	sprintf@eexp^(0+128),w
  2904  03A0  120A  158A  249D  120A  118A  	fcall	_scale
  2905  03A5  1283               	bcf	3,5	;RP0=0, select bank0
  2906  03A6  1303               	bcf	3,6	;RP1=0, select bank0
  2907  03A7  084D               	movf	?_scale+3,w
  2908  03A8  1683               	bsf	3,5	;RP0=1, select bank1
  2909  03A9  1303               	bcf	3,6	;RP1=0, select bank1
  2910  03AA  00C6               	movwf	(sprintf@tmpval+3)^(0+128)
  2911  03AB  1283               	bcf	3,5	;RP0=0, select bank0
  2912  03AC  1303               	bcf	3,6	;RP1=0, select bank0
  2913  03AD  084C               	movf	?_scale+2,w
  2914  03AE  1683               	bsf	3,5	;RP0=1, select bank1
  2915  03AF  1303               	bcf	3,6	;RP1=0, select bank1
  2916  03B0  00C5               	movwf	(sprintf@tmpval+2)^(0+128)
  2917  03B1  1283               	bcf	3,5	;RP0=0, select bank0
  2918  03B2  1303               	bcf	3,6	;RP1=0, select bank0
  2919  03B3  084B               	movf	?_scale+1,w
  2920  03B4  1683               	bsf	3,5	;RP0=1, select bank1
  2921  03B5  1303               	bcf	3,6	;RP1=0, select bank1
  2922  03B6  00C4               	movwf	(sprintf@tmpval+1)^(0+128)
  2923  03B7  1283               	bcf	3,5	;RP0=0, select bank0
  2924  03B8  1303               	bcf	3,6	;RP1=0, select bank0
  2925  03B9  084A               	movf	?_scale,w
  2926  03BA  1683               	bsf	3,5	;RP0=1, select bank1
  2927  03BB  1303               	bcf	3,6	;RP1=0, select bank1
  2928  03BC  00C3               	movwf	sprintf@tmpval^(0+128)
  2929  03BD                     l4310:
  2930  03BD  084D               	movf	(sprintf@fval+3)^(0+128),w
  2931  03BE  1283               	bcf	3,5	;RP0=0, select bank0
  2932  03BF  1303               	bcf	3,6	;RP1=0, select bank0
  2933  03C0  00A3               	movwf	__div_to_l_@f1+3
  2934  03C1  1683               	bsf	3,5	;RP0=1, select bank1
  2935  03C2  1303               	bcf	3,6	;RP1=0, select bank1
  2936  03C3  084C               	movf	(sprintf@fval+2)^(0+128),w
  2937  03C4  1283               	bcf	3,5	;RP0=0, select bank0
  2938  03C5  1303               	bcf	3,6	;RP1=0, select bank0
  2939  03C6  00A2               	movwf	__div_to_l_@f1+2
  2940  03C7  1683               	bsf	3,5	;RP0=1, select bank1
  2941  03C8  1303               	bcf	3,6	;RP1=0, select bank1
  2942  03C9  084B               	movf	(sprintf@fval+1)^(0+128),w
  2943  03CA  1283               	bcf	3,5	;RP0=0, select bank0
  2944  03CB  1303               	bcf	3,6	;RP1=0, select bank0
  2945  03CC  00A1               	movwf	__div_to_l_@f1+1
  2946  03CD  1683               	bsf	3,5	;RP0=1, select bank1
  2947  03CE  1303               	bcf	3,6	;RP1=0, select bank1
  2948  03CF  084A               	movf	sprintf@fval^(0+128),w
  2949  03D0  1283               	bcf	3,5	;RP0=0, select bank0
  2950  03D1  1303               	bcf	3,6	;RP1=0, select bank0
  2951  03D2  00A0               	movwf	__div_to_l_@f1
  2952  03D3  1683               	bsf	3,5	;RP0=1, select bank1
  2953  03D4  1303               	bcf	3,6	;RP1=0, select bank1
  2954  03D5  0846               	movf	(sprintf@tmpval+3)^(0+128),w
  2955  03D6  1283               	bcf	3,5	;RP0=0, select bank0
  2956  03D7  1303               	bcf	3,6	;RP1=0, select bank0
  2957  03D8  00A7               	movwf	__div_to_l_@f2+3
  2958  03D9  1683               	bsf	3,5	;RP0=1, select bank1
  2959  03DA  1303               	bcf	3,6	;RP1=0, select bank1
  2960  03DB  0845               	movf	(sprintf@tmpval+2)^(0+128),w
  2961  03DC  1283               	bcf	3,5	;RP0=0, select bank0
  2962  03DD  1303               	bcf	3,6	;RP1=0, select bank0
  2963  03DE  00A6               	movwf	__div_to_l_@f2+2
  2964  03DF  1683               	bsf	3,5	;RP0=1, select bank1
  2965  03E0  1303               	bcf	3,6	;RP1=0, select bank1
  2966  03E1  0844               	movf	(sprintf@tmpval+1)^(0+128),w
  2967  03E2  1283               	bcf	3,5	;RP0=0, select bank0
  2968  03E3  1303               	bcf	3,6	;RP1=0, select bank0
  2969  03E4  00A5               	movwf	__div_to_l_@f2+1
  2970  03E5  1683               	bsf	3,5	;RP0=1, select bank1
  2971  03E6  1303               	bcf	3,6	;RP1=0, select bank1
  2972  03E7  0843               	movf	sprintf@tmpval^(0+128),w
  2973  03E8  1283               	bcf	3,5	;RP0=0, select bank0
  2974  03E9  1303               	bcf	3,6	;RP1=0, select bank0
  2975  03EA  00A4               	movwf	__div_to_l_@f2
  2976  03EB  160A  158A  2742  120A  118A  	fcall	__div_to_l_
  2977  03F0  1283               	bcf	3,5	;RP0=0, select bank0
  2978  03F1  1303               	bcf	3,6	;RP1=0, select bank0
  2979  03F2  0823               	movf	?__div_to_l_+3,w
  2980  03F3  1683               	bsf	3,5	;RP0=1, select bank1
  2981  03F4  1303               	bcf	3,6	;RP1=0, select bank1
  2982  03F5  00C0               	movwf	(sprintf@val+3)^(0+128)
  2983  03F6  1283               	bcf	3,5	;RP0=0, select bank0
  2984  03F7  1303               	bcf	3,6	;RP1=0, select bank0
  2985  03F8  0822               	movf	?__div_to_l_+2,w
  2986  03F9  1683               	bsf	3,5	;RP0=1, select bank1
  2987  03FA  1303               	bcf	3,6	;RP1=0, select bank1
  2988  03FB  00BF               	movwf	(sprintf@val+2)^(0+128)
  2989  03FC  1283               	bcf	3,5	;RP0=0, select bank0
  2990  03FD  1303               	bcf	3,6	;RP1=0, select bank0
  2991  03FE  0821               	movf	?__div_to_l_+1,w
  2992  03FF  1683               	bsf	3,5	;RP0=1, select bank1
  2993  0400  1303               	bcf	3,6	;RP1=0, select bank1
  2994  0401  00BE               	movwf	(sprintf@val+1)^(0+128)
  2995  0402  1283               	bcf	3,5	;RP0=0, select bank0
  2996  0403  1303               	bcf	3,6	;RP1=0, select bank0
  2997  0404  0820               	movf	?__div_to_l_,w
  2998  0405  1683               	bsf	3,5	;RP0=1, select bank1
  2999  0406  1303               	bcf	3,6	;RP1=0, select bank1
  3000  0407  00BD               	movwf	sprintf@val^(0+128)
  3001  0408                     l4314:
  3002                           
  3003                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
  3004  0408  3000               	movlw	0
  3005  0409  00CD               	movwf	(sprintf@fval+3)^(0+128)
  3006  040A  3000               	movlw	0
  3007  040B  00CC               	movwf	(sprintf@fval+2)^(0+128)
  3008  040C  3000               	movlw	0
  3009  040D  00CB               	movwf	(sprintf@fval+1)^(0+128)
  3010  040E  3000               	movlw	0
  3011  040F  00CA               	movwf	sprintf@fval^(0+128)
  3012                           
  3013                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
  3014  0410  2C93               	goto	l4322
  3015  0411                     l4316:
  3016                           
  3017                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
  3018  0411  1683               	bsf	3,5	;RP0=1, select bank1
  3019  0412  1303               	bcf	3,6	;RP1=0, select bank1
  3020  0413  084D               	movf	(sprintf@fval+3)^(0+128),w
  3021  0414  1283               	bcf	3,5	;RP0=0, select bank0
  3022  0415  1303               	bcf	3,6	;RP1=0, select bank0
  3023  0416  00E0               	movwf	___fltol@f1+3
  3024  0417  1683               	bsf	3,5	;RP0=1, select bank1
  3025  0418  1303               	bcf	3,6	;RP1=0, select bank1
  3026  0419  084C               	movf	(sprintf@fval+2)^(0+128),w
  3027  041A  1283               	bcf	3,5	;RP0=0, select bank0
  3028  041B  1303               	bcf	3,6	;RP1=0, select bank0
  3029  041C  00DF               	movwf	___fltol@f1+2
  3030  041D  1683               	bsf	3,5	;RP0=1, select bank1
  3031  041E  1303               	bcf	3,6	;RP1=0, select bank1
  3032  041F  084B               	movf	(sprintf@fval+1)^(0+128),w
  3033  0420  1283               	bcf	3,5	;RP0=0, select bank0
  3034  0421  1303               	bcf	3,6	;RP1=0, select bank0
  3035  0422  00DE               	movwf	___fltol@f1+1
  3036  0423  1683               	bsf	3,5	;RP0=1, select bank1
  3037  0424  1303               	bcf	3,6	;RP1=0, select bank1
  3038  0425  084A               	movf	sprintf@fval^(0+128),w
  3039  0426  1283               	bcf	3,5	;RP0=0, select bank0
  3040  0427  1303               	bcf	3,6	;RP1=0, select bank0
  3041  0428  00DD               	movwf	___fltol@f1
  3042  0429  160A  158A  24A9  120A  118A  	fcall	___fltol
  3043  042E  1283               	bcf	3,5	;RP0=0, select bank0
  3044  042F  1303               	bcf	3,6	;RP1=0, select bank0
  3045  0430  0860               	movf	?___fltol+3,w
  3046  0431  1683               	bsf	3,5	;RP0=1, select bank1
  3047  0432  1303               	bcf	3,6	;RP1=0, select bank1
  3048  0433  00C0               	movwf	(sprintf@val+3)^(0+128)
  3049  0434  1283               	bcf	3,5	;RP0=0, select bank0
  3050  0435  1303               	bcf	3,6	;RP1=0, select bank0
  3051  0436  085F               	movf	?___fltol+2,w
  3052  0437  1683               	bsf	3,5	;RP0=1, select bank1
  3053  0438  1303               	bcf	3,6	;RP1=0, select bank1
  3054  0439  00BF               	movwf	(sprintf@val+2)^(0+128)
  3055  043A  1283               	bcf	3,5	;RP0=0, select bank0
  3056  043B  1303               	bcf	3,6	;RP1=0, select bank0
  3057  043C  085E               	movf	?___fltol+1,w
  3058  043D  1683               	bsf	3,5	;RP0=1, select bank1
  3059  043E  1303               	bcf	3,6	;RP1=0, select bank1
  3060  043F  00BE               	movwf	(sprintf@val+1)^(0+128)
  3061  0440  1283               	bcf	3,5	;RP0=0, select bank0
  3062  0441  1303               	bcf	3,6	;RP1=0, select bank0
  3063  0442  085D               	movf	?___fltol,w
  3064  0443  1683               	bsf	3,5	;RP0=1, select bank1
  3065  0444  1303               	bcf	3,6	;RP1=0, select bank1
  3066  0445  00BD               	movwf	sprintf@val^(0+128)
  3067  0446                     l4318:
  3068                           
  3069                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
  3070  0446  0840               	movf	(sprintf@val+3)^(0+128),w
  3071  0447  1283               	bcf	3,5	;RP0=0, select bank0
  3072  0448  1303               	bcf	3,6	;RP1=0, select bank0
  3073  0449  00B3               	movwf	___xxtofl@val+3
  3074  044A  1683               	bsf	3,5	;RP0=1, select bank1
  3075  044B  1303               	bcf	3,6	;RP1=0, select bank1
  3076  044C  083F               	movf	(sprintf@val+2)^(0+128),w
  3077  044D  1283               	bcf	3,5	;RP0=0, select bank0
  3078  044E  1303               	bcf	3,6	;RP1=0, select bank0
  3079  044F  00B2               	movwf	___xxtofl@val+2
  3080  0450  1683               	bsf	3,5	;RP0=1, select bank1
  3081  0451  1303               	bcf	3,6	;RP1=0, select bank1
  3082  0452  083E               	movf	(sprintf@val+1)^(0+128),w
  3083  0453  1283               	bcf	3,5	;RP0=0, select bank0
  3084  0454  1303               	bcf	3,6	;RP1=0, select bank0
  3085  0455  00B1               	movwf	___xxtofl@val+1
  3086  0456  1683               	bsf	3,5	;RP0=1, select bank1
  3087  0457  1303               	bcf	3,6	;RP1=0, select bank1
  3088  0458  083D               	movf	sprintf@val^(0+128),w
  3089  0459  1283               	bcf	3,5	;RP0=0, select bank0
  3090  045A  1303               	bcf	3,6	;RP1=0, select bank0
  3091  045B  00B0               	movwf	___xxtofl@val
  3092  045C  3000               	movlw	0
  3093  045D  160A  158A  25C9  120A  118A  	fcall	___xxtofl
  3094  0462  1283               	bcf	3,5	;RP0=0, select bank0
  3095  0463  1303               	bcf	3,6	;RP1=0, select bank0
  3096  0464  0833               	movf	?___xxtofl+3,w
  3097  0465  1683               	bsf	3,5	;RP0=1, select bank1
  3098  0466  1303               	bcf	3,6	;RP1=0, select bank1
  3099  0467  00A7               	movwf	(___flsub@a+3)^(0+128)
  3100  0468  1283               	bcf	3,5	;RP0=0, select bank0
  3101  0469  1303               	bcf	3,6	;RP1=0, select bank0
  3102  046A  0832               	movf	?___xxtofl+2,w
  3103  046B  1683               	bsf	3,5	;RP0=1, select bank1
  3104  046C  1303               	bcf	3,6	;RP1=0, select bank1
  3105  046D  00A6               	movwf	(___flsub@a+2)^(0+128)
  3106  046E  1283               	bcf	3,5	;RP0=0, select bank0
  3107  046F  1303               	bcf	3,6	;RP1=0, select bank0
  3108  0470  0831               	movf	?___xxtofl+1,w
  3109  0471  1683               	bsf	3,5	;RP0=1, select bank1
  3110  0472  1303               	bcf	3,6	;RP1=0, select bank1
  3111  0473  00A5               	movwf	(___flsub@a+1)^(0+128)
  3112  0474  1283               	bcf	3,5	;RP0=0, select bank0
  3113  0475  1303               	bcf	3,6	;RP1=0, select bank0
  3114  0476  0830               	movf	?___xxtofl,w
  3115  0477  1683               	bsf	3,5	;RP0=1, select bank1
  3116  0478  1303               	bcf	3,6	;RP1=0, select bank1
  3117  0479  00A4               	movwf	___flsub@a^(0+128)
  3118  047A  084D               	movf	(sprintf@fval+3)^(0+128),w
  3119  047B  00AB               	movwf	(___flsub@b+3)^(0+128)
  3120  047C  084C               	movf	(sprintf@fval+2)^(0+128),w
  3121  047D  00AA               	movwf	(___flsub@b+2)^(0+128)
  3122  047E  084B               	movf	(sprintf@fval+1)^(0+128),w
  3123  047F  00A9               	movwf	(___flsub@b+1)^(0+128)
  3124  0480  084A               	movf	sprintf@fval^(0+128),w
  3125  0481  00A8               	movwf	___flsub@b^(0+128)
  3126  0482  160A  158A  2288  120A  118A  	fcall	___flsub
  3127  0487  1683               	bsf	3,5	;RP0=1, select bank1
  3128  0488  1303               	bcf	3,6	;RP1=0, select bank1
  3129  0489  0827               	movf	(?___flsub+3)^(0+128),w
  3130  048A  00CD               	movwf	(sprintf@fval+3)^(0+128)
  3131  048B  0826               	movf	(?___flsub+2)^(0+128),w
  3132  048C  00CC               	movwf	(sprintf@fval+2)^(0+128)
  3133  048D  0825               	movf	(?___flsub+1)^(0+128),w
  3134  048E  00CB               	movwf	(sprintf@fval+1)^(0+128)
  3135  048F  0824               	movf	?___flsub^(0+128),w
  3136  0490  00CA               	movwf	sprintf@fval^(0+128)
  3137  0491                     l4320:
  3138                           
  3139                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
  3140  0491  01C1               	clrf	sprintf@eexp^(0+128)
  3141  0492  01C2               	clrf	(sprintf@eexp+1)^(0+128)
  3142  0493                     l4322:
  3143                           
  3144                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  3145  0493  01CE               	clrf	sprintf@c^(0+128)
  3146  0494  0ACE               	incf	sprintf@c^(0+128),f
  3147  0495                     l4328:
  3148                           
  3149                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
  3150  0495  084E               	movf	sprintf@c^(0+128),w
  3151  0496  00B1               	movwf	??_sprintf^(0+128)
  3152  0497  3001               	movlw	1
  3153  0498                     u7675:
  3154  0498  1003               	clrc
  3155  0499  0DB1               	rlf	??_sprintf^(0+128),f
  3156  049A  3EFF               	addlw	-1
  3157  049B  1D03               	skipz
  3158  049C  2C98               	goto	u7675
  3159  049D  1003               	clrc
  3160  049E  0D31               	rlf	??_sprintf^(0+128),w
  3161  049F  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3162  04A0  0084               	movwf	4
  3163  04A1  120A  158A  200A  120A  118A  	fcall	stringdir
  3164  04A6  00B2               	movwf	(??_sprintf+1)^(0+128)
  3165  04A7  120A  158A  200A  120A  118A  	fcall	stringdir
  3166  04AC  00B3               	movwf	((??_sprintf+1)^(0+128)+1)
  3167  04AD  120A  158A  200A  120A  118A  	fcall	stringdir
  3168  04B2  00B4               	movwf	((??_sprintf+1)^(0+128)+2)
  3169  04B3  120A  158A  200A  120A  118A  	fcall	stringdir
  3170  04B8  00B5               	movwf	((??_sprintf+1)^(0+128)+3)
  3171  04B9  0835               	movf	(??_sprintf+4)^(0+128),w
  3172  04BA  0240               	subwf	(sprintf@val+3)^(0+128),w
  3173  04BB  1D03               	skipz
  3174  04BC  2CC7               	goto	u7685
  3175  04BD  0834               	movf	(??_sprintf+3)^(0+128),w
  3176  04BE  023F               	subwf	(sprintf@val+2)^(0+128),w
  3177  04BF  1D03               	skipz
  3178  04C0  2CC7               	goto	u7685
  3179  04C1  0833               	movf	(??_sprintf+2)^(0+128),w
  3180  04C2  023E               	subwf	(sprintf@val+1)^(0+128),w
  3181  04C3  1D03               	skipz
  3182  04C4  2CC7               	goto	u7685
  3183  04C5  0832               	movf	(??_sprintf+1)^(0+128),w
  3184  04C6  023D               	subwf	sprintf@val^(0+128),w
  3185  04C7                     u7685:
  3186  04C7  1803               	skipnc
  3187  04C8  2CCA               	goto	u7681
  3188  04C9  2CCB               	goto	u7680
  3189  04CA                     u7681:
  3190  04CA  2CCC               	goto	l4332
  3191  04CB                     u7680:
  3192  04CB  2CD6               	goto	l4334
  3193  04CC                     l4332:
  3194  04CC  3001               	movlw	1
  3195  04CD  00B1               	movwf	??_sprintf^(0+128)
  3196  04CE  0831               	movf	??_sprintf^(0+128),w
  3197  04CF  07CE               	addwf	sprintf@c^(0+128),f
  3198  04D0  300A               	movlw	10
  3199  04D1  064E               	xorwf	sprintf@c^(0+128),w
  3200  04D2  1D03               	btfss	3,2
  3201  04D3  2CD5               	goto	u7691
  3202  04D4  2CD6               	goto	u7690
  3203  04D5                     u7691:
  3204  04D5  2C95               	goto	l4328
  3205  04D6                     u7690:
  3206  04D6                     l4334:
  3207                           
  3208                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1201:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1214:     if(flag & 0x0
      +                          3)
  3209  04D6  3003               	movlw	3
  3210  04D7  053B               	andwf	sprintf@flag^(0+128),w
  3211  04D8  00B1               	movwf	??_sprintf^(0+128)
  3212  04D9  3000               	movlw	0
  3213  04DA  053C               	andwf	(sprintf@flag+1)^(0+128),w
  3214  04DB  00B2               	movwf	(??_sprintf+1)^(0+128)
  3215  04DC  0831               	movf	??_sprintf^(0+128),w
  3216  04DD  0432               	iorwf	(??_sprintf^(0+128)+1),w
  3217  04DE  1903               	btfsc	3,2
  3218  04DF  2CE1               	goto	u7701
  3219  04E0  2CE2               	goto	u7700
  3220  04E1                     u7701:
  3221  04E1  2D94               	goto	l284
  3222  04E2                     u7700:
  3223  04E2                     l4336:
  3224                           
  3225                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
  3226  04E2  302D               	movlw	45
  3227  04E3  00B1               	movwf	??_sprintf^(0+128)
  3228  04E4  0847               	movf	sprintf@sp^(0+128),w
  3229  04E5  0084               	movwf	4
  3230  04E6  0831               	movf	??_sprintf^(0+128),w
  3231  04E7  1783               	bsf	3,7	;select IRP bank2
  3232  04E8  0080               	movwf	0
  3233  04E9                     l4338:
  3234  04E9  3001               	movlw	1
  3235  04EA  00B1               	movwf	??_sprintf^(0+128)
  3236  04EB  0831               	movf	??_sprintf^(0+128),w
  3237  04EC  07C7               	addwf	sprintf@sp^(0+128),f
  3238  04ED  2D94               	goto	l284
  3239  04EE                     l4340:
  3240                           
  3241                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
  3242  04EE  084E               	movf	sprintf@c^(0+128),w
  3243  04EF  00B1               	movwf	??_sprintf^(0+128)
  3244  04F0  3001               	movlw	1
  3245  04F1                     u7715:
  3246  04F1  1003               	clrc
  3247  04F2  0DB1               	rlf	??_sprintf^(0+128),f
  3248  04F3  3EFF               	addlw	-1
  3249  04F4  1D03               	skipz
  3250  04F5  2CF1               	goto	u7715
  3251  04F6  1003               	clrc
  3252  04F7  0D31               	rlf	??_sprintf^(0+128),w
  3253  04F8  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3254  04F9  0084               	movwf	4
  3255  04FA  120A  158A  200A  120A  118A  	fcall	stringdir
  3256  04FF  1283               	bcf	3,5	;RP0=0, select bank0
  3257  0500  1303               	bcf	3,6	;RP1=0, select bank0
  3258  0501  00A0               	movwf	___lldiv@divisor
  3259  0502  120A  158A  200A  120A  118A  	fcall	stringdir
  3260  0507  00A1               	movwf	___lldiv@divisor+1
  3261  0508  120A  158A  200A  120A  118A  	fcall	stringdir
  3262  050D  00A2               	movwf	___lldiv@divisor+2
  3263  050E  120A  158A  200A  120A  118A  	fcall	stringdir
  3264  0513  00A3               	movwf	___lldiv@divisor+3
  3265  0514  1683               	bsf	3,5	;RP0=1, select bank1
  3266  0515  1303               	bcf	3,6	;RP1=0, select bank1
  3267  0516  0840               	movf	(sprintf@val+3)^(0+128),w
  3268  0517  1283               	bcf	3,5	;RP0=0, select bank0
  3269  0518  1303               	bcf	3,6	;RP1=0, select bank0
  3270  0519  00A7               	movwf	___lldiv@dividend+3
  3271  051A  1683               	bsf	3,5	;RP0=1, select bank1
  3272  051B  1303               	bcf	3,6	;RP1=0, select bank1
  3273  051C  083F               	movf	(sprintf@val+2)^(0+128),w
  3274  051D  1283               	bcf	3,5	;RP0=0, select bank0
  3275  051E  1303               	bcf	3,6	;RP1=0, select bank0
  3276  051F  00A6               	movwf	___lldiv@dividend+2
  3277  0520  1683               	bsf	3,5	;RP0=1, select bank1
  3278  0521  1303               	bcf	3,6	;RP1=0, select bank1
  3279  0522  083E               	movf	(sprintf@val+1)^(0+128),w
  3280  0523  1283               	bcf	3,5	;RP0=0, select bank0
  3281  0524  1303               	bcf	3,6	;RP1=0, select bank0
  3282  0525  00A5               	movwf	___lldiv@dividend+1
  3283  0526  1683               	bsf	3,5	;RP0=1, select bank1
  3284  0527  1303               	bcf	3,6	;RP1=0, select bank1
  3285  0528  083D               	movf	sprintf@val^(0+128),w
  3286  0529  1283               	bcf	3,5	;RP0=0, select bank0
  3287  052A  1303               	bcf	3,6	;RP1=0, select bank0
  3288  052B  00A4               	movwf	___lldiv@dividend
  3289  052C  160A  158A  2441  120A  118A  	fcall	___lldiv
  3290  0531  1283               	bcf	3,5	;RP0=0, select bank0
  3291  0532  1303               	bcf	3,6	;RP1=0, select bank0
  3292  0533  0823               	movf	?___lldiv+3,w
  3293  0534  1683               	bsf	3,5	;RP0=1, select bank1
  3294  0535  1303               	bcf	3,6	;RP1=0, select bank1
  3295  0536  00C6               	movwf	(sprintf@tmpval+3)^(0+128)
  3296  0537  1283               	bcf	3,5	;RP0=0, select bank0
  3297  0538  1303               	bcf	3,6	;RP1=0, select bank0
  3298  0539  0822               	movf	?___lldiv+2,w
  3299  053A  1683               	bsf	3,5	;RP0=1, select bank1
  3300  053B  1303               	bcf	3,6	;RP1=0, select bank1
  3301  053C  00C5               	movwf	(sprintf@tmpval+2)^(0+128)
  3302  053D  1283               	bcf	3,5	;RP0=0, select bank0
  3303  053E  1303               	bcf	3,6	;RP1=0, select bank0
  3304  053F  0821               	movf	?___lldiv+1,w
  3305  0540  1683               	bsf	3,5	;RP0=1, select bank1
  3306  0541  1303               	bcf	3,6	;RP1=0, select bank1
  3307  0542  00C4               	movwf	(sprintf@tmpval+1)^(0+128)
  3308  0543  1283               	bcf	3,5	;RP0=0, select bank0
  3309  0544  1303               	bcf	3,6	;RP1=0, select bank0
  3310  0545  0820               	movf	?___lldiv,w
  3311  0546  1683               	bsf	3,5	;RP0=1, select bank1
  3312  0547  1303               	bcf	3,6	;RP1=0, select bank1
  3313  0548  00C3               	movwf	sprintf@tmpval^(0+128)
  3314  0549                     l4342:
  3315                           
  3316                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
  3317  0549  3000               	movlw	0
  3318  054A  1283               	bcf	3,5	;RP0=0, select bank0
  3319  054B  1303               	bcf	3,6	;RP1=0, select bank0
  3320  054C  00A3               	movwf	___llmod@divisor+3
  3321  054D  3000               	movlw	0
  3322  054E  00A2               	movwf	___llmod@divisor+2
  3323  054F  3000               	movlw	0
  3324  0550  00A1               	movwf	___llmod@divisor+1
  3325  0551  300A               	movlw	10
  3326  0552  00A0               	movwf	___llmod@divisor
  3327  0553  1683               	bsf	3,5	;RP0=1, select bank1
  3328  0554  1303               	bcf	3,6	;RP1=0, select bank1
  3329  0555  0846               	movf	(sprintf@tmpval+3)^(0+128),w
  3330  0556  1283               	bcf	3,5	;RP0=0, select bank0
  3331  0557  1303               	bcf	3,6	;RP1=0, select bank0
  3332  0558  00A7               	movwf	___llmod@dividend+3
  3333  0559  1683               	bsf	3,5	;RP0=1, select bank1
  3334  055A  1303               	bcf	3,6	;RP1=0, select bank1
  3335  055B  0845               	movf	(sprintf@tmpval+2)^(0+128),w
  3336  055C  1283               	bcf	3,5	;RP0=0, select bank0
  3337  055D  1303               	bcf	3,6	;RP1=0, select bank0
  3338  055E  00A6               	movwf	___llmod@dividend+2
  3339  055F  1683               	bsf	3,5	;RP0=1, select bank1
  3340  0560  1303               	bcf	3,6	;RP1=0, select bank1
  3341  0561  0844               	movf	(sprintf@tmpval+1)^(0+128),w
  3342  0562  1283               	bcf	3,5	;RP0=0, select bank0
  3343  0563  1303               	bcf	3,6	;RP1=0, select bank0
  3344  0564  00A5               	movwf	___llmod@dividend+1
  3345  0565  1683               	bsf	3,5	;RP0=1, select bank1
  3346  0566  1303               	bcf	3,6	;RP1=0, select bank1
  3347  0567  0843               	movf	sprintf@tmpval^(0+128),w
  3348  0568  1283               	bcf	3,5	;RP0=0, select bank0
  3349  0569  1303               	bcf	3,6	;RP1=0, select bank0
  3350  056A  00A4               	movwf	___llmod@dividend
  3351  056B  160A  158A  22D8  120A  118A  	fcall	___llmod
  3352  0570  1283               	bcf	3,5	;RP0=0, select bank0
  3353  0571  1303               	bcf	3,6	;RP1=0, select bank0
  3354  0572  0823               	movf	?___llmod+3,w
  3355  0573  1683               	bsf	3,5	;RP0=1, select bank1
  3356  0574  1303               	bcf	3,6	;RP1=0, select bank1
  3357  0575  00C6               	movwf	(sprintf@tmpval+3)^(0+128)
  3358  0576  1283               	bcf	3,5	;RP0=0, select bank0
  3359  0577  1303               	bcf	3,6	;RP1=0, select bank0
  3360  0578  0822               	movf	?___llmod+2,w
  3361  0579  1683               	bsf	3,5	;RP0=1, select bank1
  3362  057A  1303               	bcf	3,6	;RP1=0, select bank1
  3363  057B  00C5               	movwf	(sprintf@tmpval+2)^(0+128)
  3364  057C  1283               	bcf	3,5	;RP0=0, select bank0
  3365  057D  1303               	bcf	3,6	;RP1=0, select bank0
  3366  057E  0821               	movf	?___llmod+1,w
  3367  057F  1683               	bsf	3,5	;RP0=1, select bank1
  3368  0580  1303               	bcf	3,6	;RP1=0, select bank1
  3369  0581  00C4               	movwf	(sprintf@tmpval+1)^(0+128)
  3370  0582  1283               	bcf	3,5	;RP0=0, select bank0
  3371  0583  1303               	bcf	3,6	;RP1=0, select bank0
  3372  0584  0820               	movf	?___llmod,w
  3373  0585  1683               	bsf	3,5	;RP0=1, select bank1
  3374  0586  1303               	bcf	3,6	;RP1=0, select bank1
  3375  0587  00C3               	movwf	sprintf@tmpval^(0+128)
  3376  0588                     l4344:
  3377                           
  3378                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
  3379  0588  0843               	movf	sprintf@tmpval^(0+128),w
  3380  0589  3E30               	addlw	48
  3381  058A  00B1               	movwf	??_sprintf^(0+128)
  3382  058B  0847               	movf	sprintf@sp^(0+128),w
  3383  058C  0084               	movwf	4
  3384  058D  0831               	movf	??_sprintf^(0+128),w
  3385  058E  1783               	bsf	3,7	;select IRP bank2
  3386  058F  0080               	movwf	0
  3387  0590  3001               	movlw	1
  3388  0591  00B1               	movwf	??_sprintf^(0+128)
  3389  0592  0831               	movf	??_sprintf^(0+128),w
  3390  0593  07C7               	addwf	sprintf@sp^(0+128),f
  3391  0594                     l284:	
  3392                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1230:     };C:\Pr
      +                          ogram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1232:    }
  3393                           
  3394                           
  3395                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
  3396  0594  3001               	movlw	1
  3397  0595  02CE               	subwf	sprintf@c^(0+128),f
  3398  0596  0A4E               	incf	sprintf@c^(0+128),w
  3399  0597  1D03               	btfss	3,2
  3400  0598  2D9A               	goto	u7721
  3401  0599  2D9B               	goto	u7720
  3402  059A                     u7721:
  3403  059A  2CEE               	goto	l4340
  3404  059B                     u7720:
  3405  059B  2DAF               	goto	l4352
  3406  059C                     l4346:
  3407                           
  3408                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
  3409  059C  3030               	movlw	48
  3410  059D  1683               	bsf	3,5	;RP0=1, select bank1
  3411  059E  1303               	bcf	3,6	;RP1=0, select bank1
  3412  059F  00B1               	movwf	??_sprintf^(0+128)
  3413  05A0  0847               	movf	sprintf@sp^(0+128),w
  3414  05A1  0084               	movwf	4
  3415  05A2  0831               	movf	??_sprintf^(0+128),w
  3416  05A3  1783               	bsf	3,7	;select IRP bank2
  3417  05A4  0080               	movwf	0
  3418  05A5                     l4348:
  3419  05A5  3001               	movlw	1
  3420  05A6  00B1               	movwf	??_sprintf^(0+128)
  3421  05A7  0831               	movf	??_sprintf^(0+128),w
  3422  05A8  07C7               	addwf	sprintf@sp^(0+128),f
  3423  05A9                     l4350:
  3424                           
  3425                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
  3426  05A9  30FF               	movlw	255
  3427  05AA  07C1               	addwf	sprintf@eexp^(0+128),f
  3428  05AB  1803               	skipnc
  3429  05AC  0AC2               	incf	(sprintf@eexp+1)^(0+128),f
  3430  05AD  30FF               	movlw	255
  3431  05AE  07C2               	addwf	(sprintf@eexp+1)^(0+128),f
  3432  05AF                     l4352:
  3433                           
  3434                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
  3435  05AF  0842               	movf	(sprintf@eexp+1)^(0+128),w
  3436  05B0  3A80               	xorlw	128
  3437  05B1  00FF               	movwf	btemp+1
  3438  05B2  3080               	movlw	128
  3439  05B3  027F               	subwf	btemp+1,w
  3440  05B4  1D03               	skipz
  3441  05B5  2DB8               	goto	u7735
  3442  05B6  3001               	movlw	1
  3443  05B7  0241               	subwf	sprintf@eexp^(0+128),w
  3444  05B8                     u7735:
  3445  05B8  1803               	skipnc
  3446  05B9  2DBB               	goto	u7731
  3447  05BA  2DBC               	goto	u7730
  3448  05BB                     u7731:
  3449  05BB  2D9C               	goto	l4346
  3450  05BC                     u7730:
  3451  05BC                     l4354:
  3452                           
  3453                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  3454  05BC  1683               	bsf	3,5	;RP0=1, select bank1
  3455  05BD  1303               	bcf	3,6	;RP1=0, select bank1
  3456  05BE  0849               	movf	(sprintf@prec+1)^(0+128),w
  3457  05BF  3A80               	xorlw	128
  3458  05C0  00FF               	movwf	btemp+1
  3459  05C1  3080               	movlw	128
  3460  05C2  027F               	subwf	btemp+1,w
  3461  05C3  1D03               	skipz
  3462  05C4  2DC7               	goto	u7745
  3463  05C5  3009               	movlw	9
  3464  05C6  0248               	subwf	sprintf@prec^(0+128),w
  3465  05C7                     u7745:
  3466  05C7  1C03               	skipc
  3467  05C8  2DCA               	goto	u7741
  3468  05C9  2DCB               	goto	u7740
  3469  05CA                     u7741:
  3470  05CA  2DD2               	goto	l4358
  3471  05CB                     u7740:
  3472  05CB                     l4356:
  3473                           
  3474                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
  3475  05CB  3008               	movlw	8
  3476  05CC  1683               	bsf	3,5	;RP0=1, select bank1
  3477  05CD  1303               	bcf	3,6	;RP1=0, select bank1
  3478  05CE  00B1               	movwf	??_sprintf^(0+128)
  3479  05CF  0831               	movf	??_sprintf^(0+128),w
  3480  05D0  00CE               	movwf	sprintf@c^(0+128)
  3481  05D1  2DD8               	goto	l291
  3482  05D2                     l4358:
  3483                           
  3484                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
  3485  05D2  1683               	bsf	3,5	;RP0=1, select bank1
  3486  05D3  1303               	bcf	3,6	;RP1=0, select bank1
  3487  05D4  0848               	movf	sprintf@prec^(0+128),w
  3488  05D5  00B1               	movwf	??_sprintf^(0+128)
  3489  05D6  0831               	movf	??_sprintf^(0+128),w
  3490  05D7  00CE               	movwf	sprintf@c^(0+128)
  3491  05D8                     l291:
  3492                           
  3493                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
  3494  05D8  084E               	movf	sprintf@c^(0+128),w
  3495  05D9  00B1               	movwf	??_sprintf^(0+128)
  3496  05DA  01B2               	clrf	(??_sprintf^(0+128)+1)
  3497  05DB  0831               	movf	??_sprintf^(0+128),w
  3498  05DC  02C8               	subwf	sprintf@prec^(0+128),f
  3499  05DD  0832               	movf	(??_sprintf+1)^(0+128),w
  3500  05DE  1C03               	skipc
  3501  05DF  03C9               	decf	(sprintf@prec+1)^(0+128),f
  3502  05E0  02C9               	subwf	(sprintf@prec+1)^(0+128),f
  3503  05E1                     l4360:
  3504                           
  3505                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1245:    if(c)
  3506  05E1  084E               	movf	sprintf@c^(0+128),w
  3507  05E2  1903               	btfsc	3,2
  3508  05E3  2DE5               	goto	u7751
  3509  05E4  2DE6               	goto	u7750
  3510  05E5                     u7751:
  3511  05E5  2DF1               	goto	l4366
  3512  05E6                     u7750:
  3513  05E6                     l4362:
  3514                           
  3515                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
  3516  05E6  302E               	movlw	46
  3517  05E7  00B1               	movwf	??_sprintf^(0+128)
  3518  05E8  0847               	movf	sprintf@sp^(0+128),w
  3519  05E9  0084               	movwf	4
  3520  05EA  0831               	movf	??_sprintf^(0+128),w
  3521  05EB  1783               	bsf	3,7	;select IRP bank2
  3522  05EC  0080               	movwf	0
  3523  05ED                     l4364:
  3524  05ED  3001               	movlw	1
  3525  05EE  00B1               	movwf	??_sprintf^(0+128)
  3526  05EF  0831               	movf	??_sprintf^(0+128),w
  3527  05F0  07C7               	addwf	sprintf@sp^(0+128),f
  3528  05F1                     l4366:
  3529                           
  3530                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  3531  05F1  084E               	movf	sprintf@c^(0+128),w
  3532  05F2  120A  158A  249D  120A  118A  	fcall	_scale
  3533  05F7  1283               	bcf	3,5	;RP0=0, select bank0
  3534  05F8  1303               	bcf	3,6	;RP1=0, select bank0
  3535  05F9  084D               	movf	?_scale+3,w
  3536  05FA  1683               	bsf	3,5	;RP0=1, select bank1
  3537  05FB  1303               	bcf	3,6	;RP1=0, select bank1
  3538  05FC  00B9               	movwf	(_sprintf$1013+3)^(0+128)
  3539  05FD  1283               	bcf	3,5	;RP0=0, select bank0
  3540  05FE  1303               	bcf	3,6	;RP1=0, select bank0
  3541  05FF  084C               	movf	?_scale+2,w
  3542  0600  1683               	bsf	3,5	;RP0=1, select bank1
  3543  0601  1303               	bcf	3,6	;RP1=0, select bank1
  3544  0602  00B8               	movwf	(_sprintf$1013+2)^(0+128)
  3545  0603  1283               	bcf	3,5	;RP0=0, select bank0
  3546  0604  1303               	bcf	3,6	;RP1=0, select bank0
  3547  0605  084B               	movf	?_scale+1,w
  3548  0606  1683               	bsf	3,5	;RP0=1, select bank1
  3549  0607  1303               	bcf	3,6	;RP1=0, select bank1
  3550  0608  00B7               	movwf	(_sprintf$1013+1)^(0+128)
  3551  0609  1283               	bcf	3,5	;RP0=0, select bank0
  3552  060A  1303               	bcf	3,6	;RP1=0, select bank0
  3553  060B  084A               	movf	?_scale,w
  3554  060C  1683               	bsf	3,5	;RP0=1, select bank1
  3555  060D  1303               	bcf	3,6	;RP1=0, select bank1
  3556  060E  00B6               	movwf	_sprintf$1013^(0+128)
  3557  060F                     l4368:
  3558                           
  3559                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  3560  060F  0839               	movf	(_sprintf$1013+3)^(0+128),w
  3561  0610  1283               	bcf	3,5	;RP0=0, select bank0
  3562  0611  1303               	bcf	3,6	;RP1=0, select bank0
  3563  0612  00B7               	movwf	___flmul@a+3
  3564  0613  1683               	bsf	3,5	;RP0=1, select bank1
  3565  0614  1303               	bcf	3,6	;RP1=0, select bank1
  3566  0615  0838               	movf	(_sprintf$1013+2)^(0+128),w
  3567  0616  1283               	bcf	3,5	;RP0=0, select bank0
  3568  0617  1303               	bcf	3,6	;RP1=0, select bank0
  3569  0618  00B6               	movwf	___flmul@a+2
  3570  0619  1683               	bsf	3,5	;RP0=1, select bank1
  3571  061A  1303               	bcf	3,6	;RP1=0, select bank1
  3572  061B  0837               	movf	(_sprintf$1013+1)^(0+128),w
  3573  061C  1283               	bcf	3,5	;RP0=0, select bank0
  3574  061D  1303               	bcf	3,6	;RP1=0, select bank0
  3575  061E  00B5               	movwf	___flmul@a+1
  3576  061F  1683               	bsf	3,5	;RP0=1, select bank1
  3577  0620  1303               	bcf	3,6	;RP1=0, select bank1
  3578  0621  0836               	movf	_sprintf$1013^(0+128),w
  3579  0622  1283               	bcf	3,5	;RP0=0, select bank0
  3580  0623  1303               	bcf	3,6	;RP1=0, select bank0
  3581  0624  00B4               	movwf	___flmul@a
  3582  0625  1683               	bsf	3,5	;RP0=1, select bank1
  3583  0626  1303               	bcf	3,6	;RP1=0, select bank1
  3584  0627  084D               	movf	(sprintf@fval+3)^(0+128),w
  3585  0628  1283               	bcf	3,5	;RP0=0, select bank0
  3586  0629  1303               	bcf	3,6	;RP1=0, select bank0
  3587  062A  00B3               	movwf	___flmul@b+3
  3588  062B  1683               	bsf	3,5	;RP0=1, select bank1
  3589  062C  1303               	bcf	3,6	;RP1=0, select bank1
  3590  062D  084C               	movf	(sprintf@fval+2)^(0+128),w
  3591  062E  1283               	bcf	3,5	;RP0=0, select bank0
  3592  062F  1303               	bcf	3,6	;RP1=0, select bank0
  3593  0630  00B2               	movwf	___flmul@b+2
  3594  0631  1683               	bsf	3,5	;RP0=1, select bank1
  3595  0632  1303               	bcf	3,6	;RP1=0, select bank1
  3596  0633  084B               	movf	(sprintf@fval+1)^(0+128),w
  3597  0634  1283               	bcf	3,5	;RP0=0, select bank0
  3598  0635  1303               	bcf	3,6	;RP1=0, select bank0
  3599  0636  00B1               	movwf	___flmul@b+1
  3600  0637  1683               	bsf	3,5	;RP0=1, select bank1
  3601  0638  1303               	bcf	3,6	;RP1=0, select bank1
  3602  0639  084A               	movf	sprintf@fval^(0+128),w
  3603  063A  1283               	bcf	3,5	;RP0=0, select bank0
  3604  063B  1303               	bcf	3,6	;RP1=0, select bank0
  3605  063C  00B0               	movwf	___flmul@b
  3606  063D  120A  158A  213C  120A  118A  	fcall	___flmul
  3607  0642  1283               	bcf	3,5	;RP0=0, select bank0
  3608  0643  1303               	bcf	3,6	;RP1=0, select bank0
  3609  0644  0833               	movf	?___flmul+3,w
  3610  0645  00E0               	movwf	___fltol@f1+3
  3611  0646  0832               	movf	?___flmul+2,w
  3612  0647  00DF               	movwf	___fltol@f1+2
  3613  0648  0831               	movf	?___flmul+1,w
  3614  0649  00DE               	movwf	___fltol@f1+1
  3615  064A  0830               	movf	?___flmul,w
  3616  064B  00DD               	movwf	___fltol@f1
  3617  064C  160A  158A  24A9  120A  118A  	fcall	___fltol
  3618  0651  1283               	bcf	3,5	;RP0=0, select bank0
  3619  0652  1303               	bcf	3,6	;RP1=0, select bank0
  3620  0653  0860               	movf	?___fltol+3,w
  3621  0654  1683               	bsf	3,5	;RP0=1, select bank1
  3622  0655  1303               	bcf	3,6	;RP1=0, select bank1
  3623  0656  00C0               	movwf	(sprintf@val+3)^(0+128)
  3624  0657  1283               	bcf	3,5	;RP0=0, select bank0
  3625  0658  1303               	bcf	3,6	;RP1=0, select bank0
  3626  0659  085F               	movf	?___fltol+2,w
  3627  065A  1683               	bsf	3,5	;RP0=1, select bank1
  3628  065B  1303               	bcf	3,6	;RP1=0, select bank1
  3629  065C  00BF               	movwf	(sprintf@val+2)^(0+128)
  3630  065D  1283               	bcf	3,5	;RP0=0, select bank0
  3631  065E  1303               	bcf	3,6	;RP1=0, select bank0
  3632  065F  085E               	movf	?___fltol+1,w
  3633  0660  1683               	bsf	3,5	;RP0=1, select bank1
  3634  0661  1303               	bcf	3,6	;RP1=0, select bank1
  3635  0662  00BE               	movwf	(sprintf@val+1)^(0+128)
  3636  0663  1283               	bcf	3,5	;RP0=0, select bank0
  3637  0664  1303               	bcf	3,6	;RP1=0, select bank0
  3638  0665  085D               	movf	?___fltol,w
  3639  0666  1683               	bsf	3,5	;RP0=1, select bank1
  3640  0667  1303               	bcf	3,6	;RP1=0, select bank1
  3641  0668  00BD               	movwf	sprintf@val^(0+128)
  3642                           
  3643                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  3644  0669  2F6B               	goto	l4378
  3645  066A                     l4370:
  3646                           
  3647                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
  3648  066A  084E               	movf	sprintf@c^(0+128),w
  3649  066B  00B1               	movwf	??_sprintf^(0+128)
  3650  066C  3001               	movlw	1
  3651  066D                     u7765:
  3652  066D  1003               	clrc
  3653  066E  0DB1               	rlf	??_sprintf^(0+128),f
  3654  066F  3EFF               	addlw	-1
  3655  0670  1D03               	skipz
  3656  0671  2E6D               	goto	u7765
  3657  0672  1003               	clrc
  3658  0673  0D31               	rlf	??_sprintf^(0+128),w
  3659  0674  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3660  0675  0084               	movwf	4
  3661  0676  120A  158A  200A  120A  118A  	fcall	stringdir
  3662  067B  1283               	bcf	3,5	;RP0=0, select bank0
  3663  067C  1303               	bcf	3,6	;RP1=0, select bank0
  3664  067D  00A0               	movwf	___lldiv@divisor
  3665  067E  120A  158A  200A  120A  118A  	fcall	stringdir
  3666  0683  00A1               	movwf	___lldiv@divisor+1
  3667  0684  120A  158A  200A  120A  118A  	fcall	stringdir
  3668  0689  00A2               	movwf	___lldiv@divisor+2
  3669  068A  120A  158A  200A  120A  118A  	fcall	stringdir
  3670  068F  00A3               	movwf	___lldiv@divisor+3
  3671  0690  1683               	bsf	3,5	;RP0=1, select bank1
  3672  0691  1303               	bcf	3,6	;RP1=0, select bank1
  3673  0692  0840               	movf	(sprintf@val+3)^(0+128),w
  3674  0693  1283               	bcf	3,5	;RP0=0, select bank0
  3675  0694  1303               	bcf	3,6	;RP1=0, select bank0
  3676  0695  00A7               	movwf	___lldiv@dividend+3
  3677  0696  1683               	bsf	3,5	;RP0=1, select bank1
  3678  0697  1303               	bcf	3,6	;RP1=0, select bank1
  3679  0698  083F               	movf	(sprintf@val+2)^(0+128),w
  3680  0699  1283               	bcf	3,5	;RP0=0, select bank0
  3681  069A  1303               	bcf	3,6	;RP1=0, select bank0
  3682  069B  00A6               	movwf	___lldiv@dividend+2
  3683  069C  1683               	bsf	3,5	;RP0=1, select bank1
  3684  069D  1303               	bcf	3,6	;RP1=0, select bank1
  3685  069E  083E               	movf	(sprintf@val+1)^(0+128),w
  3686  069F  1283               	bcf	3,5	;RP0=0, select bank0
  3687  06A0  1303               	bcf	3,6	;RP1=0, select bank0
  3688  06A1  00A5               	movwf	___lldiv@dividend+1
  3689  06A2  1683               	bsf	3,5	;RP0=1, select bank1
  3690  06A3  1303               	bcf	3,6	;RP1=0, select bank1
  3691  06A4  083D               	movf	sprintf@val^(0+128),w
  3692  06A5  1283               	bcf	3,5	;RP0=0, select bank0
  3693  06A6  1303               	bcf	3,6	;RP1=0, select bank0
  3694  06A7  00A4               	movwf	___lldiv@dividend
  3695  06A8  160A  158A  2441  120A  118A  	fcall	___lldiv
  3696  06AD  1283               	bcf	3,5	;RP0=0, select bank0
  3697  06AE  1303               	bcf	3,6	;RP1=0, select bank0
  3698  06AF  0823               	movf	?___lldiv+3,w
  3699  06B0  1683               	bsf	3,5	;RP0=1, select bank1
  3700  06B1  1303               	bcf	3,6	;RP1=0, select bank1
  3701  06B2  00C6               	movwf	(sprintf@tmpval+3)^(0+128)
  3702  06B3  1283               	bcf	3,5	;RP0=0, select bank0
  3703  06B4  1303               	bcf	3,6	;RP1=0, select bank0
  3704  06B5  0822               	movf	?___lldiv+2,w
  3705  06B6  1683               	bsf	3,5	;RP0=1, select bank1
  3706  06B7  1303               	bcf	3,6	;RP1=0, select bank1
  3707  06B8  00C5               	movwf	(sprintf@tmpval+2)^(0+128)
  3708  06B9  1283               	bcf	3,5	;RP0=0, select bank0
  3709  06BA  1303               	bcf	3,6	;RP1=0, select bank0
  3710  06BB  0821               	movf	?___lldiv+1,w
  3711  06BC  1683               	bsf	3,5	;RP0=1, select bank1
  3712  06BD  1303               	bcf	3,6	;RP1=0, select bank1
  3713  06BE  00C4               	movwf	(sprintf@tmpval+1)^(0+128)
  3714  06BF  1283               	bcf	3,5	;RP0=0, select bank0
  3715  06C0  1303               	bcf	3,6	;RP1=0, select bank0
  3716  06C1  0820               	movf	?___lldiv,w
  3717  06C2  1683               	bsf	3,5	;RP0=1, select bank1
  3718  06C3  1303               	bcf	3,6	;RP1=0, select bank1
  3719  06C4  00C3               	movwf	sprintf@tmpval^(0+128)
  3720  06C5                     l4372:
  3721                           
  3722                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
  3723  06C5  3000               	movlw	0
  3724  06C6  1283               	bcf	3,5	;RP0=0, select bank0
  3725  06C7  1303               	bcf	3,6	;RP1=0, select bank0
  3726  06C8  00A3               	movwf	___llmod@divisor+3
  3727  06C9  3000               	movlw	0
  3728  06CA  00A2               	movwf	___llmod@divisor+2
  3729  06CB  3000               	movlw	0
  3730  06CC  00A1               	movwf	___llmod@divisor+1
  3731  06CD  300A               	movlw	10
  3732  06CE  00A0               	movwf	___llmod@divisor
  3733  06CF  1683               	bsf	3,5	;RP0=1, select bank1
  3734  06D0  1303               	bcf	3,6	;RP1=0, select bank1
  3735  06D1  0846               	movf	(sprintf@tmpval+3)^(0+128),w
  3736  06D2  1283               	bcf	3,5	;RP0=0, select bank0
  3737  06D3  1303               	bcf	3,6	;RP1=0, select bank0
  3738  06D4  00A7               	movwf	___llmod@dividend+3
  3739  06D5  1683               	bsf	3,5	;RP0=1, select bank1
  3740  06D6  1303               	bcf	3,6	;RP1=0, select bank1
  3741  06D7  0845               	movf	(sprintf@tmpval+2)^(0+128),w
  3742  06D8  1283               	bcf	3,5	;RP0=0, select bank0
  3743  06D9  1303               	bcf	3,6	;RP1=0, select bank0
  3744  06DA  00A6               	movwf	___llmod@dividend+2
  3745  06DB  1683               	bsf	3,5	;RP0=1, select bank1
  3746  06DC  1303               	bcf	3,6	;RP1=0, select bank1
  3747  06DD  0844               	movf	(sprintf@tmpval+1)^(0+128),w
  3748  06DE  1283               	bcf	3,5	;RP0=0, select bank0
  3749  06DF  1303               	bcf	3,6	;RP1=0, select bank0
  3750  06E0  00A5               	movwf	___llmod@dividend+1
  3751  06E1  1683               	bsf	3,5	;RP0=1, select bank1
  3752  06E2  1303               	bcf	3,6	;RP1=0, select bank1
  3753  06E3  0843               	movf	sprintf@tmpval^(0+128),w
  3754  06E4  1283               	bcf	3,5	;RP0=0, select bank0
  3755  06E5  1303               	bcf	3,6	;RP1=0, select bank0
  3756  06E6  00A4               	movwf	___llmod@dividend
  3757  06E7  160A  158A  22D8  120A  118A  	fcall	___llmod
  3758  06EC  1283               	bcf	3,5	;RP0=0, select bank0
  3759  06ED  1303               	bcf	3,6	;RP1=0, select bank0
  3760  06EE  0823               	movf	?___llmod+3,w
  3761  06EF  1683               	bsf	3,5	;RP0=1, select bank1
  3762  06F0  1303               	bcf	3,6	;RP1=0, select bank1
  3763  06F1  00C6               	movwf	(sprintf@tmpval+3)^(0+128)
  3764  06F2  1283               	bcf	3,5	;RP0=0, select bank0
  3765  06F3  1303               	bcf	3,6	;RP1=0, select bank0
  3766  06F4  0822               	movf	?___llmod+2,w
  3767  06F5  1683               	bsf	3,5	;RP0=1, select bank1
  3768  06F6  1303               	bcf	3,6	;RP1=0, select bank1
  3769  06F7  00C5               	movwf	(sprintf@tmpval+2)^(0+128)
  3770  06F8  1283               	bcf	3,5	;RP0=0, select bank0
  3771  06F9  1303               	bcf	3,6	;RP1=0, select bank0
  3772  06FA  0821               	movf	?___llmod+1,w
  3773  06FB  1683               	bsf	3,5	;RP0=1, select bank1
  3774  06FC  1303               	bcf	3,6	;RP1=0, select bank1
  3775  06FD  00C4               	movwf	(sprintf@tmpval+1)^(0+128)
  3776  06FE  1283               	bcf	3,5	;RP0=0, select bank0
  3777  06FF  1303               	bcf	3,6	;RP1=0, select bank0
  3778  0700  0820               	movf	?___llmod,w
  3779  0701  1683               	bsf	3,5	;RP0=1, select bank1
  3780  0702  1303               	bcf	3,6	;RP1=0, select bank1
  3781  0703  00C3               	movwf	sprintf@tmpval^(0+128)
  3782  0704                     l4374:
  3783                           
  3784                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
  3785  0704  0843               	movf	sprintf@tmpval^(0+128),w
  3786  0705  3E30               	addlw	48
  3787  0706  00B1               	movwf	??_sprintf^(0+128)
  3788  0707  0847               	movf	sprintf@sp^(0+128),w
  3789  0708  0084               	movwf	4
  3790  0709  0831               	movf	??_sprintf^(0+128),w
  3791  070A  1783               	bsf	3,7	;select IRP bank2
  3792  070B  0080               	movwf	0
  3793  070C  3001               	movlw	1
  3794  070D  00B1               	movwf	??_sprintf^(0+128)
  3795  070E  0831               	movf	??_sprintf^(0+128),w
  3796  070F  07C7               	addwf	sprintf@sp^(0+128),f
  3797  0710                     l4376:
  3798                           
  3799                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
  3800  0710  084E               	movf	sprintf@c^(0+128),w
  3801  0711  00B1               	movwf	??_sprintf^(0+128)
  3802  0712  3001               	movlw	1
  3803  0713                     u7775:
  3804  0713  1003               	clrc
  3805  0714  0DB1               	rlf	??_sprintf^(0+128),f
  3806  0715  3EFF               	addlw	-1
  3807  0716  1D03               	skipz
  3808  0717  2F13               	goto	u7775
  3809  0718  1003               	clrc
  3810  0719  0D31               	rlf	??_sprintf^(0+128),w
  3811  071A  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3812  071B  0084               	movwf	4
  3813  071C  120A  158A  200A  120A  118A  	fcall	stringdir
  3814  0721  1283               	bcf	3,5	;RP0=0, select bank0
  3815  0722  1303               	bcf	3,6	;RP1=0, select bank0
  3816  0723  00A0               	movwf	___llmod@divisor
  3817  0724  120A  158A  200A  120A  118A  	fcall	stringdir
  3818  0729  00A1               	movwf	___llmod@divisor+1
  3819  072A  120A  158A  200A  120A  118A  	fcall	stringdir
  3820  072F  00A2               	movwf	___llmod@divisor+2
  3821  0730  120A  158A  200A  120A  118A  	fcall	stringdir
  3822  0735  00A3               	movwf	___llmod@divisor+3
  3823  0736  1683               	bsf	3,5	;RP0=1, select bank1
  3824  0737  1303               	bcf	3,6	;RP1=0, select bank1
  3825  0738  0840               	movf	(sprintf@val+3)^(0+128),w
  3826  0739  1283               	bcf	3,5	;RP0=0, select bank0
  3827  073A  1303               	bcf	3,6	;RP1=0, select bank0
  3828  073B  00A7               	movwf	___llmod@dividend+3
  3829  073C  1683               	bsf	3,5	;RP0=1, select bank1
  3830  073D  1303               	bcf	3,6	;RP1=0, select bank1
  3831  073E  083F               	movf	(sprintf@val+2)^(0+128),w
  3832  073F  1283               	bcf	3,5	;RP0=0, select bank0
  3833  0740  1303               	bcf	3,6	;RP1=0, select bank0
  3834  0741  00A6               	movwf	___llmod@dividend+2
  3835  0742  1683               	bsf	3,5	;RP0=1, select bank1
  3836  0743  1303               	bcf	3,6	;RP1=0, select bank1
  3837  0744  083E               	movf	(sprintf@val+1)^(0+128),w
  3838  0745  1283               	bcf	3,5	;RP0=0, select bank0
  3839  0746  1303               	bcf	3,6	;RP1=0, select bank0
  3840  0747  00A5               	movwf	___llmod@dividend+1
  3841  0748  1683               	bsf	3,5	;RP0=1, select bank1
  3842  0749  1303               	bcf	3,6	;RP1=0, select bank1
  3843  074A  083D               	movf	sprintf@val^(0+128),w
  3844  074B  1283               	bcf	3,5	;RP0=0, select bank0
  3845  074C  1303               	bcf	3,6	;RP1=0, select bank0
  3846  074D  00A4               	movwf	___llmod@dividend
  3847  074E  160A  158A  22D8  120A  118A  	fcall	___llmod
  3848  0753  1283               	bcf	3,5	;RP0=0, select bank0
  3849  0754  1303               	bcf	3,6	;RP1=0, select bank0
  3850  0755  0823               	movf	?___llmod+3,w
  3851  0756  1683               	bsf	3,5	;RP0=1, select bank1
  3852  0757  1303               	bcf	3,6	;RP1=0, select bank1
  3853  0758  00C0               	movwf	(sprintf@val+3)^(0+128)
  3854  0759  1283               	bcf	3,5	;RP0=0, select bank0
  3855  075A  1303               	bcf	3,6	;RP1=0, select bank0
  3856  075B  0822               	movf	?___llmod+2,w
  3857  075C  1683               	bsf	3,5	;RP0=1, select bank1
  3858  075D  1303               	bcf	3,6	;RP1=0, select bank1
  3859  075E  00BF               	movwf	(sprintf@val+2)^(0+128)
  3860  075F  1283               	bcf	3,5	;RP0=0, select bank0
  3861  0760  1303               	bcf	3,6	;RP1=0, select bank0
  3862  0761  0821               	movf	?___llmod+1,w
  3863  0762  1683               	bsf	3,5	;RP0=1, select bank1
  3864  0763  1303               	bcf	3,6	;RP1=0, select bank1
  3865  0764  00BE               	movwf	(sprintf@val+1)^(0+128)
  3866  0765  1283               	bcf	3,5	;RP0=0, select bank0
  3867  0766  1303               	bcf	3,6	;RP1=0, select bank0
  3868  0767  0820               	movf	?___llmod,w
  3869  0768  1683               	bsf	3,5	;RP0=1, select bank1
  3870  0769  1303               	bcf	3,6	;RP1=0, select bank1
  3871  076A  00BD               	movwf	sprintf@val^(0+128)
  3872  076B                     l4378:
  3873                           
  3874                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  3875  076B  3001               	movlw	1
  3876  076C  02CE               	subwf	sprintf@c^(0+128),f
  3877  076D  0A4E               	incf	sprintf@c^(0+128),w
  3878  076E  1D03               	btfss	3,2
  3879  076F  2F71               	goto	u7781
  3880  0770  2F72               	goto	u7780
  3881  0771                     u7781:
  3882  0771  2E6A               	goto	l4370
  3883  0772                     u7780:
  3884  0772  2F84               	goto	l4386
  3885  0773                     l4380:
  3886                           
  3887                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
  3888  0773  3030               	movlw	48
  3889  0774  00B1               	movwf	??_sprintf^(0+128)
  3890  0775  0847               	movf	sprintf@sp^(0+128),w
  3891  0776  0084               	movwf	4
  3892  0777  0831               	movf	??_sprintf^(0+128),w
  3893  0778  1783               	bsf	3,7	;select IRP bank2
  3894  0779  0080               	movwf	0
  3895  077A                     l4382:
  3896  077A  3001               	movlw	1
  3897  077B  00B1               	movwf	??_sprintf^(0+128)
  3898  077C  0831               	movf	??_sprintf^(0+128),w
  3899  077D  07C7               	addwf	sprintf@sp^(0+128),f
  3900  077E                     l4384:
  3901                           
  3902                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1263:     prec--;
  3903  077E  30FF               	movlw	255
  3904  077F  07C8               	addwf	sprintf@prec^(0+128),f
  3905  0780  1803               	skipnc
  3906  0781  0AC9               	incf	(sprintf@prec+1)^(0+128),f
  3907  0782  30FF               	movlw	255
  3908  0783  07C9               	addwf	(sprintf@prec+1)^(0+128),f
  3909  0784                     l4386:
  3910                           
  3911                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
  3912  0784  0848               	movf	sprintf@prec^(0+128),w
  3913  0785  0449               	iorwf	(sprintf@prec+1)^(0+128),w
  3914  0786  1D03               	btfss	3,2
  3915  0787  2F89               	goto	u7791
  3916  0788  2F8A               	goto	u7790
  3917  0789                     u7791:
  3918  0789  2F73               	goto	l4380
  3919  078A                     u7790:
  3920  078A  2FD0               	goto	l4406
  3921  078B                     l4388:
  3922                           
  3923                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1316:   if(prec =
      +                          = 0 && val == 0)
  3924  078B  0848               	movf	sprintf@prec^(0+128),w
  3925  078C  0449               	iorwf	(sprintf@prec+1)^(0+128),w
  3926  078D  1D03               	btfss	3,2
  3927  078E  2F90               	goto	u7801
  3928  078F  2F91               	goto	u7800
  3929  0790                     u7801:
  3930  0790  2F9F               	goto	l299
  3931  0791                     u7800:
  3932  0791                     l4390:
  3933  0791  0840               	movf	(sprintf@val+3)^(0+128),w
  3934  0792  043F               	iorwf	(sprintf@val+2)^(0+128),w
  3935  0793  043E               	iorwf	(sprintf@val+1)^(0+128),w
  3936  0794  043D               	iorwf	sprintf@val^(0+128),w
  3937  0795  1D03               	skipz
  3938  0796  2F98               	goto	u7811
  3939  0797  2F99               	goto	u7810
  3940  0798                     u7811:
  3941  0798  2F9F               	goto	l299
  3942  0799                     u7810:
  3943  0799                     l4392:
  3944                           
  3945                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1317:    prec++;
  3946  0799  3001               	movlw	1
  3947  079A  07C8               	addwf	sprintf@prec^(0+128),f
  3948  079B  1803               	skipnc
  3949  079C  0AC9               	incf	(sprintf@prec+1)^(0+128),f
  3950  079D  3000               	movlw	0
  3951  079E  07C9               	addwf	(sprintf@prec+1)^(0+128),f
  3952  079F                     l299:
  3953                           
  3954                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
  3955  079F  0849               	movf	(sprintf@prec+1)^(0+128),w
  3956  07A0  3A80               	xorlw	128
  3957  07A1  3C80               	sublw	128
  3958  07A2  1D03               	skipz
  3959  07A3  2FA6               	goto	u7825
  3960  07A4  0848               	movf	sprintf@prec^(0+128),w
  3961  07A5  024E               	subwf	sprintf@c^(0+128),w
  3962  07A6                     u7825:
  3963  07A6  1803               	skipnc
  3964  07A7  2FA9               	goto	u7821
  3965  07A8  2FAA               	goto	u7820
  3966  07A9                     u7821:
  3967  07A9  2FAB               	goto	l4396
  3968  07AA                     u7820:
  3969  07AA                     l4394:
  3970  07AA  2FBA               	goto	l4400
  3971  07AB                     l4396:
  3972  07AB  1683               	bsf	3,5	;RP0=1, select bank1
  3973  07AC  1303               	bcf	3,6	;RP1=0, select bank1
  3974  07AD  0849               	movf	(sprintf@prec+1)^(0+128),w
  3975  07AE  3A80               	xorlw	128
  3976  07AF  00B1               	movwf	??_sprintf^(0+128)
  3977  07B0  3080               	movlw	128
  3978  07B1  0231               	subwf	??_sprintf^(0+128),w
  3979  07B2  1D03               	skipz
  3980  07B3  2FB6               	goto	u7835
  3981  07B4  084E               	movf	sprintf@c^(0+128),w
  3982  07B5  0248               	subwf	sprintf@prec^(0+128),w
  3983  07B6                     u7835:
  3984  07B6  1803               	skipnc
  3985  07B7  2FB9               	goto	u7831
  3986  07B8  2FBA               	goto	u7830
  3987  07B9                     u7831:
  3988  07B9  2FBA               	goto	l4400
  3989  07BA                     u7830:
  3990  07BA                     l4398:
  3991  07BA                     l4400:
  3992                           
  3993                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  3994  07BA  3003               	movlw	3
  3995  07BB  1683               	bsf	3,5	;RP0=1, select bank1
  3996  07BC  1303               	bcf	3,6	;RP1=0, select bank1
  3997  07BD  053B               	andwf	sprintf@flag^(0+128),w
  3998  07BE  00B1               	movwf	??_sprintf^(0+128)
  3999  07BF  3000               	movlw	0
  4000  07C0  053C               	andwf	(sprintf@flag+1)^(0+128),w
  4001  07C1  00B2               	movwf	(??_sprintf+1)^(0+128)
  4002  07C2  0831               	movf	??_sprintf^(0+128),w
  4003  07C3  0432               	iorwf	(??_sprintf^(0+128)+1),w
  4004  07C4  1903               	btfsc	3,2
  4005  07C5  2FC7               	goto	u7841
  4006  07C6  2FC8               	goto	u7840
  4007  07C7                     u7841:
  4008  07C7  2FD0               	goto	l4406
  4009  07C8                     u7840:
  4010  07C8                     l4402:
  4011                           
  4012                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  4013  07C8  302D               	movlw	45
  4014  07C9  00B1               	movwf	??_sprintf^(0+128)
  4015  07CA  0847               	movf	sprintf@sp^(0+128),w
  4016  07CB  0084               	movwf	4
  4017  07CC  0831               	movf	??_sprintf^(0+128),w
  4018  07CD  1783               	bsf	3,7	;select IRP bank2
  4019  07CE  0080               	movwf	0
  4020  07CF  283C               	goto	l4218
  4021  07D0                     l4406:
  4022                           
  4023                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  4024  07D0  3001               	movlw	1
  4025  07D1  07AC               	addwf	sprintf@f^(0+128),f
  4026  07D2  30FF               	movlw	-1
  4027  07D3  072C               	addwf	sprintf@f^(0+128),w
  4028  07D4  0084               	movwf	4
  4029  07D5  120A  158A  200A  120A  118A  	fcall	stringdir
  4030  07DA  00B1               	movwf	??_sprintf^(0+128)
  4031  07DB  0831               	movf	??_sprintf^(0+128),w
  4032  07DC  00CE               	movwf	sprintf@c^(0+128)
  4033  07DD  084E               	movf	sprintf@c^(0+128),w
  4034  07DE  1D03               	btfss	3,2
  4035  07DF  2FE1               	goto	u7851
  4036  07E0  2FE2               	goto	u7850
  4037  07E1                     u7851:
  4038  07E1  282F               	goto	l4214
  4039  07E2                     u7850:
  4040  07E2                     l4408:
  4041                           
  4042                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  4043  07E2  0847               	movf	sprintf@sp^(0+128),w
  4044  07E3  0084               	movwf	4
  4045  07E4  1783               	bsf	3,7	;select IRP bank2
  4046  07E5  0180               	clrf	0
  4047  07E6                     l305:
  4048  07E6  0008               	return
  4049  07E7                     __end_of_sprintf:
  4050                           
  4051                           	psect	text2
  4052  0C9D                     __ptext2:	
  4053 ;; *************** function _scale *****************
  4054 ;; Defined at:
  4055 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c"
  4056 ;; Parameters:    Size  Location     Type
  4057 ;;  scl             1    wreg     char 
  4058 ;; Auto vars:     Size  Location     Type
  4059 ;;  scl             1   60[BANK0 ] char 
  4060 ;; Return value:  Size  Location     Type
  4061 ;;                  4   42[BANK0 ] char 
  4062 ;; Registers used:
  4063 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4064 ;; Tracked objects:
  4065 ;;		On entry : 0/0
  4066 ;;		On exit  : 0/0
  4067 ;;		Unchanged: 0/0
  4068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4069 ;;      Params:         0       4       0       0       0
  4070 ;;      Locals:         0       5       0       0       0
  4071 ;;      Temps:          0      10       0       0       0
  4072 ;;      Totals:         0      19       0       0       0
  4073 ;;Total ram usage:       19 bytes
  4074 ;; Hardware stack levels used: 1
  4075 ;; Hardware stack levels required when called: 4
  4076 ;; This function calls:
  4077 ;;		___awdiv
  4078 ;;		___awmod
  4079 ;;		___flmul
  4080 ;; This function is called by:
  4081 ;;		_sprintf
  4082 ;; This function uses a non-reentrant model
  4083 ;;
  4084                           
  4085                           
  4086                           ;psect for function _scale
  4087  0C9D                     _scale:
  4088                           
  4089                           ;incstack = 0
  4090                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4091                           ;scale@scl stored from wreg
  4092  0C9D  1283               	bcf	3,5	;RP0=0, select bank0
  4093  0C9E  1303               	bcf	3,6	;RP1=0, select bank0
  4094  0C9F  00DC               	movwf	scale@scl
  4095  0CA0                     l3912:
  4096                           
  4097                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  4098  0CA0  1FDC               	btfss	scale@scl,7
  4099  0CA1  2CA3               	goto	u6711
  4100  0CA2  2CA4               	goto	u6710
  4101  0CA3                     u6711:
  4102  0CA3  2E53               	goto	l3934
  4103  0CA4                     u6710:
  4104  0CA4                     l3914:
  4105                           
  4106                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  4107  0CA4  09DC               	comf	scale@scl,f
  4108  0CA5  0ADC               	incf	scale@scl,f
  4109  0CA6                     l3916:
  4110                           
  4111                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  4112  0CA6  085C               	movf	scale@scl,w
  4113  0CA7  3A80               	xorlw	128
  4114  0CA8  3E12               	addlw	-238
  4115  0CA9  1C03               	skipc
  4116  0CAA  2CAC               	goto	u6721
  4117  0CAB  2CAD               	goto	u6720
  4118  0CAC                     u6721:
  4119  0CAC  2D97               	goto	l3924
  4120  0CAD                     u6720:
  4121  0CAD                     l3918:
  4122                           
  4123                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  4124  0CAD  300A               	movlw	10
  4125  0CAE  00A7               	movwf	___awdiv@divisor
  4126  0CAF  3000               	movlw	0
  4127  0CB0  00A8               	movwf	___awdiv@divisor+1
  4128  0CB1  085C               	movf	scale@scl,w
  4129  0CB2  00A2               	movwf	___awmod@dividend
  4130  0CB3  01A3               	clrf	___awmod@dividend+1
  4131  0CB4  1BA2               	btfsc	___awmod@dividend,7
  4132  0CB5  03A3               	decf	___awmod@dividend+1,f
  4133  0CB6  3064               	movlw	100
  4134  0CB7  00A0               	movwf	___awmod@divisor
  4135  0CB8  3000               	movlw	0
  4136  0CB9  00A1               	movwf	___awmod@divisor+1
  4137  0CBA  120A  158A  20E1  120A  158A  	fcall	___awmod
  4138  0CBF  1283               	bcf	3,5	;RP0=0, select bank0
  4139  0CC0  1303               	bcf	3,6	;RP1=0, select bank0
  4140  0CC1  0821               	movf	?___awmod+1,w
  4141  0CC2  00AA               	movwf	___awdiv@dividend+1
  4142  0CC3  0820               	movf	?___awmod,w
  4143  0CC4  00A9               	movwf	___awdiv@dividend
  4144  0CC5  160A  118A  2010  120A  158A  	fcall	___awdiv
  4145  0CCA  1283               	bcf	3,5	;RP0=0, select bank0
  4146  0CCB  1303               	bcf	3,6	;RP1=0, select bank0
  4147  0CCC  0827               	movf	?___awdiv,w
  4148  0CCD  00CE               	movwf	??_scale
  4149  0CCE  3001               	movlw	1
  4150  0CCF                     u6735:
  4151  0CCF  1003               	clrc
  4152  0CD0  0DCE               	rlf	??_scale,f
  4153  0CD1  3EFF               	addlw	-1
  4154  0CD2  1D03               	skipz
  4155  0CD3  2CCF               	goto	u6735
  4156  0CD4  1003               	clrc
  4157  0CD5  0D4E               	rlf	??_scale,w
  4158  0CD6  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4159  0CD7  0084               	movwf	4
  4160  0CD8  120A  158A  200A  120A  158A  	fcall	stringdir
  4161  0CDD  00CF               	movwf	??_scale+1
  4162  0CDE  120A  158A  200A  120A  158A  	fcall	stringdir
  4163  0CE3  00D0               	movwf	??_scale+2
  4164  0CE4  120A  158A  200A  120A  158A  	fcall	stringdir
  4165  0CE9  00D1               	movwf	??_scale+3
  4166  0CEA  120A  158A  200A  120A  158A  	fcall	stringdir
  4167  0CEF  00D2               	movwf	??_scale+4
  4168  0CF0  0852               	movf	??_scale+4,w
  4169  0CF1  00B3               	movwf	___flmul@b+3
  4170  0CF2  0851               	movf	??_scale+3,w
  4171  0CF3  00B2               	movwf	___flmul@b+2
  4172  0CF4  0850               	movf	??_scale+2,w
  4173  0CF5  00B1               	movwf	___flmul@b+1
  4174  0CF6  084F               	movf	??_scale+1,w
  4175  0CF7  00B0               	movwf	___flmul@b
  4176  0CF8  3064               	movlw	100
  4177  0CF9  00A7               	movwf	___awdiv@divisor
  4178  0CFA  3000               	movlw	0
  4179  0CFB  00A8               	movwf	___awdiv@divisor+1
  4180  0CFC  085C               	movf	scale@scl,w
  4181  0CFD  00A9               	movwf	___awdiv@dividend
  4182  0CFE  01AA               	clrf	___awdiv@dividend+1
  4183  0CFF  1BA9               	btfsc	___awdiv@dividend,7
  4184  0D00  03AA               	decf	___awdiv@dividend+1,f
  4185  0D01  160A  118A  2010  120A  158A  	fcall	___awdiv
  4186  0D06  1283               	bcf	3,5	;RP0=0, select bank0
  4187  0D07  1303               	bcf	3,6	;RP1=0, select bank0
  4188  0D08  0827               	movf	?___awdiv,w
  4189  0D09  00D3               	movwf	??_scale+5
  4190  0D0A  3001               	movlw	1
  4191  0D0B                     u6745:
  4192  0D0B  1003               	clrc
  4193  0D0C  0DD3               	rlf	??_scale+5,f
  4194  0D0D  3EFF               	addlw	-1
  4195  0D0E  1D03               	skipz
  4196  0D0F  2D0B               	goto	u6745
  4197  0D10  1003               	clrc
  4198  0D11  0D53               	rlf	??_scale+5,w
  4199  0D12  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  4200  0D13  0084               	movwf	4
  4201  0D14  120A  158A  200A  120A  158A  	fcall	stringdir
  4202  0D19  00D4               	movwf	??_scale+6
  4203  0D1A  120A  158A  200A  120A  158A  	fcall	stringdir
  4204  0D1F  00D5               	movwf	??_scale+7
  4205  0D20  120A  158A  200A  120A  158A  	fcall	stringdir
  4206  0D25  00D6               	movwf	??_scale+8
  4207  0D26  120A  158A  200A  120A  158A  	fcall	stringdir
  4208  0D2B  00D7               	movwf	??_scale+9
  4209  0D2C  0857               	movf	??_scale+9,w
  4210  0D2D  00B7               	movwf	___flmul@a+3
  4211  0D2E  0856               	movf	??_scale+8,w
  4212  0D2F  00B6               	movwf	___flmul@a+2
  4213  0D30  0855               	movf	??_scale+7,w
  4214  0D31  00B5               	movwf	___flmul@a+1
  4215  0D32  0854               	movf	??_scale+6,w
  4216  0D33  00B4               	movwf	___flmul@a
  4217  0D34  120A  158A  213C  120A  158A  	fcall	___flmul
  4218  0D39  1283               	bcf	3,5	;RP0=0, select bank0
  4219  0D3A  1303               	bcf	3,6	;RP1=0, select bank0
  4220  0D3B  0833               	movf	?___flmul+3,w
  4221  0D3C  00DB               	movwf	_scale$1012+3
  4222  0D3D  0832               	movf	?___flmul+2,w
  4223  0D3E  00DA               	movwf	_scale$1012+2
  4224  0D3F  0831               	movf	?___flmul+1,w
  4225  0D40  00D9               	movwf	_scale$1012+1
  4226  0D41  0830               	movf	?___flmul,w
  4227  0D42  00D8               	movwf	_scale$1012
  4228                           
  4229                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  4230  0D43  300A               	movlw	10
  4231  0D44  00A0               	movwf	___awmod@divisor
  4232  0D45  3000               	movlw	0
  4233  0D46  00A1               	movwf	___awmod@divisor+1
  4234  0D47  085C               	movf	scale@scl,w
  4235  0D48  00A2               	movwf	___awmod@dividend
  4236  0D49  01A3               	clrf	___awmod@dividend+1
  4237  0D4A  1BA2               	btfsc	___awmod@dividend,7
  4238  0D4B  03A3               	decf	___awmod@dividend+1,f
  4239  0D4C  120A  158A  20E1  120A  158A  	fcall	___awmod
  4240  0D51  1283               	bcf	3,5	;RP0=0, select bank0
  4241  0D52  1303               	bcf	3,6	;RP1=0, select bank0
  4242  0D53  0820               	movf	?___awmod,w
  4243  0D54  00CE               	movwf	??_scale
  4244  0D55  3001               	movlw	1
  4245  0D56                     u6755:
  4246  0D56  1003               	clrc
  4247  0D57  0DCE               	rlf	??_scale,f
  4248  0D58  3EFF               	addlw	-1
  4249  0D59  1D03               	skipz
  4250  0D5A  2D56               	goto	u6755
  4251  0D5B  1003               	clrc
  4252  0D5C  0D4E               	rlf	??_scale,w
  4253  0D5D  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4254  0D5E  0084               	movwf	4
  4255  0D5F  120A  158A  200A  120A  158A  	fcall	stringdir
  4256  0D64  00CF               	movwf	??_scale+1
  4257  0D65  120A  158A  200A  120A  158A  	fcall	stringdir
  4258  0D6A  00D0               	movwf	??_scale+2
  4259  0D6B  120A  158A  200A  120A  158A  	fcall	stringdir
  4260  0D70  00D1               	movwf	??_scale+3
  4261  0D71  120A  158A  200A  120A  158A  	fcall	stringdir
  4262  0D76  00D2               	movwf	??_scale+4
  4263  0D77  0852               	movf	??_scale+4,w
  4264  0D78  00B3               	movwf	___flmul@b+3
  4265  0D79  0851               	movf	??_scale+3,w
  4266  0D7A  00B2               	movwf	___flmul@b+2
  4267  0D7B  0850               	movf	??_scale+2,w
  4268  0D7C  00B1               	movwf	___flmul@b+1
  4269  0D7D  084F               	movf	??_scale+1,w
  4270  0D7E  00B0               	movwf	___flmul@b
  4271  0D7F  085B               	movf	_scale$1012+3,w
  4272  0D80  00B7               	movwf	___flmul@a+3
  4273  0D81  085A               	movf	_scale$1012+2,w
  4274  0D82  00B6               	movwf	___flmul@a+2
  4275  0D83  0859               	movf	_scale$1012+1,w
  4276  0D84  00B5               	movwf	___flmul@a+1
  4277  0D85  0858               	movf	_scale$1012,w
  4278  0D86  00B4               	movwf	___flmul@a
  4279  0D87  120A  158A  213C  120A  158A  	fcall	___flmul
  4280  0D8C  1283               	bcf	3,5	;RP0=0, select bank0
  4281  0D8D  1303               	bcf	3,6	;RP1=0, select bank0
  4282  0D8E  0833               	movf	?___flmul+3,w
  4283  0D8F  00CD               	movwf	?_scale+3
  4284  0D90  0832               	movf	?___flmul+2,w
  4285  0D91  00CC               	movwf	?_scale+2
  4286  0D92  0831               	movf	?___flmul+1,w
  4287  0D93  00CB               	movwf	?_scale+1
  4288  0D94  0830               	movf	?___flmul,w
  4289  0D95  00CA               	movwf	?_scale
  4290  0D96  2FFF               	goto	l239
  4291  0D97                     l3924:
  4292  0D97  085C               	movf	scale@scl,w
  4293  0D98  3A80               	xorlw	128
  4294  0D99  3E75               	addlw	-139
  4295  0D9A  1C03               	skipc
  4296  0D9B  2D9D               	goto	u6761
  4297  0D9C  2D9E               	goto	u6760
  4298  0D9D                     u6761:
  4299  0D9D  2E26               	goto	l3930
  4300  0D9E                     u6760:
  4301  0D9E                     l3926:
  4302                           
  4303                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  4304  0D9E  300A               	movlw	10
  4305  0D9F  00A0               	movwf	___awmod@divisor
  4306  0DA0  3000               	movlw	0
  4307  0DA1  00A1               	movwf	___awmod@divisor+1
  4308  0DA2  085C               	movf	scale@scl,w
  4309  0DA3  00A2               	movwf	___awmod@dividend
  4310  0DA4  01A3               	clrf	___awmod@dividend+1
  4311  0DA5  1BA2               	btfsc	___awmod@dividend,7
  4312  0DA6  03A3               	decf	___awmod@dividend+1,f
  4313  0DA7  120A  158A  20E1  120A  158A  	fcall	___awmod
  4314  0DAC  1283               	bcf	3,5	;RP0=0, select bank0
  4315  0DAD  1303               	bcf	3,6	;RP1=0, select bank0
  4316  0DAE  0820               	movf	?___awmod,w
  4317  0DAF  00CE               	movwf	??_scale
  4318  0DB0  3001               	movlw	1
  4319  0DB1                     u6775:
  4320  0DB1  1003               	clrc
  4321  0DB2  0DCE               	rlf	??_scale,f
  4322  0DB3  3EFF               	addlw	-1
  4323  0DB4  1D03               	skipz
  4324  0DB5  2DB1               	goto	u6775
  4325  0DB6  1003               	clrc
  4326  0DB7  0D4E               	rlf	??_scale,w
  4327  0DB8  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4328  0DB9  0084               	movwf	4
  4329  0DBA  120A  158A  200A  120A  158A  	fcall	stringdir
  4330  0DBF  00CF               	movwf	??_scale+1
  4331  0DC0  120A  158A  200A  120A  158A  	fcall	stringdir
  4332  0DC5  00D0               	movwf	??_scale+2
  4333  0DC6  120A  158A  200A  120A  158A  	fcall	stringdir
  4334  0DCB  00D1               	movwf	??_scale+3
  4335  0DCC  120A  158A  200A  120A  158A  	fcall	stringdir
  4336  0DD1  00D2               	movwf	??_scale+4
  4337  0DD2  0852               	movf	??_scale+4,w
  4338  0DD3  00B3               	movwf	___flmul@b+3
  4339  0DD4  0851               	movf	??_scale+3,w
  4340  0DD5  00B2               	movwf	___flmul@b+2
  4341  0DD6  0850               	movf	??_scale+2,w
  4342  0DD7  00B1               	movwf	___flmul@b+1
  4343  0DD8  084F               	movf	??_scale+1,w
  4344  0DD9  00B0               	movwf	___flmul@b
  4345  0DDA  300A               	movlw	10
  4346  0DDB  00A7               	movwf	___awdiv@divisor
  4347  0DDC  3000               	movlw	0
  4348  0DDD  00A8               	movwf	___awdiv@divisor+1
  4349  0DDE  085C               	movf	scale@scl,w
  4350  0DDF  00A9               	movwf	___awdiv@dividend
  4351  0DE0  01AA               	clrf	___awdiv@dividend+1
  4352  0DE1  1BA9               	btfsc	___awdiv@dividend,7
  4353  0DE2  03AA               	decf	___awdiv@dividend+1,f
  4354  0DE3  160A  118A  2010  120A  158A  	fcall	___awdiv
  4355  0DE8  1283               	bcf	3,5	;RP0=0, select bank0
  4356  0DE9  1303               	bcf	3,6	;RP1=0, select bank0
  4357  0DEA  0827               	movf	?___awdiv,w
  4358  0DEB  00D3               	movwf	??_scale+5
  4359  0DEC  3001               	movlw	1
  4360  0DED                     u6785:
  4361  0DED  1003               	clrc
  4362  0DEE  0DD3               	rlf	??_scale+5,f
  4363  0DEF  3EFF               	addlw	-1
  4364  0DF0  1D03               	skipz
  4365  0DF1  2DED               	goto	u6785
  4366  0DF2  1003               	clrc
  4367  0DF3  0D53               	rlf	??_scale+5,w
  4368  0DF4  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4369  0DF5  0084               	movwf	4
  4370  0DF6  120A  158A  200A  120A  158A  	fcall	stringdir
  4371  0DFB  00D4               	movwf	??_scale+6
  4372  0DFC  120A  158A  200A  120A  158A  	fcall	stringdir
  4373  0E01  00D5               	movwf	??_scale+7
  4374  0E02  120A  158A  200A  120A  158A  	fcall	stringdir
  4375  0E07  00D6               	movwf	??_scale+8
  4376  0E08  120A  158A  200A  120A  158A  	fcall	stringdir
  4377  0E0D  00D7               	movwf	??_scale+9
  4378  0E0E  0857               	movf	??_scale+9,w
  4379  0E0F  00B7               	movwf	___flmul@a+3
  4380  0E10  0856               	movf	??_scale+8,w
  4381  0E11  00B6               	movwf	___flmul@a+2
  4382  0E12  0855               	movf	??_scale+7,w
  4383  0E13  00B5               	movwf	___flmul@a+1
  4384  0E14  0854               	movf	??_scale+6,w
  4385  0E15  00B4               	movwf	___flmul@a
  4386  0E16  120A  158A  213C  120A  158A  	fcall	___flmul
  4387  0E1B  1283               	bcf	3,5	;RP0=0, select bank0
  4388  0E1C  1303               	bcf	3,6	;RP1=0, select bank0
  4389  0E1D  0833               	movf	?___flmul+3,w
  4390  0E1E  00CD               	movwf	?_scale+3
  4391  0E1F  0832               	movf	?___flmul+2,w
  4392  0E20  00CC               	movwf	?_scale+2
  4393  0E21  0831               	movf	?___flmul+1,w
  4394  0E22  00CB               	movwf	?_scale+1
  4395  0E23  0830               	movf	?___flmul,w
  4396  0E24  00CA               	movwf	?_scale
  4397  0E25  2FFF               	goto	l239
  4398  0E26                     l3930:
  4399                           
  4400                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  4401  0E26  085C               	movf	scale@scl,w
  4402  0E27  00CE               	movwf	??_scale
  4403  0E28  3001               	movlw	1
  4404  0E29                     u6795:
  4405  0E29  1003               	clrc
  4406  0E2A  0DCE               	rlf	??_scale,f
  4407  0E2B  3EFF               	addlw	-1
  4408  0E2C  1D03               	skipz
  4409  0E2D  2E29               	goto	u6795
  4410  0E2E  1003               	clrc
  4411  0E2F  0D4E               	rlf	??_scale,w
  4412  0E30  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4413  0E31  0084               	movwf	4
  4414  0E32  120A  158A  200A  120A  158A  	fcall	stringdir
  4415  0E37  00CF               	movwf	??_scale+1
  4416  0E38  120A  158A  200A  120A  158A  	fcall	stringdir
  4417  0E3D  00D0               	movwf	??_scale+2
  4418  0E3E  120A  158A  200A  120A  158A  	fcall	stringdir
  4419  0E43  00D1               	movwf	??_scale+3
  4420  0E44  120A  158A  200A  120A  158A  	fcall	stringdir
  4421  0E49  00D2               	movwf	??_scale+4
  4422  0E4A  0852               	movf	??_scale+4,w
  4423  0E4B  00CD               	movwf	?_scale+3
  4424  0E4C  0851               	movf	??_scale+3,w
  4425  0E4D  00CC               	movwf	?_scale+2
  4426  0E4E  0850               	movf	??_scale+2,w
  4427  0E4F  00CB               	movwf	?_scale+1
  4428  0E50  084F               	movf	??_scale+1,w
  4429  0E51  00CA               	movwf	?_scale
  4430  0E52  2FFF               	goto	l239
  4431  0E53                     l3934:
  4432                           
  4433                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  4434  0E53  085C               	movf	scale@scl,w
  4435  0E54  3A80               	xorlw	128
  4436  0E55  3E12               	addlw	-238
  4437  0E56  1C03               	skipc
  4438  0E57  2E59               	goto	u6801
  4439  0E58  2E5A               	goto	u6800
  4440  0E59                     u6801:
  4441  0E59  2F44               	goto	l3942
  4442  0E5A                     u6800:
  4443  0E5A                     l3936:
  4444                           
  4445                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  4446  0E5A  300A               	movlw	10
  4447  0E5B  00A7               	movwf	___awdiv@divisor
  4448  0E5C  3000               	movlw	0
  4449  0E5D  00A8               	movwf	___awdiv@divisor+1
  4450  0E5E  085C               	movf	scale@scl,w
  4451  0E5F  00A2               	movwf	___awmod@dividend
  4452  0E60  01A3               	clrf	___awmod@dividend+1
  4453  0E61  1BA2               	btfsc	___awmod@dividend,7
  4454  0E62  03A3               	decf	___awmod@dividend+1,f
  4455  0E63  3064               	movlw	100
  4456  0E64  00A0               	movwf	___awmod@divisor
  4457  0E65  3000               	movlw	0
  4458  0E66  00A1               	movwf	___awmod@divisor+1
  4459  0E67  120A  158A  20E1  120A  158A  	fcall	___awmod
  4460  0E6C  1283               	bcf	3,5	;RP0=0, select bank0
  4461  0E6D  1303               	bcf	3,6	;RP1=0, select bank0
  4462  0E6E  0821               	movf	?___awmod+1,w
  4463  0E6F  00AA               	movwf	___awdiv@dividend+1
  4464  0E70  0820               	movf	?___awmod,w
  4465  0E71  00A9               	movwf	___awdiv@dividend
  4466  0E72  160A  118A  2010  120A  158A  	fcall	___awdiv
  4467  0E77  1283               	bcf	3,5	;RP0=0, select bank0
  4468  0E78  1303               	bcf	3,6	;RP1=0, select bank0
  4469  0E79  0827               	movf	?___awdiv,w
  4470  0E7A  00CE               	movwf	??_scale
  4471  0E7B  3001               	movlw	1
  4472  0E7C                     u6815:
  4473  0E7C  1003               	clrc
  4474  0E7D  0DCE               	rlf	??_scale,f
  4475  0E7E  3EFF               	addlw	-1
  4476  0E7F  1D03               	skipz
  4477  0E80  2E7C               	goto	u6815
  4478  0E81  1003               	clrc
  4479  0E82  0D4E               	rlf	??_scale,w
  4480  0E83  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  4481  0E84  0084               	movwf	4
  4482  0E85  120A  158A  200A  120A  158A  	fcall	stringdir
  4483  0E8A  00CF               	movwf	??_scale+1
  4484  0E8B  120A  158A  200A  120A  158A  	fcall	stringdir
  4485  0E90  00D0               	movwf	??_scale+2
  4486  0E91  120A  158A  200A  120A  158A  	fcall	stringdir
  4487  0E96  00D1               	movwf	??_scale+3
  4488  0E97  120A  158A  200A  120A  158A  	fcall	stringdir
  4489  0E9C  00D2               	movwf	??_scale+4
  4490  0E9D  0852               	movf	??_scale+4,w
  4491  0E9E  00B3               	movwf	___flmul@b+3
  4492  0E9F  0851               	movf	??_scale+3,w
  4493  0EA0  00B2               	movwf	___flmul@b+2
  4494  0EA1  0850               	movf	??_scale+2,w
  4495  0EA2  00B1               	movwf	___flmul@b+1
  4496  0EA3  084F               	movf	??_scale+1,w
  4497  0EA4  00B0               	movwf	___flmul@b
  4498  0EA5  3064               	movlw	100
  4499  0EA6  00A7               	movwf	___awdiv@divisor
  4500  0EA7  3000               	movlw	0
  4501  0EA8  00A8               	movwf	___awdiv@divisor+1
  4502  0EA9  085C               	movf	scale@scl,w
  4503  0EAA  00A9               	movwf	___awdiv@dividend
  4504  0EAB  01AA               	clrf	___awdiv@dividend+1
  4505  0EAC  1BA9               	btfsc	___awdiv@dividend,7
  4506  0EAD  03AA               	decf	___awdiv@dividend+1,f
  4507  0EAE  160A  118A  2010  120A  158A  	fcall	___awdiv
  4508  0EB3  1283               	bcf	3,5	;RP0=0, select bank0
  4509  0EB4  1303               	bcf	3,6	;RP1=0, select bank0
  4510  0EB5  0827               	movf	?___awdiv,w
  4511  0EB6  00D3               	movwf	??_scale+5
  4512  0EB7  3001               	movlw	1
  4513  0EB8                     u6825:
  4514  0EB8  1003               	clrc
  4515  0EB9  0DD3               	rlf	??_scale+5,f
  4516  0EBA  3EFF               	addlw	-1
  4517  0EBB  1D03               	skipz
  4518  0EBC  2EB8               	goto	u6825
  4519  0EBD  1003               	clrc
  4520  0EBE  0D53               	rlf	??_scale+5,w
  4521  0EBF  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  4522  0EC0  0084               	movwf	4
  4523  0EC1  120A  158A  200A  120A  158A  	fcall	stringdir
  4524  0EC6  00D4               	movwf	??_scale+6
  4525  0EC7  120A  158A  200A  120A  158A  	fcall	stringdir
  4526  0ECC  00D5               	movwf	??_scale+7
  4527  0ECD  120A  158A  200A  120A  158A  	fcall	stringdir
  4528  0ED2  00D6               	movwf	??_scale+8
  4529  0ED3  120A  158A  200A  120A  158A  	fcall	stringdir
  4530  0ED8  00D7               	movwf	??_scale+9
  4531  0ED9  0857               	movf	??_scale+9,w
  4532  0EDA  00B7               	movwf	___flmul@a+3
  4533  0EDB  0856               	movf	??_scale+8,w
  4534  0EDC  00B6               	movwf	___flmul@a+2
  4535  0EDD  0855               	movf	??_scale+7,w
  4536  0EDE  00B5               	movwf	___flmul@a+1
  4537  0EDF  0854               	movf	??_scale+6,w
  4538  0EE0  00B4               	movwf	___flmul@a
  4539  0EE1  120A  158A  213C  120A  158A  	fcall	___flmul
  4540  0EE6  1283               	bcf	3,5	;RP0=0, select bank0
  4541  0EE7  1303               	bcf	3,6	;RP1=0, select bank0
  4542  0EE8  0833               	movf	?___flmul+3,w
  4543  0EE9  00DB               	movwf	_scale$1012+3
  4544  0EEA  0832               	movf	?___flmul+2,w
  4545  0EEB  00DA               	movwf	_scale$1012+2
  4546  0EEC  0831               	movf	?___flmul+1,w
  4547  0EED  00D9               	movwf	_scale$1012+1
  4548  0EEE  0830               	movf	?___flmul,w
  4549  0EEF  00D8               	movwf	_scale$1012
  4550                           
  4551                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  4552  0EF0  300A               	movlw	10
  4553  0EF1  00A0               	movwf	___awmod@divisor
  4554  0EF2  3000               	movlw	0
  4555  0EF3  00A1               	movwf	___awmod@divisor+1
  4556  0EF4  085C               	movf	scale@scl,w
  4557  0EF5  00A2               	movwf	___awmod@dividend
  4558  0EF6  01A3               	clrf	___awmod@dividend+1
  4559  0EF7  1BA2               	btfsc	___awmod@dividend,7
  4560  0EF8  03A3               	decf	___awmod@dividend+1,f
  4561  0EF9  120A  158A  20E1  120A  158A  	fcall	___awmod
  4562  0EFE  1283               	bcf	3,5	;RP0=0, select bank0
  4563  0EFF  1303               	bcf	3,6	;RP1=0, select bank0
  4564  0F00  0820               	movf	?___awmod,w
  4565  0F01  00CE               	movwf	??_scale
  4566  0F02  3001               	movlw	1
  4567  0F03                     u6835:
  4568  0F03  1003               	clrc
  4569  0F04  0DCE               	rlf	??_scale,f
  4570  0F05  3EFF               	addlw	-1
  4571  0F06  1D03               	skipz
  4572  0F07  2F03               	goto	u6835
  4573  0F08  1003               	clrc
  4574  0F09  0D4E               	rlf	??_scale,w
  4575  0F0A  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4576  0F0B  0084               	movwf	4
  4577  0F0C  120A  158A  200A  120A  158A  	fcall	stringdir
  4578  0F11  00CF               	movwf	??_scale+1
  4579  0F12  120A  158A  200A  120A  158A  	fcall	stringdir
  4580  0F17  00D0               	movwf	??_scale+2
  4581  0F18  120A  158A  200A  120A  158A  	fcall	stringdir
  4582  0F1D  00D1               	movwf	??_scale+3
  4583  0F1E  120A  158A  200A  120A  158A  	fcall	stringdir
  4584  0F23  00D2               	movwf	??_scale+4
  4585  0F24  0852               	movf	??_scale+4,w
  4586  0F25  00B3               	movwf	___flmul@b+3
  4587  0F26  0851               	movf	??_scale+3,w
  4588  0F27  00B2               	movwf	___flmul@b+2
  4589  0F28  0850               	movf	??_scale+2,w
  4590  0F29  00B1               	movwf	___flmul@b+1
  4591  0F2A  084F               	movf	??_scale+1,w
  4592  0F2B  00B0               	movwf	___flmul@b
  4593  0F2C  085B               	movf	_scale$1012+3,w
  4594  0F2D  00B7               	movwf	___flmul@a+3
  4595  0F2E  085A               	movf	_scale$1012+2,w
  4596  0F2F  00B6               	movwf	___flmul@a+2
  4597  0F30  0859               	movf	_scale$1012+1,w
  4598  0F31  00B5               	movwf	___flmul@a+1
  4599  0F32  0858               	movf	_scale$1012,w
  4600  0F33  00B4               	movwf	___flmul@a
  4601  0F34  120A  158A  213C  120A  158A  	fcall	___flmul
  4602  0F39  1283               	bcf	3,5	;RP0=0, select bank0
  4603  0F3A  1303               	bcf	3,6	;RP1=0, select bank0
  4604  0F3B  0833               	movf	?___flmul+3,w
  4605  0F3C  00CD               	movwf	?_scale+3
  4606  0F3D  0832               	movf	?___flmul+2,w
  4607  0F3E  00CC               	movwf	?_scale+2
  4608  0F3F  0831               	movf	?___flmul+1,w
  4609  0F40  00CB               	movwf	?_scale+1
  4610  0F41  0830               	movf	?___flmul,w
  4611  0F42  00CA               	movwf	?_scale
  4612  0F43  2FFF               	goto	l239
  4613  0F44                     l3942:
  4614  0F44  085C               	movf	scale@scl,w
  4615  0F45  3A80               	xorlw	128
  4616  0F46  3E75               	addlw	-139
  4617  0F47  1C03               	skipc
  4618  0F48  2F4A               	goto	u6841
  4619  0F49  2F4B               	goto	u6840
  4620  0F4A                     u6841:
  4621  0F4A  2FD3               	goto	l3948
  4622  0F4B                     u6840:
  4623  0F4B                     l3944:
  4624                           
  4625                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  4626  0F4B  300A               	movlw	10
  4627  0F4C  00A0               	movwf	___awmod@divisor
  4628  0F4D  3000               	movlw	0
  4629  0F4E  00A1               	movwf	___awmod@divisor+1
  4630  0F4F  085C               	movf	scale@scl,w
  4631  0F50  00A2               	movwf	___awmod@dividend
  4632  0F51  01A3               	clrf	___awmod@dividend+1
  4633  0F52  1BA2               	btfsc	___awmod@dividend,7
  4634  0F53  03A3               	decf	___awmod@dividend+1,f
  4635  0F54  120A  158A  20E1  120A  158A  	fcall	___awmod
  4636  0F59  1283               	bcf	3,5	;RP0=0, select bank0
  4637  0F5A  1303               	bcf	3,6	;RP1=0, select bank0
  4638  0F5B  0820               	movf	?___awmod,w
  4639  0F5C  00CE               	movwf	??_scale
  4640  0F5D  3001               	movlw	1
  4641  0F5E                     u6855:
  4642  0F5E  1003               	clrc
  4643  0F5F  0DCE               	rlf	??_scale,f
  4644  0F60  3EFF               	addlw	-1
  4645  0F61  1D03               	skipz
  4646  0F62  2F5E               	goto	u6855
  4647  0F63  1003               	clrc
  4648  0F64  0D4E               	rlf	??_scale,w
  4649  0F65  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4650  0F66  0084               	movwf	4
  4651  0F67  120A  158A  200A  120A  158A  	fcall	stringdir
  4652  0F6C  00CF               	movwf	??_scale+1
  4653  0F6D  120A  158A  200A  120A  158A  	fcall	stringdir
  4654  0F72  00D0               	movwf	??_scale+2
  4655  0F73  120A  158A  200A  120A  158A  	fcall	stringdir
  4656  0F78  00D1               	movwf	??_scale+3
  4657  0F79  120A  158A  200A  120A  158A  	fcall	stringdir
  4658  0F7E  00D2               	movwf	??_scale+4
  4659  0F7F  0852               	movf	??_scale+4,w
  4660  0F80  00B3               	movwf	___flmul@b+3
  4661  0F81  0851               	movf	??_scale+3,w
  4662  0F82  00B2               	movwf	___flmul@b+2
  4663  0F83  0850               	movf	??_scale+2,w
  4664  0F84  00B1               	movwf	___flmul@b+1
  4665  0F85  084F               	movf	??_scale+1,w
  4666  0F86  00B0               	movwf	___flmul@b
  4667  0F87  300A               	movlw	10
  4668  0F88  00A7               	movwf	___awdiv@divisor
  4669  0F89  3000               	movlw	0
  4670  0F8A  00A8               	movwf	___awdiv@divisor+1
  4671  0F8B  085C               	movf	scale@scl,w
  4672  0F8C  00A9               	movwf	___awdiv@dividend
  4673  0F8D  01AA               	clrf	___awdiv@dividend+1
  4674  0F8E  1BA9               	btfsc	___awdiv@dividend,7
  4675  0F8F  03AA               	decf	___awdiv@dividend+1,f
  4676  0F90  160A  118A  2010  120A  158A  	fcall	___awdiv
  4677  0F95  1283               	bcf	3,5	;RP0=0, select bank0
  4678  0F96  1303               	bcf	3,6	;RP1=0, select bank0
  4679  0F97  0827               	movf	?___awdiv,w
  4680  0F98  00D3               	movwf	??_scale+5
  4681  0F99  3001               	movlw	1
  4682  0F9A                     u6865:
  4683  0F9A  1003               	clrc
  4684  0F9B  0DD3               	rlf	??_scale+5,f
  4685  0F9C  3EFF               	addlw	-1
  4686  0F9D  1D03               	skipz
  4687  0F9E  2F9A               	goto	u6865
  4688  0F9F  1003               	clrc
  4689  0FA0  0D53               	rlf	??_scale+5,w
  4690  0FA1  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  4691  0FA2  0084               	movwf	4
  4692  0FA3  120A  158A  200A  120A  158A  	fcall	stringdir
  4693  0FA8  00D4               	movwf	??_scale+6
  4694  0FA9  120A  158A  200A  120A  158A  	fcall	stringdir
  4695  0FAE  00D5               	movwf	??_scale+7
  4696  0FAF  120A  158A  200A  120A  158A  	fcall	stringdir
  4697  0FB4  00D6               	movwf	??_scale+8
  4698  0FB5  120A  158A  200A  120A  158A  	fcall	stringdir
  4699  0FBA  00D7               	movwf	??_scale+9
  4700  0FBB  0857               	movf	??_scale+9,w
  4701  0FBC  00B7               	movwf	___flmul@a+3
  4702  0FBD  0856               	movf	??_scale+8,w
  4703  0FBE  00B6               	movwf	___flmul@a+2
  4704  0FBF  0855               	movf	??_scale+7,w
  4705  0FC0  00B5               	movwf	___flmul@a+1
  4706  0FC1  0854               	movf	??_scale+6,w
  4707  0FC2  00B4               	movwf	___flmul@a
  4708  0FC3  120A  158A  213C  120A  158A  	fcall	___flmul
  4709  0FC8  1283               	bcf	3,5	;RP0=0, select bank0
  4710  0FC9  1303               	bcf	3,6	;RP1=0, select bank0
  4711  0FCA  0833               	movf	?___flmul+3,w
  4712  0FCB  00CD               	movwf	?_scale+3
  4713  0FCC  0832               	movf	?___flmul+2,w
  4714  0FCD  00CC               	movwf	?_scale+2
  4715  0FCE  0831               	movf	?___flmul+1,w
  4716  0FCF  00CB               	movwf	?_scale+1
  4717  0FD0  0830               	movf	?___flmul,w
  4718  0FD1  00CA               	movwf	?_scale
  4719  0FD2  2FFF               	goto	l239
  4720  0FD3                     l3948:
  4721                           
  4722                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  4723  0FD3  085C               	movf	scale@scl,w
  4724  0FD4  00CE               	movwf	??_scale
  4725  0FD5  3001               	movlw	1
  4726  0FD6                     u6875:
  4727  0FD6  1003               	clrc
  4728  0FD7  0DCE               	rlf	??_scale,f
  4729  0FD8  3EFF               	addlw	-1
  4730  0FD9  1D03               	skipz
  4731  0FDA  2FD6               	goto	u6875
  4732  0FDB  1003               	clrc
  4733  0FDC  0D4E               	rlf	??_scale,w
  4734  0FDD  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4735  0FDE  0084               	movwf	4
  4736  0FDF  120A  158A  200A  120A  158A  	fcall	stringdir
  4737  0FE4  00CF               	movwf	??_scale+1
  4738  0FE5  120A  158A  200A  120A  158A  	fcall	stringdir
  4739  0FEA  00D0               	movwf	??_scale+2
  4740  0FEB  120A  158A  200A  120A  158A  	fcall	stringdir
  4741  0FF0  00D1               	movwf	??_scale+3
  4742  0FF1  120A  158A  200A  120A  158A  	fcall	stringdir
  4743  0FF6  00D2               	movwf	??_scale+4
  4744  0FF7  0852               	movf	??_scale+4,w
  4745  0FF8  00CD               	movwf	?_scale+3
  4746  0FF9  0851               	movf	??_scale+3,w
  4747  0FFA  00CC               	movwf	?_scale+2
  4748  0FFB  0850               	movf	??_scale+2,w
  4749  0FFC  00CB               	movwf	?_scale+1
  4750  0FFD  084F               	movf	??_scale+1,w
  4751  0FFE  00CA               	movwf	?_scale
  4752  0FFF                     l239:
  4753  0FFF  0008               	return
  4754  1000                     __end_of_scale:
  4755                           
  4756                           	psect	text3
  4757  08E1                     __ptext3:	
  4758 ;; *************** function ___awmod *****************
  4759 ;; Defined at:
  4760 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awmod.c"
  4761 ;; Parameters:    Size  Location     Type
  4762 ;;  divisor         2    0[BANK0 ] int 
  4763 ;;  dividend        2    2[BANK0 ] int 
  4764 ;; Auto vars:     Size  Location     Type
  4765 ;;  sign            1    6[BANK0 ] unsigned char 
  4766 ;;  counter         1    5[BANK0 ] unsigned char 
  4767 ;; Return value:  Size  Location     Type
  4768 ;;                  2    0[BANK0 ] int 
  4769 ;; Registers used:
  4770 ;;		wreg, status,2, status,0
  4771 ;; Tracked objects:
  4772 ;;		On entry : 0/0
  4773 ;;		On exit  : 0/0
  4774 ;;		Unchanged: 0/0
  4775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4776 ;;      Params:         0       4       0       0       0
  4777 ;;      Locals:         0       2       0       0       0
  4778 ;;      Temps:          0       1       0       0       0
  4779 ;;      Totals:         0       7       0       0       0
  4780 ;;Total ram usage:        7 bytes
  4781 ;; Hardware stack levels used: 1
  4782 ;; Hardware stack levels required when called: 2
  4783 ;; This function calls:
  4784 ;;		Nothing
  4785 ;; This function is called by:
  4786 ;;		_scale
  4787 ;; This function uses a non-reentrant model
  4788 ;;
  4789                           
  4790                           
  4791                           ;psect for function ___awmod
  4792  08E1                     ___awmod:
  4793  08E1                     l3470:	
  4794                           ;incstack = 0
  4795                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4796                           
  4797  08E1  1283               	bcf	3,5	;RP0=0, select bank0
  4798  08E2  1303               	bcf	3,6	;RP1=0, select bank0
  4799  08E3  01A6               	clrf	___awmod@sign
  4800  08E4                     l3472:
  4801  08E4  1FA3               	btfss	___awmod@dividend+1,7
  4802  08E5  28E7               	goto	u5641
  4803  08E6  28E8               	goto	u5640
  4804  08E7                     u5641:
  4805  08E7  28EF               	goto	l3478
  4806  08E8                     u5640:
  4807  08E8                     l3474:
  4808  08E8  09A2               	comf	___awmod@dividend,f
  4809  08E9  09A3               	comf	___awmod@dividend+1,f
  4810  08EA  0AA2               	incf	___awmod@dividend,f
  4811  08EB  1903               	skipnz
  4812  08EC  0AA3               	incf	___awmod@dividend+1,f
  4813  08ED                     l3476:
  4814  08ED  01A6               	clrf	___awmod@sign
  4815  08EE  0AA6               	incf	___awmod@sign,f
  4816  08EF                     l3478:
  4817  08EF  1FA1               	btfss	___awmod@divisor+1,7
  4818  08F0  28F2               	goto	u5651
  4819  08F1  28F3               	goto	u5650
  4820  08F2                     u5651:
  4821  08F2  28F8               	goto	l3482
  4822  08F3                     u5650:
  4823  08F3                     l3480:
  4824  08F3  09A0               	comf	___awmod@divisor,f
  4825  08F4  09A1               	comf	___awmod@divisor+1,f
  4826  08F5  0AA0               	incf	___awmod@divisor,f
  4827  08F6  1903               	skipnz
  4828  08F7  0AA1               	incf	___awmod@divisor+1,f
  4829  08F8                     l3482:
  4830  08F8  0820               	movf	___awmod@divisor,w
  4831  08F9  0421               	iorwf	___awmod@divisor+1,w
  4832  08FA  1903               	btfsc	3,2
  4833  08FB  28FD               	goto	u5661
  4834  08FC  28FE               	goto	u5660
  4835  08FD                     u5661:
  4836  08FD  292D               	goto	l3500
  4837  08FE                     u5660:
  4838  08FE                     l3484:
  4839  08FE  01A5               	clrf	___awmod@counter
  4840  08FF  0AA5               	incf	___awmod@counter,f
  4841  0900  290C               	goto	l3490
  4842  0901                     l3486:
  4843  0901  3001               	movlw	1
  4844  0902                     u5675:
  4845  0902  1003               	clrc
  4846  0903  0DA0               	rlf	___awmod@divisor,f
  4847  0904  0DA1               	rlf	___awmod@divisor+1,f
  4848  0905  3EFF               	addlw	-1
  4849  0906  1D03               	skipz
  4850  0907  2902               	goto	u5675
  4851  0908                     l3488:
  4852  0908  3001               	movlw	1
  4853  0909  00A4               	movwf	??___awmod
  4854  090A  0824               	movf	??___awmod,w
  4855  090B  07A5               	addwf	___awmod@counter,f
  4856  090C                     l3490:
  4857  090C  1FA1               	btfss	___awmod@divisor+1,7
  4858  090D  290F               	goto	u5681
  4859  090E  2910               	goto	u5680
  4860  090F                     u5681:
  4861  090F  2901               	goto	l3486
  4862  0910                     u5680:
  4863  0910                     l3492:
  4864  0910  0821               	movf	___awmod@divisor+1,w
  4865  0911  0223               	subwf	___awmod@dividend+1,w
  4866  0912  1D03               	skipz
  4867  0913  2916               	goto	u5695
  4868  0914  0820               	movf	___awmod@divisor,w
  4869  0915  0222               	subwf	___awmod@dividend,w
  4870  0916                     u5695:
  4871  0916  1C03               	skipc
  4872  0917  2919               	goto	u5691
  4873  0918  291A               	goto	u5690
  4874  0919                     u5691:
  4875  0919  2920               	goto	l3496
  4876  091A                     u5690:
  4877  091A                     l3494:
  4878  091A  0820               	movf	___awmod@divisor,w
  4879  091B  02A2               	subwf	___awmod@dividend,f
  4880  091C  0821               	movf	___awmod@divisor+1,w
  4881  091D  1C03               	skipc
  4882  091E  03A3               	decf	___awmod@dividend+1,f
  4883  091F  02A3               	subwf	___awmod@dividend+1,f
  4884  0920                     l3496:
  4885  0920  3001               	movlw	1
  4886  0921                     u5705:
  4887  0921  1003               	clrc
  4888  0922  0CA1               	rrf	___awmod@divisor+1,f
  4889  0923  0CA0               	rrf	___awmod@divisor,f
  4890  0924  3EFF               	addlw	-1
  4891  0925  1D03               	skipz
  4892  0926  2921               	goto	u5705
  4893  0927                     l3498:
  4894  0927  3001               	movlw	1
  4895  0928  02A5               	subwf	___awmod@counter,f
  4896  0929  1D03               	btfss	3,2
  4897  092A  292C               	goto	u5711
  4898  092B  292D               	goto	u5710
  4899  092C                     u5711:
  4900  092C  2910               	goto	l3492
  4901  092D                     u5710:
  4902  092D                     l3500:
  4903  092D  0826               	movf	___awmod@sign,w
  4904  092E  1903               	btfsc	3,2
  4905  092F  2931               	goto	u5721
  4906  0930  2932               	goto	u5720
  4907  0931                     u5721:
  4908  0931  2937               	goto	l3504
  4909  0932                     u5720:
  4910  0932                     l3502:
  4911  0932  09A2               	comf	___awmod@dividend,f
  4912  0933  09A3               	comf	___awmod@dividend+1,f
  4913  0934  0AA2               	incf	___awmod@dividend,f
  4914  0935  1903               	skipnz
  4915  0936  0AA3               	incf	___awmod@dividend+1,f
  4916  0937                     l3504:
  4917  0937  0823               	movf	___awmod@dividend+1,w
  4918  0938  00A1               	movwf	?___awmod+1
  4919  0939  0822               	movf	___awmod@dividend,w
  4920  093A  00A0               	movwf	?___awmod
  4921  093B                     l475:
  4922  093B  0008               	return
  4923  093C                     __end_of___awmod:
  4924                           
  4925                           	psect	text4
  4926  1010                     __ptext4:	
  4927 ;; *************** function ___awdiv *****************
  4928 ;; Defined at:
  4929 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
  4930 ;; Parameters:    Size  Location     Type
  4931 ;;  divisor         2    7[BANK0 ] int 
  4932 ;;  dividend        2    9[BANK0 ] int 
  4933 ;; Auto vars:     Size  Location     Type
  4934 ;;  quotient        2   14[BANK0 ] int 
  4935 ;;  sign            1   13[BANK0 ] unsigned char 
  4936 ;;  counter         1   12[BANK0 ] unsigned char 
  4937 ;; Return value:  Size  Location     Type
  4938 ;;                  2    7[BANK0 ] int 
  4939 ;; Registers used:
  4940 ;;		wreg, status,2, status,0
  4941 ;; Tracked objects:
  4942 ;;		On entry : 0/0
  4943 ;;		On exit  : 0/0
  4944 ;;		Unchanged: 0/0
  4945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4946 ;;      Params:         0       4       0       0       0
  4947 ;;      Locals:         0       4       0       0       0
  4948 ;;      Temps:          0       1       0       0       0
  4949 ;;      Totals:         0       9       0       0       0
  4950 ;;Total ram usage:        9 bytes
  4951 ;; Hardware stack levels used: 1
  4952 ;; Hardware stack levels required when called: 2
  4953 ;; This function calls:
  4954 ;;		Nothing
  4955 ;; This function is called by:
  4956 ;;		_main
  4957 ;;		_scale
  4958 ;;		_sprintf
  4959 ;; This function uses a non-reentrant model
  4960 ;;
  4961                           
  4962                           
  4963                           ;psect for function ___awdiv
  4964  1010                     ___awdiv:
  4965  1010                     l2188:	
  4966                           ;incstack = 0
  4967                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4968                           
  4969  1010  1283               	bcf	3,5	;RP0=0, select bank0
  4970  1011  1303               	bcf	3,6	;RP1=0, select bank0
  4971  1012  01AD               	clrf	___awdiv@sign
  4972  1013                     l2190:
  4973  1013  1FA8               	btfss	___awdiv@divisor+1,7
  4974  1014  2816               	goto	u2861
  4975  1015  2817               	goto	u2860
  4976  1016                     u2861:
  4977  1016  281E               	goto	l2196
  4978  1017                     u2860:
  4979  1017                     l2192:
  4980  1017  09A7               	comf	___awdiv@divisor,f
  4981  1018  09A8               	comf	___awdiv@divisor+1,f
  4982  1019  0AA7               	incf	___awdiv@divisor,f
  4983  101A  1903               	skipnz
  4984  101B  0AA8               	incf	___awdiv@divisor+1,f
  4985  101C                     l2194:
  4986  101C  01AD               	clrf	___awdiv@sign
  4987  101D  0AAD               	incf	___awdiv@sign,f
  4988  101E                     l2196:
  4989  101E  1FAA               	btfss	___awdiv@dividend+1,7
  4990  101F  2821               	goto	u2871
  4991  1020  2822               	goto	u2870
  4992  1021                     u2871:
  4993  1021  282B               	goto	l2202
  4994  1022                     u2870:
  4995  1022                     l2198:
  4996  1022  09A9               	comf	___awdiv@dividend,f
  4997  1023  09AA               	comf	___awdiv@dividend+1,f
  4998  1024  0AA9               	incf	___awdiv@dividend,f
  4999  1025  1903               	skipnz
  5000  1026  0AAA               	incf	___awdiv@dividend+1,f
  5001  1027                     l2200:
  5002  1027  3001               	movlw	1
  5003  1028  00AB               	movwf	??___awdiv
  5004  1029  082B               	movf	??___awdiv,w
  5005  102A  06AD               	xorwf	___awdiv@sign,f
  5006  102B                     l2202:
  5007  102B  01AE               	clrf	___awdiv@quotient
  5008  102C  01AF               	clrf	___awdiv@quotient+1
  5009  102D                     l2204:
  5010  102D  0827               	movf	___awdiv@divisor,w
  5011  102E  0428               	iorwf	___awdiv@divisor+1,w
  5012  102F  1903               	btfsc	3,2
  5013  1030  2832               	goto	u2881
  5014  1031  2833               	goto	u2880
  5015  1032                     u2881:
  5016  1032  286A               	goto	l2224
  5017  1033                     u2880:
  5018  1033                     l2206:
  5019  1033  01AC               	clrf	___awdiv@counter
  5020  1034  0AAC               	incf	___awdiv@counter,f
  5021  1035  2841               	goto	l2212
  5022  1036                     l2208:
  5023  1036  3001               	movlw	1
  5024  1037                     u2895:
  5025  1037  1003               	clrc
  5026  1038  0DA7               	rlf	___awdiv@divisor,f
  5027  1039  0DA8               	rlf	___awdiv@divisor+1,f
  5028  103A  3EFF               	addlw	-1
  5029  103B  1D03               	skipz
  5030  103C  2837               	goto	u2895
  5031  103D                     l2210:
  5032  103D  3001               	movlw	1
  5033  103E  00AB               	movwf	??___awdiv
  5034  103F  082B               	movf	??___awdiv,w
  5035  1040  07AC               	addwf	___awdiv@counter,f
  5036  1041                     l2212:
  5037  1041  1FA8               	btfss	___awdiv@divisor+1,7
  5038  1042  2844               	goto	u2901
  5039  1043  2845               	goto	u2900
  5040  1044                     u2901:
  5041  1044  2836               	goto	l2208
  5042  1045                     u2900:
  5043  1045                     l2214:
  5044  1045  3001               	movlw	1
  5045  1046                     u2915:
  5046  1046  1003               	clrc
  5047  1047  0DAE               	rlf	___awdiv@quotient,f
  5048  1048  0DAF               	rlf	___awdiv@quotient+1,f
  5049  1049  3EFF               	addlw	-1
  5050  104A  1D03               	skipz
  5051  104B  2846               	goto	u2915
  5052  104C  0828               	movf	___awdiv@divisor+1,w
  5053  104D  022A               	subwf	___awdiv@dividend+1,w
  5054  104E  1D03               	skipz
  5055  104F  2852               	goto	u2925
  5056  1050  0827               	movf	___awdiv@divisor,w
  5057  1051  0229               	subwf	___awdiv@dividend,w
  5058  1052                     u2925:
  5059  1052  1C03               	skipc
  5060  1053  2855               	goto	u2921
  5061  1054  2856               	goto	u2920
  5062  1055                     u2921:
  5063  1055  285D               	goto	l2220
  5064  1056                     u2920:
  5065  1056                     l2216:
  5066  1056  0827               	movf	___awdiv@divisor,w
  5067  1057  02A9               	subwf	___awdiv@dividend,f
  5068  1058  0828               	movf	___awdiv@divisor+1,w
  5069  1059  1C03               	skipc
  5070  105A  03AA               	decf	___awdiv@dividend+1,f
  5071  105B  02AA               	subwf	___awdiv@dividend+1,f
  5072  105C                     l2218:
  5073  105C  142E               	bsf	___awdiv@quotient,0
  5074  105D                     l2220:
  5075  105D  3001               	movlw	1
  5076  105E                     u2935:
  5077  105E  1003               	clrc
  5078  105F  0CA8               	rrf	___awdiv@divisor+1,f
  5079  1060  0CA7               	rrf	___awdiv@divisor,f
  5080  1061  3EFF               	addlw	-1
  5081  1062  1D03               	skipz
  5082  1063  285E               	goto	u2935
  5083  1064                     l2222:
  5084  1064  3001               	movlw	1
  5085  1065  02AC               	subwf	___awdiv@counter,f
  5086  1066  1D03               	btfss	3,2
  5087  1067  2869               	goto	u2941
  5088  1068  286A               	goto	u2940
  5089  1069                     u2941:
  5090  1069  2845               	goto	l2214
  5091  106A                     u2940:
  5092  106A                     l2224:
  5093  106A  082D               	movf	___awdiv@sign,w
  5094  106B  1903               	btfsc	3,2
  5095  106C  286E               	goto	u2951
  5096  106D  286F               	goto	u2950
  5097  106E                     u2951:
  5098  106E  2874               	goto	l2228
  5099  106F                     u2950:
  5100  106F                     l2226:
  5101  106F  09AE               	comf	___awdiv@quotient,f
  5102  1070  09AF               	comf	___awdiv@quotient+1,f
  5103  1071  0AAE               	incf	___awdiv@quotient,f
  5104  1072  1903               	skipnz
  5105  1073  0AAF               	incf	___awdiv@quotient+1,f
  5106  1074                     l2228:
  5107  1074  082F               	movf	___awdiv@quotient+1,w
  5108  1075  00A8               	movwf	?___awdiv+1
  5109  1076  082E               	movf	___awdiv@quotient,w
  5110  1077  00A7               	movwf	?___awdiv
  5111  1078                     l462:
  5112  1078  0008               	return
  5113  1079                     __end_of___awdiv:
  5114                           
  5115                           	psect	text5
  5116  07E7                     __ptext5:	
  5117 ;; *************** function _isdigit *****************
  5118 ;; Defined at:
  5119 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\isdigit.c"
  5120 ;; Parameters:    Size  Location     Type
  5121 ;;  c               1    wreg     unsigned char 
  5122 ;; Auto vars:     Size  Location     Type
  5123 ;;  c               1    1[BANK0 ] unsigned char 
  5124 ;; Return value:  Size  Location     Type
  5125 ;;		None               void
  5126 ;; Registers used:
  5127 ;;		wreg, status,2, status,0
  5128 ;; Tracked objects:
  5129 ;;		On entry : 0/0
  5130 ;;		On exit  : 0/0
  5131 ;;		Unchanged: 0/0
  5132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5133 ;;      Params:         0       0       0       0       0
  5134 ;;      Locals:         0       2       0       0       0
  5135 ;;      Temps:          0       0       0       0       0
  5136 ;;      Totals:         0       2       0       0       0
  5137 ;;Total ram usage:        2 bytes
  5138 ;; Hardware stack levels used: 1
  5139 ;; Hardware stack levels required when called: 2
  5140 ;; This function calls:
  5141 ;;		Nothing
  5142 ;; This function is called by:
  5143 ;;		_sprintf
  5144 ;; This function uses a non-reentrant model
  5145 ;;
  5146                           
  5147                           
  5148                           ;psect for function _isdigit
  5149  07E7                     _isdigit:
  5150                           
  5151                           ;incstack = 0
  5152                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  5153                           ;isdigit@c stored from wreg
  5154  07E7  1283               	bcf	3,5	;RP0=0, select bank0
  5155  07E8  1303               	bcf	3,6	;RP1=0, select bank0
  5156  07E9  00A1               	movwf	isdigit@c
  5157  07EA                     l3952:
  5158  07EA  01A0               	clrf	_isdigit$819
  5159  07EB                     l3954:
  5160  07EB  303A               	movlw	58
  5161  07EC  0221               	subwf	isdigit@c,w
  5162  07ED  1803               	skipnc
  5163  07EE  2FF0               	goto	u6881
  5164  07EF  2FF1               	goto	u6880
  5165  07F0                     u6881:
  5166  07F0  2FF9               	goto	l3960
  5167  07F1                     u6880:
  5168  07F1                     l3956:
  5169  07F1  3030               	movlw	48
  5170  07F2  0221               	subwf	isdigit@c,w
  5171  07F3  1C03               	skipc
  5172  07F4  2FF6               	goto	u6891
  5173  07F5  2FF7               	goto	u6890
  5174  07F6                     u6891:
  5175  07F6  2FF9               	goto	l3960
  5176  07F7                     u6890:
  5177  07F7                     l3958:
  5178  07F7  01A0               	clrf	_isdigit$819
  5179  07F8  0AA0               	incf	_isdigit$819,f
  5180  07F9                     l3960:
  5181  07F9  0C20               	rrf	_isdigit$819,w
  5182  07FA                     l796:
  5183  07FA  0008               	return
  5184  07FB                     __end_of_isdigit:
  5185                           
  5186                           	psect	text6
  5187  1079                     __ptext6:	
  5188 ;; *************** function _fround *****************
  5189 ;; Defined at:
  5190 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c"
  5191 ;; Parameters:    Size  Location     Type
  5192 ;;  prec            1    wreg     unsigned char 
  5193 ;; Auto vars:     Size  Location     Type
  5194 ;;  prec            1   61[BANK0 ] unsigned char 
  5195 ;; Return value:  Size  Location     Type
  5196 ;;                  4   42[BANK0 ] unsigned char 
  5197 ;; Registers used:
  5198 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5199 ;; Tracked objects:
  5200 ;;		On entry : 0/0
  5201 ;;		On exit  : 0/0
  5202 ;;		Unchanged: 0/0
  5203 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5204 ;;      Params:         0       4       0       0       0
  5205 ;;      Locals:         0       9       0       0       0
  5206 ;;      Temps:          0       7       0       0       0
  5207 ;;      Totals:         0      20       0       0       0
  5208 ;;Total ram usage:       20 bytes
  5209 ;; Hardware stack levels used: 1
  5210 ;; Hardware stack levels required when called: 4
  5211 ;; This function calls:
  5212 ;;		___flmul
  5213 ;;		___lwdiv
  5214 ;;		___lwmod
  5215 ;; This function is called by:
  5216 ;;		_sprintf
  5217 ;; This function uses a non-reentrant model
  5218 ;;
  5219                           
  5220                           
  5221                           ;psect for function _fround
  5222  1079                     _fround:
  5223                           
  5224                           ;incstack = 0
  5225                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5226                           ;fround@prec stored from wreg
  5227  1079  1283               	bcf	3,5	;RP0=0, select bank0
  5228  107A  1303               	bcf	3,6	;RP1=0, select bank0
  5229  107B  00DD               	movwf	fround@prec
  5230  107C                     l3894:
  5231                           
  5232                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  5233  107C  306E               	movlw	110
  5234  107D  025D               	subwf	fround@prec,w
  5235  107E  1C03               	skipc
  5236  107F  2881               	goto	u6631
  5237  1080  2882               	goto	u6630
  5238  1081                     u6631:
  5239  1081  2991               	goto	l3902
  5240  1082                     u6630:
  5241  1082                     l3896:
  5242                           
  5243                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5244  1082  303F               	movlw	63
  5245  1083  00B3               	movwf	___flmul@b+3
  5246  1084  3000               	movlw	0
  5247  1085  00B2               	movwf	___flmul@b+2
  5248  1086  3000               	movlw	0
  5249  1087  00B1               	movwf	___flmul@b+1
  5250  1088  3000               	movlw	0
  5251  1089  00B0               	movwf	___flmul@b
  5252  108A  3064               	movlw	100
  5253  108B  00A6               	movwf	___lwdiv@divisor
  5254  108C  3000               	movlw	0
  5255  108D  00A7               	movwf	___lwdiv@divisor+1
  5256  108E  085D               	movf	fround@prec,w
  5257  108F  00CE               	movwf	??_fround
  5258  1090  01CF               	clrf	??_fround+1
  5259  1091  084E               	movf	??_fround,w
  5260  1092  00A8               	movwf	___lwdiv@dividend
  5261  1093  084F               	movf	??_fround+1,w
  5262  1094  00A9               	movwf	___lwdiv@dividend+1
  5263  1095  160A  158A  21F2  160A  118A  	fcall	___lwdiv
  5264  109A  1283               	bcf	3,5	;RP0=0, select bank0
  5265  109B  1303               	bcf	3,6	;RP1=0, select bank0
  5266  109C  0826               	movf	?___lwdiv,w
  5267  109D  00D0               	movwf	??_fround+2
  5268  109E  3001               	movlw	1
  5269  109F                     u6645:
  5270  109F  1003               	clrc
  5271  10A0  0DD0               	rlf	??_fround+2,f
  5272  10A1  3EFF               	addlw	-1
  5273  10A2  1D03               	skipz
  5274  10A3  289F               	goto	u6645
  5275  10A4  1003               	clrc
  5276  10A5  0D50               	rlf	??_fround+2,w
  5277  10A6  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  5278  10A7  0084               	movwf	4
  5279  10A8  120A  158A  200A  160A  118A  	fcall	stringdir
  5280  10AD  00D1               	movwf	??_fround+3
  5281  10AE  120A  158A  200A  160A  118A  	fcall	stringdir
  5282  10B3  00D2               	movwf	??_fround+4
  5283  10B4  120A  158A  200A  160A  118A  	fcall	stringdir
  5284  10B9  00D3               	movwf	??_fround+5
  5285  10BA  120A  158A  200A  160A  118A  	fcall	stringdir
  5286  10BF  00D4               	movwf	??_fround+6
  5287  10C0  0854               	movf	??_fround+6,w
  5288  10C1  00B7               	movwf	___flmul@a+3
  5289  10C2  0853               	movf	??_fround+5,w
  5290  10C3  00B6               	movwf	___flmul@a+2
  5291  10C4  0852               	movf	??_fround+4,w
  5292  10C5  00B5               	movwf	___flmul@a+1
  5293  10C6  0851               	movf	??_fround+3,w
  5294  10C7  00B4               	movwf	___flmul@a
  5295  10C8  120A  158A  213C  160A  118A  	fcall	___flmul
  5296  10CD  1283               	bcf	3,5	;RP0=0, select bank0
  5297  10CE  1303               	bcf	3,6	;RP1=0, select bank0
  5298  10CF  0833               	movf	?___flmul+3,w
  5299  10D0  00DC               	movwf	_fround$1010+3
  5300  10D1  0832               	movf	?___flmul+2,w
  5301  10D2  00DB               	movwf	_fround$1010+2
  5302  10D3  0831               	movf	?___flmul+1,w
  5303  10D4  00DA               	movwf	_fround$1010+1
  5304  10D5  0830               	movf	?___flmul,w
  5305  10D6  00D9               	movwf	_fround$1010
  5306                           
  5307                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5308  10D7  300A               	movlw	10
  5309  10D8  00A6               	movwf	___lwdiv@divisor
  5310  10D9  3000               	movlw	0
  5311  10DA  00A7               	movwf	___lwdiv@divisor+1
  5312  10DB  085D               	movf	fround@prec,w
  5313  10DC  00CE               	movwf	??_fround
  5314  10DD  01CF               	clrf	??_fround+1
  5315  10DE  084E               	movf	??_fround,w
  5316  10DF  00A2               	movwf	___lwmod@dividend
  5317  10E0  084F               	movf	??_fround+1,w
  5318  10E1  00A3               	movwf	___lwmod@dividend+1
  5319  10E2  3064               	movlw	100
  5320  10E3  00A0               	movwf	___lwmod@divisor
  5321  10E4  3000               	movlw	0
  5322  10E5  00A1               	movwf	___lwmod@divisor+1
  5323  10E6  160A  158A  2133  160A  118A  	fcall	___lwmod
  5324  10EB  1283               	bcf	3,5	;RP0=0, select bank0
  5325  10EC  1303               	bcf	3,6	;RP1=0, select bank0
  5326  10ED  0821               	movf	?___lwmod+1,w
  5327  10EE  00A9               	movwf	___lwdiv@dividend+1
  5328  10EF  0820               	movf	?___lwmod,w
  5329  10F0  00A8               	movwf	___lwdiv@dividend
  5330  10F1  160A  158A  21F2  160A  118A  	fcall	___lwdiv
  5331  10F6  1283               	bcf	3,5	;RP0=0, select bank0
  5332  10F7  1303               	bcf	3,6	;RP1=0, select bank0
  5333  10F8  0826               	movf	?___lwdiv,w
  5334  10F9  00D0               	movwf	??_fround+2
  5335  10FA  3001               	movlw	1
  5336  10FB                     u6655:
  5337  10FB  1003               	clrc
  5338  10FC  0DD0               	rlf	??_fround+2,f
  5339  10FD  3EFF               	addlw	-1
  5340  10FE  1D03               	skipz
  5341  10FF  28FB               	goto	u6655
  5342  1100  1003               	clrc
  5343  1101  0D50               	rlf	??_fround+2,w
  5344  1102  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  5345  1103  0084               	movwf	4
  5346  1104  120A  158A  200A  160A  118A  	fcall	stringdir
  5347  1109  00D1               	movwf	??_fround+3
  5348  110A  120A  158A  200A  160A  118A  	fcall	stringdir
  5349  110F  00D2               	movwf	??_fround+4
  5350  1110  120A  158A  200A  160A  118A  	fcall	stringdir
  5351  1115  00D3               	movwf	??_fround+5
  5352  1116  120A  158A  200A  160A  118A  	fcall	stringdir
  5353  111B  00D4               	movwf	??_fround+6
  5354  111C  0854               	movf	??_fround+6,w
  5355  111D  00B3               	movwf	___flmul@b+3
  5356  111E  0853               	movf	??_fround+5,w
  5357  111F  00B2               	movwf	___flmul@b+2
  5358  1120  0852               	movf	??_fround+4,w
  5359  1121  00B1               	movwf	___flmul@b+1
  5360  1122  0851               	movf	??_fround+3,w
  5361  1123  00B0               	movwf	___flmul@b
  5362  1124  085C               	movf	_fround$1010+3,w
  5363  1125  00B7               	movwf	___flmul@a+3
  5364  1126  085B               	movf	_fround$1010+2,w
  5365  1127  00B6               	movwf	___flmul@a+2
  5366  1128  085A               	movf	_fround$1010+1,w
  5367  1129  00B5               	movwf	___flmul@a+1
  5368  112A  0859               	movf	_fround$1010,w
  5369  112B  00B4               	movwf	___flmul@a
  5370  112C  120A  158A  213C  160A  118A  	fcall	___flmul
  5371  1131  1283               	bcf	3,5	;RP0=0, select bank0
  5372  1132  1303               	bcf	3,6	;RP1=0, select bank0
  5373  1133  0833               	movf	?___flmul+3,w
  5374  1134  00D8               	movwf	_fround$1011+3
  5375  1135  0832               	movf	?___flmul+2,w
  5376  1136  00D7               	movwf	_fround$1011+2
  5377  1137  0831               	movf	?___flmul+1,w
  5378  1138  00D6               	movwf	_fround$1011+1
  5379  1139  0830               	movf	?___flmul,w
  5380  113A  00D5               	movwf	_fround$1011
  5381                           
  5382                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5383  113B  300A               	movlw	10
  5384  113C  00A0               	movwf	___lwmod@divisor
  5385  113D  3000               	movlw	0
  5386  113E  00A1               	movwf	___lwmod@divisor+1
  5387  113F  085D               	movf	fround@prec,w
  5388  1140  00CE               	movwf	??_fround
  5389  1141  01CF               	clrf	??_fround+1
  5390  1142  084E               	movf	??_fround,w
  5391  1143  00A2               	movwf	___lwmod@dividend
  5392  1144  084F               	movf	??_fround+1,w
  5393  1145  00A3               	movwf	___lwmod@dividend+1
  5394  1146  160A  158A  2133  160A  118A  	fcall	___lwmod
  5395  114B  1283               	bcf	3,5	;RP0=0, select bank0
  5396  114C  1303               	bcf	3,6	;RP1=0, select bank0
  5397  114D  0820               	movf	?___lwmod,w
  5398  114E  00D0               	movwf	??_fround+2
  5399  114F  3001               	movlw	1
  5400  1150                     u6665:
  5401  1150  1003               	clrc
  5402  1151  0DD0               	rlf	??_fround+2,f
  5403  1152  3EFF               	addlw	-1
  5404  1153  1D03               	skipz
  5405  1154  2950               	goto	u6665
  5406  1155  1003               	clrc
  5407  1156  0D50               	rlf	??_fround+2,w
  5408  1157  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5409  1158  0084               	movwf	4
  5410  1159  120A  158A  200A  160A  118A  	fcall	stringdir
  5411  115E  00D1               	movwf	??_fround+3
  5412  115F  120A  158A  200A  160A  118A  	fcall	stringdir
  5413  1164  00D2               	movwf	??_fround+4
  5414  1165  120A  158A  200A  160A  118A  	fcall	stringdir
  5415  116A  00D3               	movwf	??_fround+5
  5416  116B  120A  158A  200A  160A  118A  	fcall	stringdir
  5417  1170  00D4               	movwf	??_fround+6
  5418  1171  0854               	movf	??_fround+6,w
  5419  1172  00B3               	movwf	___flmul@b+3
  5420  1173  0853               	movf	??_fround+5,w
  5421  1174  00B2               	movwf	___flmul@b+2
  5422  1175  0852               	movf	??_fround+4,w
  5423  1176  00B1               	movwf	___flmul@b+1
  5424  1177  0851               	movf	??_fround+3,w
  5425  1178  00B0               	movwf	___flmul@b
  5426  1179  0858               	movf	_fround$1011+3,w
  5427  117A  00B7               	movwf	___flmul@a+3
  5428  117B  0857               	movf	_fround$1011+2,w
  5429  117C  00B6               	movwf	___flmul@a+2
  5430  117D  0856               	movf	_fround$1011+1,w
  5431  117E  00B5               	movwf	___flmul@a+1
  5432  117F  0855               	movf	_fround$1011,w
  5433  1180  00B4               	movwf	___flmul@a
  5434  1181  120A  158A  213C  160A  118A  	fcall	___flmul
  5435  1186  1283               	bcf	3,5	;RP0=0, select bank0
  5436  1187  1303               	bcf	3,6	;RP1=0, select bank0
  5437  1188  0833               	movf	?___flmul+3,w
  5438  1189  00CD               	movwf	?_fround+3
  5439  118A  0832               	movf	?___flmul+2,w
  5440  118B  00CC               	movwf	?_fround+2
  5441  118C  0831               	movf	?___flmul+1,w
  5442  118D  00CB               	movwf	?_fround+1
  5443  118E  0830               	movf	?___flmul,w
  5444  118F  00CA               	movwf	?_fround
  5445  1190  2A85               	goto	l232
  5446  1191                     l3902:
  5447  1191  300B               	movlw	11
  5448  1192  025D               	subwf	fround@prec,w
  5449  1193  1C03               	skipc
  5450  1194  2996               	goto	u6671
  5451  1195  2997               	goto	u6670
  5452  1196                     u6671:
  5453  1196  2A42               	goto	l3908
  5454  1197                     u6670:
  5455  1197                     l3904:
  5456                           
  5457                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  5458  1197  303F               	movlw	63
  5459  1198  00B3               	movwf	___flmul@b+3
  5460  1199  3000               	movlw	0
  5461  119A  00B2               	movwf	___flmul@b+2
  5462  119B  3000               	movlw	0
  5463  119C  00B1               	movwf	___flmul@b+1
  5464  119D  3000               	movlw	0
  5465  119E  00B0               	movwf	___flmul@b
  5466  119F  300A               	movlw	10
  5467  11A0  00A6               	movwf	___lwdiv@divisor
  5468  11A1  3000               	movlw	0
  5469  11A2  00A7               	movwf	___lwdiv@divisor+1
  5470  11A3  085D               	movf	fround@prec,w
  5471  11A4  00CE               	movwf	??_fround
  5472  11A5  01CF               	clrf	??_fround+1
  5473  11A6  084E               	movf	??_fround,w
  5474  11A7  00A8               	movwf	___lwdiv@dividend
  5475  11A8  084F               	movf	??_fround+1,w
  5476  11A9  00A9               	movwf	___lwdiv@dividend+1
  5477  11AA  160A  158A  21F2  160A  118A  	fcall	___lwdiv
  5478  11AF  1283               	bcf	3,5	;RP0=0, select bank0
  5479  11B0  1303               	bcf	3,6	;RP1=0, select bank0
  5480  11B1  0826               	movf	?___lwdiv,w
  5481  11B2  00D0               	movwf	??_fround+2
  5482  11B3  3001               	movlw	1
  5483  11B4                     u6685:
  5484  11B4  1003               	clrc
  5485  11B5  0DD0               	rlf	??_fround+2,f
  5486  11B6  3EFF               	addlw	-1
  5487  11B7  1D03               	skipz
  5488  11B8  29B4               	goto	u6685
  5489  11B9  1003               	clrc
  5490  11BA  0D50               	rlf	??_fround+2,w
  5491  11BB  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  5492  11BC  0084               	movwf	4
  5493  11BD  120A  158A  200A  160A  118A  	fcall	stringdir
  5494  11C2  00D1               	movwf	??_fround+3
  5495  11C3  120A  158A  200A  160A  118A  	fcall	stringdir
  5496  11C8  00D2               	movwf	??_fround+4
  5497  11C9  120A  158A  200A  160A  118A  	fcall	stringdir
  5498  11CE  00D3               	movwf	??_fround+5
  5499  11CF  120A  158A  200A  160A  118A  	fcall	stringdir
  5500  11D4  00D4               	movwf	??_fround+6
  5501  11D5  0854               	movf	??_fround+6,w
  5502  11D6  00B7               	movwf	___flmul@a+3
  5503  11D7  0853               	movf	??_fround+5,w
  5504  11D8  00B6               	movwf	___flmul@a+2
  5505  11D9  0852               	movf	??_fround+4,w
  5506  11DA  00B5               	movwf	___flmul@a+1
  5507  11DB  0851               	movf	??_fround+3,w
  5508  11DC  00B4               	movwf	___flmul@a
  5509  11DD  120A  158A  213C  160A  118A  	fcall	___flmul
  5510  11E2  1283               	bcf	3,5	;RP0=0, select bank0
  5511  11E3  1303               	bcf	3,6	;RP1=0, select bank0
  5512  11E4  0833               	movf	?___flmul+3,w
  5513  11E5  00DC               	movwf	_fround$1010+3
  5514  11E6  0832               	movf	?___flmul+2,w
  5515  11E7  00DB               	movwf	_fround$1010+2
  5516  11E8  0831               	movf	?___flmul+1,w
  5517  11E9  00DA               	movwf	_fround$1010+1
  5518  11EA  0830               	movf	?___flmul,w
  5519  11EB  00D9               	movwf	_fround$1010
  5520                           
  5521                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  5522  11EC  300A               	movlw	10
  5523  11ED  00A0               	movwf	___lwmod@divisor
  5524  11EE  3000               	movlw	0
  5525  11EF  00A1               	movwf	___lwmod@divisor+1
  5526  11F0  085D               	movf	fround@prec,w
  5527  11F1  00CE               	movwf	??_fround
  5528  11F2  01CF               	clrf	??_fround+1
  5529  11F3  084E               	movf	??_fround,w
  5530  11F4  00A2               	movwf	___lwmod@dividend
  5531  11F5  084F               	movf	??_fround+1,w
  5532  11F6  00A3               	movwf	___lwmod@dividend+1
  5533  11F7  160A  158A  2133  160A  118A  	fcall	___lwmod
  5534  11FC  1283               	bcf	3,5	;RP0=0, select bank0
  5535  11FD  1303               	bcf	3,6	;RP1=0, select bank0
  5536  11FE  0820               	movf	?___lwmod,w
  5537  11FF  00D0               	movwf	??_fround+2
  5538  1200  3001               	movlw	1
  5539  1201                     u6695:
  5540  1201  1003               	clrc
  5541  1202  0DD0               	rlf	??_fround+2,f
  5542  1203  3EFF               	addlw	-1
  5543  1204  1D03               	skipz
  5544  1205  2A01               	goto	u6695
  5545  1206  1003               	clrc
  5546  1207  0D50               	rlf	??_fround+2,w
  5547  1208  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5548  1209  0084               	movwf	4
  5549  120A  120A  158A  200A  160A  118A  	fcall	stringdir
  5550  120F  00D1               	movwf	??_fround+3
  5551  1210  120A  158A  200A  160A  118A  	fcall	stringdir
  5552  1215  00D2               	movwf	??_fround+4
  5553  1216  120A  158A  200A  160A  118A  	fcall	stringdir
  5554  121B  00D3               	movwf	??_fround+5
  5555  121C  120A  158A  200A  160A  118A  	fcall	stringdir
  5556  1221  00D4               	movwf	??_fround+6
  5557  1222  0854               	movf	??_fround+6,w
  5558  1223  00B3               	movwf	___flmul@b+3
  5559  1224  0853               	movf	??_fround+5,w
  5560  1225  00B2               	movwf	___flmul@b+2
  5561  1226  0852               	movf	??_fround+4,w
  5562  1227  00B1               	movwf	___flmul@b+1
  5563  1228  0851               	movf	??_fround+3,w
  5564  1229  00B0               	movwf	___flmul@b
  5565  122A  085C               	movf	_fround$1010+3,w
  5566  122B  00B7               	movwf	___flmul@a+3
  5567  122C  085B               	movf	_fround$1010+2,w
  5568  122D  00B6               	movwf	___flmul@a+2
  5569  122E  085A               	movf	_fround$1010+1,w
  5570  122F  00B5               	movwf	___flmul@a+1
  5571  1230  0859               	movf	_fround$1010,w
  5572  1231  00B4               	movwf	___flmul@a
  5573  1232  120A  158A  213C  160A  118A  	fcall	___flmul
  5574  1237  1283               	bcf	3,5	;RP0=0, select bank0
  5575  1238  1303               	bcf	3,6	;RP1=0, select bank0
  5576  1239  0833               	movf	?___flmul+3,w
  5577  123A  00CD               	movwf	?_fround+3
  5578  123B  0832               	movf	?___flmul+2,w
  5579  123C  00CC               	movwf	?_fround+2
  5580  123D  0831               	movf	?___flmul+1,w
  5581  123E  00CB               	movwf	?_fround+1
  5582  123F  0830               	movf	?___flmul,w
  5583  1240  00CA               	movwf	?_fround
  5584  1241  2A85               	goto	l232
  5585  1242                     l3908:
  5586                           
  5587                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  5588  1242  303F               	movlw	63
  5589  1243  00B3               	movwf	___flmul@b+3
  5590  1244  3000               	movlw	0
  5591  1245  00B2               	movwf	___flmul@b+2
  5592  1246  3000               	movlw	0
  5593  1247  00B1               	movwf	___flmul@b+1
  5594  1248  3000               	movlw	0
  5595  1249  00B0               	movwf	___flmul@b
  5596  124A  085D               	movf	fround@prec,w
  5597  124B  00CE               	movwf	??_fround
  5598  124C  3001               	movlw	1
  5599  124D                     u6705:
  5600  124D  1003               	clrc
  5601  124E  0DCE               	rlf	??_fround,f
  5602  124F  3EFF               	addlw	-1
  5603  1250  1D03               	skipz
  5604  1251  2A4D               	goto	u6705
  5605  1252  1003               	clrc
  5606  1253  0D4E               	rlf	??_fround,w
  5607  1254  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5608  1255  0084               	movwf	4
  5609  1256  120A  158A  200A  160A  118A  	fcall	stringdir
  5610  125B  00CF               	movwf	??_fround+1
  5611  125C  120A  158A  200A  160A  118A  	fcall	stringdir
  5612  1261  00D0               	movwf	??_fround+2
  5613  1262  120A  158A  200A  160A  118A  	fcall	stringdir
  5614  1267  00D1               	movwf	??_fround+3
  5615  1268  120A  158A  200A  160A  118A  	fcall	stringdir
  5616  126D  00D2               	movwf	??_fround+4
  5617  126E  0852               	movf	??_fround+4,w
  5618  126F  00B7               	movwf	___flmul@a+3
  5619  1270  0851               	movf	??_fround+3,w
  5620  1271  00B6               	movwf	___flmul@a+2
  5621  1272  0850               	movf	??_fround+2,w
  5622  1273  00B5               	movwf	___flmul@a+1
  5623  1274  084F               	movf	??_fround+1,w
  5624  1275  00B4               	movwf	___flmul@a
  5625  1276  120A  158A  213C  160A  118A  	fcall	___flmul
  5626  127B  1283               	bcf	3,5	;RP0=0, select bank0
  5627  127C  1303               	bcf	3,6	;RP1=0, select bank0
  5628  127D  0833               	movf	?___flmul+3,w
  5629  127E  00CD               	movwf	?_fround+3
  5630  127F  0832               	movf	?___flmul+2,w
  5631  1280  00CC               	movwf	?_fround+2
  5632  1281  0831               	movf	?___flmul+1,w
  5633  1282  00CB               	movwf	?_fround+1
  5634  1283  0830               	movf	?___flmul,w
  5635  1284  00CA               	movwf	?_fround
  5636  1285                     l232:
  5637  1285  0008               	return
  5638  1286                     __end_of_fround:
  5639                           
  5640                           	psect	text7
  5641  1933                     __ptext7:	
  5642 ;; *************** function ___lwmod *****************
  5643 ;; Defined at:
  5644 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwmod.c"
  5645 ;; Parameters:    Size  Location     Type
  5646 ;;  divisor         2    0[BANK0 ] unsigned int 
  5647 ;;  dividend        2    2[BANK0 ] unsigned int 
  5648 ;; Auto vars:     Size  Location     Type
  5649 ;;  counter         1    5[BANK0 ] unsigned char 
  5650 ;; Return value:  Size  Location     Type
  5651 ;;                  2    0[BANK0 ] unsigned int 
  5652 ;; Registers used:
  5653 ;;		wreg, status,2, status,0
  5654 ;; Tracked objects:
  5655 ;;		On entry : 0/0
  5656 ;;		On exit  : 0/0
  5657 ;;		Unchanged: 0/0
  5658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5659 ;;      Params:         0       4       0       0       0
  5660 ;;      Locals:         0       1       0       0       0
  5661 ;;      Temps:          0       1       0       0       0
  5662 ;;      Totals:         0       6       0       0       0
  5663 ;;Total ram usage:        6 bytes
  5664 ;; Hardware stack levels used: 1
  5665 ;; Hardware stack levels required when called: 2
  5666 ;; This function calls:
  5667 ;;		Nothing
  5668 ;; This function is called by:
  5669 ;;		_fround
  5670 ;; This function uses a non-reentrant model
  5671 ;;
  5672                           
  5673                           
  5674                           ;psect for function ___lwmod
  5675  1933                     ___lwmod:
  5676  1933                     l3508:	
  5677                           ;incstack = 0
  5678                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  5679                           
  5680  1933  1283               	bcf	3,5	;RP0=0, select bank0
  5681  1934  1303               	bcf	3,6	;RP1=0, select bank0
  5682  1935  0820               	movf	___lwmod@divisor,w
  5683  1936  0421               	iorwf	___lwmod@divisor+1,w
  5684  1937  1903               	btfsc	3,2
  5685  1938  293A               	goto	u5731
  5686  1939  293B               	goto	u5730
  5687  193A                     u5731:
  5688  193A  296A               	goto	l3526
  5689  193B                     u5730:
  5690  193B                     l3510:
  5691  193B  01A5               	clrf	___lwmod@counter
  5692  193C  0AA5               	incf	___lwmod@counter,f
  5693  193D  2949               	goto	l3516
  5694  193E                     l3512:
  5695  193E  3001               	movlw	1
  5696  193F                     u5745:
  5697  193F  1003               	clrc
  5698  1940  0DA0               	rlf	___lwmod@divisor,f
  5699  1941  0DA1               	rlf	___lwmod@divisor+1,f
  5700  1942  3EFF               	addlw	-1
  5701  1943  1D03               	skipz
  5702  1944  293F               	goto	u5745
  5703  1945                     l3514:
  5704  1945  3001               	movlw	1
  5705  1946  00A4               	movwf	??___lwmod
  5706  1947  0824               	movf	??___lwmod,w
  5707  1948  07A5               	addwf	___lwmod@counter,f
  5708  1949                     l3516:
  5709  1949  1FA1               	btfss	___lwmod@divisor+1,7
  5710  194A  294C               	goto	u5751
  5711  194B  294D               	goto	u5750
  5712  194C                     u5751:
  5713  194C  293E               	goto	l3512
  5714  194D                     u5750:
  5715  194D                     l3518:
  5716  194D  0821               	movf	___lwmod@divisor+1,w
  5717  194E  0223               	subwf	___lwmod@dividend+1,w
  5718  194F  1D03               	skipz
  5719  1950  2953               	goto	u5765
  5720  1951  0820               	movf	___lwmod@divisor,w
  5721  1952  0222               	subwf	___lwmod@dividend,w
  5722  1953                     u5765:
  5723  1953  1C03               	skipc
  5724  1954  2956               	goto	u5761
  5725  1955  2957               	goto	u5760
  5726  1956                     u5761:
  5727  1956  295D               	goto	l3522
  5728  1957                     u5760:
  5729  1957                     l3520:
  5730  1957  0820               	movf	___lwmod@divisor,w
  5731  1958  02A2               	subwf	___lwmod@dividend,f
  5732  1959  0821               	movf	___lwmod@divisor+1,w
  5733  195A  1C03               	skipc
  5734  195B  03A3               	decf	___lwmod@dividend+1,f
  5735  195C  02A3               	subwf	___lwmod@dividend+1,f
  5736  195D                     l3522:
  5737  195D  3001               	movlw	1
  5738  195E                     u5775:
  5739  195E  1003               	clrc
  5740  195F  0CA1               	rrf	___lwmod@divisor+1,f
  5741  1960  0CA0               	rrf	___lwmod@divisor,f
  5742  1961  3EFF               	addlw	-1
  5743  1962  1D03               	skipz
  5744  1963  295E               	goto	u5775
  5745  1964                     l3524:
  5746  1964  3001               	movlw	1
  5747  1965  02A5               	subwf	___lwmod@counter,f
  5748  1966  1D03               	btfss	3,2
  5749  1967  2969               	goto	u5781
  5750  1968  296A               	goto	u5780
  5751  1969                     u5781:
  5752  1969  294D               	goto	l3518
  5753  196A                     u5780:
  5754  196A                     l3526:
  5755  196A  0823               	movf	___lwmod@dividend+1,w
  5756  196B  00A1               	movwf	?___lwmod+1
  5757  196C  0822               	movf	___lwmod@dividend,w
  5758  196D  00A0               	movwf	?___lwmod
  5759  196E                     l625:
  5760  196E  0008               	return
  5761  196F                     __end_of___lwmod:
  5762                           
  5763                           	psect	text8
  5764  19F2                     __ptext8:	
  5765 ;; *************** function ___lwdiv *****************
  5766 ;; Defined at:
  5767 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
  5768 ;; Parameters:    Size  Location     Type
  5769 ;;  divisor         2    6[BANK0 ] unsigned int 
  5770 ;;  dividend        2    8[BANK0 ] unsigned int 
  5771 ;; Auto vars:     Size  Location     Type
  5772 ;;  quotient        2   11[BANK0 ] unsigned int 
  5773 ;;  counter         1   13[BANK0 ] unsigned char 
  5774 ;; Return value:  Size  Location     Type
  5775 ;;                  2    6[BANK0 ] unsigned int 
  5776 ;; Registers used:
  5777 ;;		wreg, status,2, status,0
  5778 ;; Tracked objects:
  5779 ;;		On entry : 0/0
  5780 ;;		On exit  : 0/0
  5781 ;;		Unchanged: 0/0
  5782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5783 ;;      Params:         0       4       0       0       0
  5784 ;;      Locals:         0       3       0       0       0
  5785 ;;      Temps:          0       1       0       0       0
  5786 ;;      Totals:         0       8       0       0       0
  5787 ;;Total ram usage:        8 bytes
  5788 ;; Hardware stack levels used: 1
  5789 ;; Hardware stack levels required when called: 2
  5790 ;; This function calls:
  5791 ;;		Nothing
  5792 ;; This function is called by:
  5793 ;;		_fround
  5794 ;; This function uses a non-reentrant model
  5795 ;;
  5796                           
  5797                           
  5798                           ;psect for function ___lwdiv
  5799  19F2                     ___lwdiv:
  5800  19F2                     l2270:	
  5801                           ;incstack = 0
  5802                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5803                           
  5804  19F2  1283               	bcf	3,5	;RP0=0, select bank0
  5805  19F3  1303               	bcf	3,6	;RP1=0, select bank0
  5806  19F4  01AB               	clrf	___lwdiv@quotient
  5807  19F5  01AC               	clrf	___lwdiv@quotient+1
  5808  19F6                     l2272:
  5809  19F6  0826               	movf	___lwdiv@divisor,w
  5810  19F7  0427               	iorwf	___lwdiv@divisor+1,w
  5811  19F8  1903               	btfsc	3,2
  5812  19F9  29FB               	goto	u3051
  5813  19FA  29FC               	goto	u3050
  5814  19FB                     u3051:
  5815  19FB  2A33               	goto	l2292
  5816  19FC                     u3050:
  5817  19FC                     l2274:
  5818  19FC  01AD               	clrf	___lwdiv@counter
  5819  19FD  0AAD               	incf	___lwdiv@counter,f
  5820  19FE  2A0A               	goto	l2280
  5821  19FF                     l2276:
  5822  19FF  3001               	movlw	1
  5823  1A00                     u3065:
  5824  1A00  1003               	clrc
  5825  1A01  0DA6               	rlf	___lwdiv@divisor,f
  5826  1A02  0DA7               	rlf	___lwdiv@divisor+1,f
  5827  1A03  3EFF               	addlw	-1
  5828  1A04  1D03               	skipz
  5829  1A05  2A00               	goto	u3065
  5830  1A06                     l2278:
  5831  1A06  3001               	movlw	1
  5832  1A07  00AA               	movwf	??___lwdiv
  5833  1A08  082A               	movf	??___lwdiv,w
  5834  1A09  07AD               	addwf	___lwdiv@counter,f
  5835  1A0A                     l2280:
  5836  1A0A  1FA7               	btfss	___lwdiv@divisor+1,7
  5837  1A0B  2A0D               	goto	u3071
  5838  1A0C  2A0E               	goto	u3070
  5839  1A0D                     u3071:
  5840  1A0D  29FF               	goto	l2276
  5841  1A0E                     u3070:
  5842  1A0E                     l2282:
  5843  1A0E  3001               	movlw	1
  5844  1A0F                     u3085:
  5845  1A0F  1003               	clrc
  5846  1A10  0DAB               	rlf	___lwdiv@quotient,f
  5847  1A11  0DAC               	rlf	___lwdiv@quotient+1,f
  5848  1A12  3EFF               	addlw	-1
  5849  1A13  1D03               	skipz
  5850  1A14  2A0F               	goto	u3085
  5851  1A15  0827               	movf	___lwdiv@divisor+1,w
  5852  1A16  0229               	subwf	___lwdiv@dividend+1,w
  5853  1A17  1D03               	skipz
  5854  1A18  2A1B               	goto	u3095
  5855  1A19  0826               	movf	___lwdiv@divisor,w
  5856  1A1A  0228               	subwf	___lwdiv@dividend,w
  5857  1A1B                     u3095:
  5858  1A1B  1C03               	skipc
  5859  1A1C  2A1E               	goto	u3091
  5860  1A1D  2A1F               	goto	u3090
  5861  1A1E                     u3091:
  5862  1A1E  2A26               	goto	l2288
  5863  1A1F                     u3090:
  5864  1A1F                     l2284:
  5865  1A1F  0826               	movf	___lwdiv@divisor,w
  5866  1A20  02A8               	subwf	___lwdiv@dividend,f
  5867  1A21  0827               	movf	___lwdiv@divisor+1,w
  5868  1A22  1C03               	skipc
  5869  1A23  03A9               	decf	___lwdiv@dividend+1,f
  5870  1A24  02A9               	subwf	___lwdiv@dividend+1,f
  5871  1A25                     l2286:
  5872  1A25  142B               	bsf	___lwdiv@quotient,0
  5873  1A26                     l2288:
  5874  1A26  3001               	movlw	1
  5875  1A27                     u3105:
  5876  1A27  1003               	clrc
  5877  1A28  0CA7               	rrf	___lwdiv@divisor+1,f
  5878  1A29  0CA6               	rrf	___lwdiv@divisor,f
  5879  1A2A  3EFF               	addlw	-1
  5880  1A2B  1D03               	skipz
  5881  1A2C  2A27               	goto	u3105
  5882  1A2D                     l2290:
  5883  1A2D  3001               	movlw	1
  5884  1A2E  02AD               	subwf	___lwdiv@counter,f
  5885  1A2F  1D03               	btfss	3,2
  5886  1A30  2A32               	goto	u3111
  5887  1A31  2A33               	goto	u3110
  5888  1A32                     u3111:
  5889  1A32  2A0E               	goto	l2282
  5890  1A33                     u3110:
  5891  1A33                     l2292:
  5892  1A33  082C               	movf	___lwdiv@quotient+1,w
  5893  1A34  00A7               	movwf	?___lwdiv+1
  5894  1A35  082B               	movf	___lwdiv@quotient,w
  5895  1A36  00A6               	movwf	?___lwdiv
  5896  1A37                     l615:
  5897  1A37  0008               	return
  5898  1A38                     __end_of___lwdiv:
  5899                           
  5900                           	psect	text9
  5901  093C                     __ptext9:	
  5902 ;; *************** function ___flmul *****************
  5903 ;; Defined at:
  5904 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\sprcmul.c"
  5905 ;; Parameters:    Size  Location     Type
  5906 ;;  b               4   16[BANK0 ] unsigned int 
  5907 ;;  a               4   20[BANK0 ] unsigned int 
  5908 ;; Auto vars:     Size  Location     Type
  5909 ;;  prod            4   36[BANK0 ] struct .
  5910 ;;  grs             4   31[BANK0 ] unsigned long 
  5911 ;;  temp            2   40[BANK0 ] struct .
  5912 ;;  bexp            1   35[BANK0 ] unsigned char 
  5913 ;;  aexp            1   30[BANK0 ] unsigned char 
  5914 ;;  sign            1   29[BANK0 ] unsigned char 
  5915 ;; Return value:  Size  Location     Type
  5916 ;;                  4   16[BANK0 ] unsigned char 
  5917 ;; Registers used:
  5918 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5919 ;; Tracked objects:
  5920 ;;		On entry : 0/0
  5921 ;;		On exit  : 0/0
  5922 ;;		Unchanged: 0/0
  5923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5924 ;;      Params:         0       8       0       0       0
  5925 ;;      Locals:         0      13       0       0       0
  5926 ;;      Temps:          0       5       0       0       0
  5927 ;;      Totals:         0      26       0       0       0
  5928 ;;Total ram usage:       26 bytes
  5929 ;; Hardware stack levels used: 1
  5930 ;; Hardware stack levels required when called: 3
  5931 ;; This function calls:
  5932 ;;		__Umul8_16
  5933 ;; This function is called by:
  5934 ;;		_fround
  5935 ;;		_scale
  5936 ;;		_sprintf
  5937 ;; This function uses a non-reentrant model
  5938 ;;
  5939                           
  5940                           
  5941                           ;psect for function ___flmul
  5942  093C                     ___flmul:
  5943  093C                     l3724:	
  5944                           ;incstack = 0
  5945                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5946                           
  5947  093C  1283               	bcf	3,5	;RP0=0, select bank0
  5948  093D  1303               	bcf	3,6	;RP1=0, select bank0
  5949  093E  0833               	movf	___flmul@b+3,w
  5950  093F  3980               	andlw	128
  5951  0940  00B8               	movwf	??___flmul
  5952  0941  0838               	movf	??___flmul,w
  5953  0942  00BD               	movwf	___flmul@sign
  5954  0943                     l3726:
  5955  0943  0833               	movf	___flmul@b+3,w
  5956  0944  00B8               	movwf	??___flmul
  5957  0945  0738               	addwf	??___flmul,w
  5958  0946  00B9               	movwf	??___flmul+1
  5959  0947  0839               	movf	??___flmul+1,w
  5960  0948  00C3               	movwf	___flmul@bexp
  5961  0949                     l3728:
  5962  0949  1FB2               	btfss	___flmul@b+2,7
  5963  094A  294C               	goto	u6251
  5964  094B  294D               	goto	u6250
  5965  094C                     u6251:
  5966  094C  294E               	goto	l3732
  5967  094D                     u6250:
  5968  094D                     l3730:
  5969  094D  1443               	bsf	___flmul@bexp,0
  5970  094E                     l3732:
  5971  094E  0843               	movf	___flmul@bexp,w
  5972  094F  1903               	btfsc	3,2
  5973  0950  2952               	goto	u6261
  5974  0951  2953               	goto	u6260
  5975  0952                     u6261:
  5976  0952  2962               	goto	l3740
  5977  0953                     u6260:
  5978  0953                     l3734:
  5979  0953  0A43               	incf	___flmul@bexp,w
  5980  0954  1D03               	btfss	3,2
  5981  0955  2957               	goto	u6271
  5982  0956  2958               	goto	u6270
  5983  0957                     u6271:
  5984  0957  2960               	goto	l3738
  5985  0958                     u6270:
  5986  0958                     l3736:
  5987  0958  3000               	movlw	0
  5988  0959  00B3               	movwf	___flmul@b+3
  5989  095A  3000               	movlw	0
  5990  095B  00B2               	movwf	___flmul@b+2
  5991  095C  3000               	movlw	0
  5992  095D  00B1               	movwf	___flmul@b+1
  5993  095E  3000               	movlw	0
  5994  095F  00B0               	movwf	___flmul@b
  5995  0960                     l3738:
  5996  0960  17B2               	bsf	___flmul@b+2,7
  5997  0961  296A               	goto	l3742
  5998  0962                     l3740:
  5999  0962  3000               	movlw	0
  6000  0963  00B3               	movwf	___flmul@b+3
  6001  0964  3000               	movlw	0
  6002  0965  00B2               	movwf	___flmul@b+2
  6003  0966  3000               	movlw	0
  6004  0967  00B1               	movwf	___flmul@b+1
  6005  0968  3000               	movlw	0
  6006  0969  00B0               	movwf	___flmul@b
  6007  096A                     l3742:
  6008  096A  0837               	movf	___flmul@a+3,w
  6009  096B  3980               	andlw	128
  6010  096C  00B8               	movwf	??___flmul
  6011  096D  0838               	movf	??___flmul,w
  6012  096E  06BD               	xorwf	___flmul@sign,f
  6013  096F                     l3744:
  6014  096F  0837               	movf	___flmul@a+3,w
  6015  0970  00B8               	movwf	??___flmul
  6016  0971  0738               	addwf	??___flmul,w
  6017  0972  00B9               	movwf	??___flmul+1
  6018  0973  0839               	movf	??___flmul+1,w
  6019  0974  00BE               	movwf	___flmul@aexp
  6020  0975                     l3746:
  6021  0975  1FB6               	btfss	___flmul@a+2,7
  6022  0976  2978               	goto	u6281
  6023  0977  2979               	goto	u6280
  6024  0978                     u6281:
  6025  0978  297A               	goto	l3750
  6026  0979                     u6280:
  6027  0979                     l3748:
  6028  0979  143E               	bsf	___flmul@aexp,0
  6029  097A                     l3750:
  6030  097A  083E               	movf	___flmul@aexp,w
  6031  097B  1903               	btfsc	3,2
  6032  097C  297E               	goto	u6291
  6033  097D  297F               	goto	u6290
  6034  097E                     u6291:
  6035  097E  298E               	goto	l3758
  6036  097F                     u6290:
  6037  097F                     l3752:
  6038  097F  0A3E               	incf	___flmul@aexp,w
  6039  0980  1D03               	btfss	3,2
  6040  0981  2983               	goto	u6301
  6041  0982  2984               	goto	u6300
  6042  0983                     u6301:
  6043  0983  298C               	goto	l3756
  6044  0984                     u6300:
  6045  0984                     l3754:
  6046  0984  3000               	movlw	0
  6047  0985  00B7               	movwf	___flmul@a+3
  6048  0986  3000               	movlw	0
  6049  0987  00B6               	movwf	___flmul@a+2
  6050  0988  3000               	movlw	0
  6051  0989  00B5               	movwf	___flmul@a+1
  6052  098A  3000               	movlw	0
  6053  098B  00B4               	movwf	___flmul@a
  6054  098C                     l3756:
  6055  098C  17B6               	bsf	___flmul@a+2,7
  6056  098D  2996               	goto	l3760
  6057  098E                     l3758:
  6058  098E  3000               	movlw	0
  6059  098F  00B7               	movwf	___flmul@a+3
  6060  0990  3000               	movlw	0
  6061  0991  00B6               	movwf	___flmul@a+2
  6062  0992  3000               	movlw	0
  6063  0993  00B5               	movwf	___flmul@a+1
  6064  0994  3000               	movlw	0
  6065  0995  00B4               	movwf	___flmul@a
  6066  0996                     l3760:
  6067  0996  083E               	movf	___flmul@aexp,w
  6068  0997  1903               	btfsc	3,2
  6069  0998  299A               	goto	u6311
  6070  0999  299B               	goto	u6310
  6071  099A                     u6311:
  6072  099A  29A0               	goto	l3764
  6073  099B                     u6310:
  6074  099B                     l3762:
  6075  099B  0843               	movf	___flmul@bexp,w
  6076  099C  1D03               	btfss	3,2
  6077  099D  299F               	goto	u6321
  6078  099E  29A0               	goto	u6320
  6079  099F                     u6321:
  6080  099F  29A9               	goto	l3768
  6081  09A0                     u6320:
  6082  09A0                     l3764:
  6083  09A0  3000               	movlw	0
  6084  09A1  00B3               	movwf	?___flmul+3
  6085  09A2  3000               	movlw	0
  6086  09A3  00B2               	movwf	?___flmul+2
  6087  09A4  3000               	movlw	0
  6088  09A5  00B1               	movwf	?___flmul+1
  6089  09A6  3000               	movlw	0
  6090  09A7  00B0               	movwf	?___flmul
  6091  09A8  2C9C               	goto	l732
  6092  09A9                     l3768:
  6093  09A9  0830               	movf	___flmul@b,w
  6094  09AA  00B8               	movwf	??___flmul
  6095  09AB  0838               	movf	??___flmul,w
  6096  09AC  00A0               	movwf	__Umul8_16@multiplicand
  6097  09AD  0836               	movf	___flmul@a+2,w
  6098  09AE  160A  158A  210A  120A  158A  	fcall	__Umul8_16
  6099  09B3  1283               	bcf	3,5	;RP0=0, select bank0
  6100  09B4  1303               	bcf	3,6	;RP1=0, select bank0
  6101  09B5  0821               	movf	?__Umul8_16+1,w
  6102  09B6  00C9               	movwf	___flmul@temp+1
  6103  09B7  0820               	movf	?__Umul8_16,w
  6104  09B8  00C8               	movwf	___flmul@temp
  6105  09B9                     l3770:
  6106  09B9  0848               	movf	___flmul@temp,w
  6107  09BA  00B8               	movwf	??___flmul
  6108  09BB  01B9               	clrf	??___flmul+1
  6109  09BC  01BA               	clrf	??___flmul+2
  6110  09BD  01BB               	clrf	??___flmul+3
  6111  09BE  083B               	movf	??___flmul+3,w
  6112  09BF  00C2               	movwf	___flmul@grs+3
  6113  09C0  083A               	movf	??___flmul+2,w
  6114  09C1  00C1               	movwf	___flmul@grs+2
  6115  09C2  0839               	movf	??___flmul+1,w
  6116  09C3  00C0               	movwf	___flmul@grs+1
  6117  09C4  0838               	movf	??___flmul,w
  6118  09C5  00BF               	movwf	___flmul@grs
  6119  09C6                     l3772:
  6120  09C6  0849               	movf	___flmul@temp+1,w
  6121  09C7  00B8               	movwf	??___flmul
  6122  09C8  01B9               	clrf	??___flmul+1
  6123  09C9  01BA               	clrf	??___flmul+2
  6124  09CA  01BB               	clrf	??___flmul+3
  6125  09CB  083B               	movf	??___flmul+3,w
  6126  09CC  00C7               	movwf	___flmul@prod+3
  6127  09CD  083A               	movf	??___flmul+2,w
  6128  09CE  00C6               	movwf	___flmul@prod+2
  6129  09CF  0839               	movf	??___flmul+1,w
  6130  09D0  00C5               	movwf	___flmul@prod+1
  6131  09D1  0838               	movf	??___flmul,w
  6132  09D2  00C4               	movwf	___flmul@prod
  6133  09D3  0831               	movf	___flmul@b+1,w
  6134  09D4  00B8               	movwf	??___flmul
  6135  09D5  0838               	movf	??___flmul,w
  6136  09D6  00A0               	movwf	__Umul8_16@multiplicand
  6137  09D7  0835               	movf	___flmul@a+1,w
  6138  09D8  160A  158A  210A  120A  158A  	fcall	__Umul8_16
  6139  09DD  1283               	bcf	3,5	;RP0=0, select bank0
  6140  09DE  1303               	bcf	3,6	;RP1=0, select bank0
  6141  09DF  0821               	movf	?__Umul8_16+1,w
  6142  09E0  00C9               	movwf	___flmul@temp+1
  6143  09E1  0820               	movf	?__Umul8_16,w
  6144  09E2  00C8               	movwf	___flmul@temp
  6145  09E3                     l3774:
  6146  09E3  0848               	movf	___flmul@temp,w
  6147  09E4  00B8               	movwf	??___flmul
  6148  09E5  01B9               	clrf	??___flmul+1
  6149  09E6  01BA               	clrf	??___flmul+2
  6150  09E7  01BB               	clrf	??___flmul+3
  6151  09E8  0838               	movf	??___flmul,w
  6152  09E9  07BF               	addwf	___flmul@grs,f
  6153  09EA  0839               	movf	??___flmul+1,w
  6154  09EB  1103               	clrz
  6155  09EC  1803               	skipnc
  6156  09ED  3E01               	addlw	1
  6157  09EE  1903               	skipnz
  6158  09EF  29F1               	goto	u6331
  6159  09F0  07C0               	addwf	___flmul@grs+1,f
  6160  09F1                     u6331:
  6161  09F1  083A               	movf	??___flmul+2,w
  6162  09F2  1103               	clrz
  6163  09F3  1803               	skipnc
  6164  09F4  3E01               	addlw	1
  6165  09F5  1903               	skipnz
  6166  09F6  29F8               	goto	u6332
  6167  09F7  07C1               	addwf	___flmul@grs+2,f
  6168  09F8                     u6332:
  6169  09F8  083B               	movf	??___flmul+3,w
  6170  09F9  1103               	clrz
  6171  09FA  1803               	skipnc
  6172  09FB  3E01               	addlw	1
  6173  09FC  1903               	skipnz
  6174  09FD  29FF               	goto	u6333
  6175  09FE  07C2               	addwf	___flmul@grs+3,f
  6176  09FF                     u6333:
  6177  09FF                     l3776:
  6178  09FF  0849               	movf	___flmul@temp+1,w
  6179  0A00  00B8               	movwf	??___flmul
  6180  0A01  01B9               	clrf	??___flmul+1
  6181  0A02  01BA               	clrf	??___flmul+2
  6182  0A03  01BB               	clrf	??___flmul+3
  6183  0A04  0838               	movf	??___flmul,w
  6184  0A05  07C4               	addwf	___flmul@prod,f
  6185  0A06  0839               	movf	??___flmul+1,w
  6186  0A07  1103               	clrz
  6187  0A08  1803               	skipnc
  6188  0A09  3E01               	addlw	1
  6189  0A0A  1903               	skipnz
  6190  0A0B  2A0D               	goto	u6341
  6191  0A0C  07C5               	addwf	___flmul@prod+1,f
  6192  0A0D                     u6341:
  6193  0A0D  083A               	movf	??___flmul+2,w
  6194  0A0E  1103               	clrz
  6195  0A0F  1803               	skipnc
  6196  0A10  3E01               	addlw	1
  6197  0A11  1903               	skipnz
  6198  0A12  2A14               	goto	u6342
  6199  0A13  07C6               	addwf	___flmul@prod+2,f
  6200  0A14                     u6342:
  6201  0A14  083B               	movf	??___flmul+3,w
  6202  0A15  1103               	clrz
  6203  0A16  1803               	skipnc
  6204  0A17  3E01               	addlw	1
  6205  0A18  1903               	skipnz
  6206  0A19  2A1B               	goto	u6343
  6207  0A1A  07C7               	addwf	___flmul@prod+3,f
  6208  0A1B                     u6343:
  6209  0A1B  0832               	movf	___flmul@b+2,w
  6210  0A1C  00B8               	movwf	??___flmul
  6211  0A1D  0838               	movf	??___flmul,w
  6212  0A1E  00A0               	movwf	__Umul8_16@multiplicand
  6213  0A1F  0834               	movf	___flmul@a,w
  6214  0A20  160A  158A  210A  120A  158A  	fcall	__Umul8_16
  6215  0A25  1283               	bcf	3,5	;RP0=0, select bank0
  6216  0A26  1303               	bcf	3,6	;RP1=0, select bank0
  6217  0A27  0821               	movf	?__Umul8_16+1,w
  6218  0A28  00C9               	movwf	___flmul@temp+1
  6219  0A29  0820               	movf	?__Umul8_16,w
  6220  0A2A  00C8               	movwf	___flmul@temp
  6221  0A2B                     l3778:
  6222  0A2B  0848               	movf	___flmul@temp,w
  6223  0A2C  00B8               	movwf	??___flmul
  6224  0A2D  01B9               	clrf	??___flmul+1
  6225  0A2E  01BA               	clrf	??___flmul+2
  6226  0A2F  01BB               	clrf	??___flmul+3
  6227  0A30  0838               	movf	??___flmul,w
  6228  0A31  07BF               	addwf	___flmul@grs,f
  6229  0A32  0839               	movf	??___flmul+1,w
  6230  0A33  1103               	clrz
  6231  0A34  1803               	skipnc
  6232  0A35  3E01               	addlw	1
  6233  0A36  1903               	skipnz
  6234  0A37  2A39               	goto	u6351
  6235  0A38  07C0               	addwf	___flmul@grs+1,f
  6236  0A39                     u6351:
  6237  0A39  083A               	movf	??___flmul+2,w
  6238  0A3A  1103               	clrz
  6239  0A3B  1803               	skipnc
  6240  0A3C  3E01               	addlw	1
  6241  0A3D  1903               	skipnz
  6242  0A3E  2A40               	goto	u6352
  6243  0A3F  07C1               	addwf	___flmul@grs+2,f
  6244  0A40                     u6352:
  6245  0A40  083B               	movf	??___flmul+3,w
  6246  0A41  1103               	clrz
  6247  0A42  1803               	skipnc
  6248  0A43  3E01               	addlw	1
  6249  0A44  1903               	skipnz
  6250  0A45  2A47               	goto	u6353
  6251  0A46  07C2               	addwf	___flmul@grs+3,f
  6252  0A47                     u6353:
  6253  0A47                     l3780:
  6254  0A47  0849               	movf	___flmul@temp+1,w
  6255  0A48  00B8               	movwf	??___flmul
  6256  0A49  01B9               	clrf	??___flmul+1
  6257  0A4A  01BA               	clrf	??___flmul+2
  6258  0A4B  01BB               	clrf	??___flmul+3
  6259  0A4C  0838               	movf	??___flmul,w
  6260  0A4D  07C4               	addwf	___flmul@prod,f
  6261  0A4E  0839               	movf	??___flmul+1,w
  6262  0A4F  1103               	clrz
  6263  0A50  1803               	skipnc
  6264  0A51  3E01               	addlw	1
  6265  0A52  1903               	skipnz
  6266  0A53  2A55               	goto	u6361
  6267  0A54  07C5               	addwf	___flmul@prod+1,f
  6268  0A55                     u6361:
  6269  0A55  083A               	movf	??___flmul+2,w
  6270  0A56  1103               	clrz
  6271  0A57  1803               	skipnc
  6272  0A58  3E01               	addlw	1
  6273  0A59  1903               	skipnz
  6274  0A5A  2A5C               	goto	u6362
  6275  0A5B  07C6               	addwf	___flmul@prod+2,f
  6276  0A5C                     u6362:
  6277  0A5C  083B               	movf	??___flmul+3,w
  6278  0A5D  1103               	clrz
  6279  0A5E  1803               	skipnc
  6280  0A5F  3E01               	addlw	1
  6281  0A60  1903               	skipnz
  6282  0A61  2A63               	goto	u6363
  6283  0A62  07C7               	addwf	___flmul@prod+3,f
  6284  0A63                     u6363:
  6285  0A63                     l3782:
  6286  0A63  3008               	movlw	8
  6287  0A64  00B8               	movwf	??___flmul
  6288  0A65                     u6375:
  6289  0A65  1003               	clrc
  6290  0A66  0DBF               	rlf	___flmul@grs,f
  6291  0A67  0DC0               	rlf	___flmul@grs+1,f
  6292  0A68  0DC1               	rlf	___flmul@grs+2,f
  6293  0A69  0DC2               	rlf	___flmul@grs+3,f
  6294  0A6A  0BB8               	decfsz	??___flmul,f
  6295  0A6B  2A65               	goto	u6375
  6296  0A6C                     l3784:
  6297  0A6C  0831               	movf	___flmul@b+1,w
  6298  0A6D  00B8               	movwf	??___flmul
  6299  0A6E  0838               	movf	??___flmul,w
  6300  0A6F  00A0               	movwf	__Umul8_16@multiplicand
  6301  0A70  0834               	movf	___flmul@a,w
  6302  0A71  160A  158A  210A  120A  158A  	fcall	__Umul8_16
  6303  0A76  1283               	bcf	3,5	;RP0=0, select bank0
  6304  0A77  1303               	bcf	3,6	;RP1=0, select bank0
  6305  0A78  0821               	movf	?__Umul8_16+1,w
  6306  0A79  00C9               	movwf	___flmul@temp+1
  6307  0A7A  0820               	movf	?__Umul8_16,w
  6308  0A7B  00C8               	movwf	___flmul@temp
  6309  0A7C                     l3786:
  6310  0A7C  0848               	movf	___flmul@temp,w
  6311  0A7D  00B8               	movwf	??___flmul
  6312  0A7E  0849               	movf	___flmul@temp+1,w
  6313  0A7F  00B9               	movwf	??___flmul+1
  6314  0A80  01BA               	clrf	??___flmul+2
  6315  0A81  01BB               	clrf	??___flmul+3
  6316  0A82  0838               	movf	??___flmul,w
  6317  0A83  07BF               	addwf	___flmul@grs,f
  6318  0A84  0839               	movf	??___flmul+1,w
  6319  0A85  1103               	clrz
  6320  0A86  1803               	skipnc
  6321  0A87  3E01               	addlw	1
  6322  0A88  1903               	skipnz
  6323  0A89  2A8B               	goto	u6381
  6324  0A8A  07C0               	addwf	___flmul@grs+1,f
  6325  0A8B                     u6381:
  6326  0A8B  083A               	movf	??___flmul+2,w
  6327  0A8C  1103               	clrz
  6328  0A8D  1803               	skipnc
  6329  0A8E  3E01               	addlw	1
  6330  0A8F  1903               	skipnz
  6331  0A90  2A92               	goto	u6382
  6332  0A91  07C1               	addwf	___flmul@grs+2,f
  6333  0A92                     u6382:
  6334  0A92  083B               	movf	??___flmul+3,w
  6335  0A93  1103               	clrz
  6336  0A94  1803               	skipnc
  6337  0A95  3E01               	addlw	1
  6338  0A96  1903               	skipnz
  6339  0A97  2A99               	goto	u6383
  6340  0A98  07C2               	addwf	___flmul@grs+3,f
  6341  0A99                     u6383:
  6342  0A99                     l3788:
  6343  0A99  0830               	movf	___flmul@b,w
  6344  0A9A  00B8               	movwf	??___flmul
  6345  0A9B  0838               	movf	??___flmul,w
  6346  0A9C  00A0               	movwf	__Umul8_16@multiplicand
  6347  0A9D  0835               	movf	___flmul@a+1,w
  6348  0A9E  160A  158A  210A  120A  158A  	fcall	__Umul8_16
  6349  0AA3  1283               	bcf	3,5	;RP0=0, select bank0
  6350  0AA4  1303               	bcf	3,6	;RP1=0, select bank0
  6351  0AA5  0821               	movf	?__Umul8_16+1,w
  6352  0AA6  00C9               	movwf	___flmul@temp+1
  6353  0AA7  0820               	movf	?__Umul8_16,w
  6354  0AA8  00C8               	movwf	___flmul@temp
  6355  0AA9                     l3790:
  6356  0AA9  0848               	movf	___flmul@temp,w
  6357  0AAA  00B8               	movwf	??___flmul
  6358  0AAB  0849               	movf	___flmul@temp+1,w
  6359  0AAC  00B9               	movwf	??___flmul+1
  6360  0AAD  01BA               	clrf	??___flmul+2
  6361  0AAE  01BB               	clrf	??___flmul+3
  6362  0AAF  0838               	movf	??___flmul,w
  6363  0AB0  07BF               	addwf	___flmul@grs,f
  6364  0AB1  0839               	movf	??___flmul+1,w
  6365  0AB2  1103               	clrz
  6366  0AB3  1803               	skipnc
  6367  0AB4  3E01               	addlw	1
  6368  0AB5  1903               	skipnz
  6369  0AB6  2AB8               	goto	u6391
  6370  0AB7  07C0               	addwf	___flmul@grs+1,f
  6371  0AB8                     u6391:
  6372  0AB8  083A               	movf	??___flmul+2,w
  6373  0AB9  1103               	clrz
  6374  0ABA  1803               	skipnc
  6375  0ABB  3E01               	addlw	1
  6376  0ABC  1903               	skipnz
  6377  0ABD  2ABF               	goto	u6392
  6378  0ABE  07C1               	addwf	___flmul@grs+2,f
  6379  0ABF                     u6392:
  6380  0ABF  083B               	movf	??___flmul+3,w
  6381  0AC0  1103               	clrz
  6382  0AC1  1803               	skipnc
  6383  0AC2  3E01               	addlw	1
  6384  0AC3  1903               	skipnz
  6385  0AC4  2AC6               	goto	u6393
  6386  0AC5  07C2               	addwf	___flmul@grs+3,f
  6387  0AC6                     u6393:
  6388  0AC6                     l3792:
  6389  0AC6  3008               	movlw	8
  6390  0AC7  00B8               	movwf	??___flmul
  6391  0AC8                     u6405:
  6392  0AC8  1003               	clrc
  6393  0AC9  0DBF               	rlf	___flmul@grs,f
  6394  0ACA  0DC0               	rlf	___flmul@grs+1,f
  6395  0ACB  0DC1               	rlf	___flmul@grs+2,f
  6396  0ACC  0DC2               	rlf	___flmul@grs+3,f
  6397  0ACD  0BB8               	decfsz	??___flmul,f
  6398  0ACE  2AC8               	goto	u6405
  6399  0ACF  0830               	movf	___flmul@b,w
  6400  0AD0  00B8               	movwf	??___flmul
  6401  0AD1  0838               	movf	??___flmul,w
  6402  0AD2  00A0               	movwf	__Umul8_16@multiplicand
  6403  0AD3  0834               	movf	___flmul@a,w
  6404  0AD4  160A  158A  210A  120A  158A  	fcall	__Umul8_16
  6405  0AD9  1283               	bcf	3,5	;RP0=0, select bank0
  6406  0ADA  1303               	bcf	3,6	;RP1=0, select bank0
  6407  0ADB  0821               	movf	?__Umul8_16+1,w
  6408  0ADC  00C9               	movwf	___flmul@temp+1
  6409  0ADD  0820               	movf	?__Umul8_16,w
  6410  0ADE  00C8               	movwf	___flmul@temp
  6411  0ADF                     l3794:
  6412  0ADF  0848               	movf	___flmul@temp,w
  6413  0AE0  00B8               	movwf	??___flmul
  6414  0AE1  0849               	movf	___flmul@temp+1,w
  6415  0AE2  00B9               	movwf	??___flmul+1
  6416  0AE3  01BA               	clrf	??___flmul+2
  6417  0AE4  01BB               	clrf	??___flmul+3
  6418  0AE5  0838               	movf	??___flmul,w
  6419  0AE6  07BF               	addwf	___flmul@grs,f
  6420  0AE7  0839               	movf	??___flmul+1,w
  6421  0AE8  1103               	clrz
  6422  0AE9  1803               	skipnc
  6423  0AEA  3E01               	addlw	1
  6424  0AEB  1903               	skipnz
  6425  0AEC  2AEE               	goto	u6411
  6426  0AED  07C0               	addwf	___flmul@grs+1,f
  6427  0AEE                     u6411:
  6428  0AEE  083A               	movf	??___flmul+2,w
  6429  0AEF  1103               	clrz
  6430  0AF0  1803               	skipnc
  6431  0AF1  3E01               	addlw	1
  6432  0AF2  1903               	skipnz
  6433  0AF3  2AF5               	goto	u6412
  6434  0AF4  07C1               	addwf	___flmul@grs+2,f
  6435  0AF5                     u6412:
  6436  0AF5  083B               	movf	??___flmul+3,w
  6437  0AF6  1103               	clrz
  6438  0AF7  1803               	skipnc
  6439  0AF8  3E01               	addlw	1
  6440  0AF9  1903               	skipnz
  6441  0AFA  2AFC               	goto	u6413
  6442  0AFB  07C2               	addwf	___flmul@grs+3,f
  6443  0AFC                     u6413:
  6444  0AFC                     l3796:
  6445  0AFC  0831               	movf	___flmul@b+1,w
  6446  0AFD  00B8               	movwf	??___flmul
  6447  0AFE  0838               	movf	??___flmul,w
  6448  0AFF  00A0               	movwf	__Umul8_16@multiplicand
  6449  0B00  0836               	movf	___flmul@a+2,w
  6450  0B01  160A  158A  210A  120A  158A  	fcall	__Umul8_16
  6451  0B06  1283               	bcf	3,5	;RP0=0, select bank0
  6452  0B07  1303               	bcf	3,6	;RP1=0, select bank0
  6453  0B08  0821               	movf	?__Umul8_16+1,w
  6454  0B09  00C9               	movwf	___flmul@temp+1
  6455  0B0A  0820               	movf	?__Umul8_16,w
  6456  0B0B  00C8               	movwf	___flmul@temp
  6457  0B0C  0848               	movf	___flmul@temp,w
  6458  0B0D  00B8               	movwf	??___flmul
  6459  0B0E  0849               	movf	___flmul@temp+1,w
  6460  0B0F  00B9               	movwf	??___flmul+1
  6461  0B10  01BA               	clrf	??___flmul+2
  6462  0B11  01BB               	clrf	??___flmul+3
  6463  0B12  0838               	movf	??___flmul,w
  6464  0B13  07C4               	addwf	___flmul@prod,f
  6465  0B14  0839               	movf	??___flmul+1,w
  6466  0B15  1103               	clrz
  6467  0B16  1803               	skipnc
  6468  0B17  3E01               	addlw	1
  6469  0B18  1903               	skipnz
  6470  0B19  2B1B               	goto	u6421
  6471  0B1A  07C5               	addwf	___flmul@prod+1,f
  6472  0B1B                     u6421:
  6473  0B1B  083A               	movf	??___flmul+2,w
  6474  0B1C  1103               	clrz
  6475  0B1D  1803               	skipnc
  6476  0B1E  3E01               	addlw	1
  6477  0B1F  1903               	skipnz
  6478  0B20  2B22               	goto	u6422
  6479  0B21  07C6               	addwf	___flmul@prod+2,f
  6480  0B22                     u6422:
  6481  0B22  083B               	movf	??___flmul+3,w
  6482  0B23  1103               	clrz
  6483  0B24  1803               	skipnc
  6484  0B25  3E01               	addlw	1
  6485  0B26  1903               	skipnz
  6486  0B27  2B29               	goto	u6423
  6487  0B28  07C7               	addwf	___flmul@prod+3,f
  6488  0B29                     u6423:
  6489  0B29                     l3798:
  6490  0B29  0832               	movf	___flmul@b+2,w
  6491  0B2A  00B8               	movwf	??___flmul
  6492  0B2B  0838               	movf	??___flmul,w
  6493  0B2C  00A0               	movwf	__Umul8_16@multiplicand
  6494  0B2D  0835               	movf	___flmul@a+1,w
  6495  0B2E  160A  158A  210A  120A  158A  	fcall	__Umul8_16
  6496  0B33  1283               	bcf	3,5	;RP0=0, select bank0
  6497  0B34  1303               	bcf	3,6	;RP1=0, select bank0
  6498  0B35  0821               	movf	?__Umul8_16+1,w
  6499  0B36  00C9               	movwf	___flmul@temp+1
  6500  0B37  0820               	movf	?__Umul8_16,w
  6501  0B38  00C8               	movwf	___flmul@temp
  6502  0B39                     l3800:
  6503  0B39  0848               	movf	___flmul@temp,w
  6504  0B3A  00B8               	movwf	??___flmul
  6505  0B3B  0849               	movf	___flmul@temp+1,w
  6506  0B3C  00B9               	movwf	??___flmul+1
  6507  0B3D  01BA               	clrf	??___flmul+2
  6508  0B3E  01BB               	clrf	??___flmul+3
  6509  0B3F  0838               	movf	??___flmul,w
  6510  0B40  07C4               	addwf	___flmul@prod,f
  6511  0B41  0839               	movf	??___flmul+1,w
  6512  0B42  1103               	clrz
  6513  0B43  1803               	skipnc
  6514  0B44  3E01               	addlw	1
  6515  0B45  1903               	skipnz
  6516  0B46  2B48               	goto	u6431
  6517  0B47  07C5               	addwf	___flmul@prod+1,f
  6518  0B48                     u6431:
  6519  0B48  083A               	movf	??___flmul+2,w
  6520  0B49  1103               	clrz
  6521  0B4A  1803               	skipnc
  6522  0B4B  3E01               	addlw	1
  6523  0B4C  1903               	skipnz
  6524  0B4D  2B4F               	goto	u6432
  6525  0B4E  07C6               	addwf	___flmul@prod+2,f
  6526  0B4F                     u6432:
  6527  0B4F  083B               	movf	??___flmul+3,w
  6528  0B50  1103               	clrz
  6529  0B51  1803               	skipnc
  6530  0B52  3E01               	addlw	1
  6531  0B53  1903               	skipnz
  6532  0B54  2B56               	goto	u6433
  6533  0B55  07C7               	addwf	___flmul@prod+3,f
  6534  0B56                     u6433:
  6535  0B56  0832               	movf	___flmul@b+2,w
  6536  0B57  00B8               	movwf	??___flmul
  6537  0B58  0838               	movf	??___flmul,w
  6538  0B59  00A0               	movwf	__Umul8_16@multiplicand
  6539  0B5A  0836               	movf	___flmul@a+2,w
  6540  0B5B  160A  158A  210A  120A  158A  	fcall	__Umul8_16
  6541  0B60  1283               	bcf	3,5	;RP0=0, select bank0
  6542  0B61  1303               	bcf	3,6	;RP1=0, select bank0
  6543  0B62  0821               	movf	?__Umul8_16+1,w
  6544  0B63  00C9               	movwf	___flmul@temp+1
  6545  0B64  0820               	movf	?__Umul8_16,w
  6546  0B65  00C8               	movwf	___flmul@temp
  6547  0B66                     l3802:
  6548  0B66  0848               	movf	___flmul@temp,w
  6549  0B67  00B8               	movwf	??___flmul
  6550  0B68  0849               	movf	___flmul@temp+1,w
  6551  0B69  00B9               	movwf	??___flmul+1
  6552  0B6A  01BA               	clrf	??___flmul+2
  6553  0B6B  01BB               	clrf	??___flmul+3
  6554  0B6C  3008               	movlw	8
  6555  0B6D                     u6445:
  6556  0B6D  1003               	clrc
  6557  0B6E  0DB8               	rlf	??___flmul,f
  6558  0B6F  0DB9               	rlf	??___flmul+1,f
  6559  0B70  0DBA               	rlf	??___flmul+2,f
  6560  0B71  0DBB               	rlf	??___flmul+3,f
  6561  0B72                     u6440:
  6562  0B72  3EFF               	addlw	-1
  6563  0B73  1D03               	skipz
  6564  0B74  2B6D               	goto	u6445
  6565  0B75  0838               	movf	??___flmul,w
  6566  0B76  07C4               	addwf	___flmul@prod,f
  6567  0B77  0839               	movf	??___flmul+1,w
  6568  0B78  1103               	clrz
  6569  0B79  1803               	skipnc
  6570  0B7A  3E01               	addlw	1
  6571  0B7B  1903               	skipnz
  6572  0B7C  2B7E               	goto	u6451
  6573  0B7D  07C5               	addwf	___flmul@prod+1,f
  6574  0B7E                     u6451:
  6575  0B7E  083A               	movf	??___flmul+2,w
  6576  0B7F  1103               	clrz
  6577  0B80  1803               	skipnc
  6578  0B81  3E01               	addlw	1
  6579  0B82  1903               	skipnz
  6580  0B83  2B85               	goto	u6452
  6581  0B84  07C6               	addwf	___flmul@prod+2,f
  6582  0B85                     u6452:
  6583  0B85  083B               	movf	??___flmul+3,w
  6584  0B86  1103               	clrz
  6585  0B87  1803               	skipnc
  6586  0B88  3E01               	addlw	1
  6587  0B89  1903               	skipnz
  6588  0B8A  2B8C               	goto	u6453
  6589  0B8B  07C7               	addwf	___flmul@prod+3,f
  6590  0B8C                     u6453:
  6591  0B8C                     l3804:
  6592  0B8C  083F               	movf	___flmul@grs,w
  6593  0B8D  00B8               	movwf	??___flmul
  6594  0B8E  0840               	movf	___flmul@grs+1,w
  6595  0B8F  00B9               	movwf	??___flmul+1
  6596  0B90  0841               	movf	___flmul@grs+2,w
  6597  0B91  00BA               	movwf	??___flmul+2
  6598  0B92  0842               	movf	___flmul@grs+3,w
  6599  0B93  00BB               	movwf	??___flmul+3
  6600  0B94  3018               	movlw	24
  6601  0B95                     u6465:
  6602  0B95  1003               	clrc
  6603  0B96  0CBB               	rrf	??___flmul+3,f
  6604  0B97  0CBA               	rrf	??___flmul+2,f
  6605  0B98  0CB9               	rrf	??___flmul+1,f
  6606  0B99  0CB8               	rrf	??___flmul,f
  6607  0B9A                     u6460:
  6608  0B9A  3EFF               	addlw	-1
  6609  0B9B  1D03               	skipz
  6610  0B9C  2B95               	goto	u6465
  6611  0B9D  0838               	movf	??___flmul,w
  6612  0B9E  07C4               	addwf	___flmul@prod,f
  6613  0B9F  0839               	movf	??___flmul+1,w
  6614  0BA0  1103               	clrz
  6615  0BA1  1803               	skipnc
  6616  0BA2  3E01               	addlw	1
  6617  0BA3  1903               	skipnz
  6618  0BA4  2BA6               	goto	u6471
  6619  0BA5  07C5               	addwf	___flmul@prod+1,f
  6620  0BA6                     u6471:
  6621  0BA6  083A               	movf	??___flmul+2,w
  6622  0BA7  1103               	clrz
  6623  0BA8  1803               	skipnc
  6624  0BA9  3E01               	addlw	1
  6625  0BAA  1903               	skipnz
  6626  0BAB  2BAD               	goto	u6472
  6627  0BAC  07C6               	addwf	___flmul@prod+2,f
  6628  0BAD                     u6472:
  6629  0BAD  083B               	movf	??___flmul+3,w
  6630  0BAE  1103               	clrz
  6631  0BAF  1803               	skipnc
  6632  0BB0  3E01               	addlw	1
  6633  0BB1  1903               	skipnz
  6634  0BB2  2BB4               	goto	u6473
  6635  0BB3  07C7               	addwf	___flmul@prod+3,f
  6636  0BB4                     u6473:
  6637  0BB4                     l3806:
  6638  0BB4  3008               	movlw	8
  6639  0BB5  00B8               	movwf	??___flmul
  6640  0BB6                     u6485:
  6641  0BB6  1003               	clrc
  6642  0BB7  0DBF               	rlf	___flmul@grs,f
  6643  0BB8  0DC0               	rlf	___flmul@grs+1,f
  6644  0BB9  0DC1               	rlf	___flmul@grs+2,f
  6645  0BBA  0DC2               	rlf	___flmul@grs+3,f
  6646  0BBB  0BB8               	decfsz	??___flmul,f
  6647  0BBC  2BB6               	goto	u6485
  6648  0BBD                     l3808:
  6649  0BBD  0843               	movf	___flmul@bexp,w
  6650  0BBE  073E               	addwf	___flmul@aexp,w
  6651  0BBF  00B8               	movwf	??___flmul
  6652  0BC0  01B9               	clrf	??___flmul+1
  6653  0BC1  0DB9               	rlf	??___flmul+1,f
  6654  0BC2  0838               	movf	??___flmul,w
  6655  0BC3  3E82               	addlw	130
  6656  0BC4  00C8               	movwf	___flmul@temp
  6657  0BC5  0839               	movf	??___flmul+1,w
  6658  0BC6  1803               	skipnc
  6659  0BC7  3E01               	addlw	1
  6660  0BC8  3EFF               	addlw	255
  6661  0BC9  00C9               	movwf	___flmul@temp+1
  6662  0BCA  2BE8               	goto	l3820
  6663  0BCB                     l3810:
  6664  0BCB  3001               	movlw	1
  6665  0BCC  00B8               	movwf	??___flmul
  6666  0BCD                     u6495:
  6667  0BCD  1003               	clrc
  6668  0BCE  0DC4               	rlf	___flmul@prod,f
  6669  0BCF  0DC5               	rlf	___flmul@prod+1,f
  6670  0BD0  0DC6               	rlf	___flmul@prod+2,f
  6671  0BD1  0DC7               	rlf	___flmul@prod+3,f
  6672  0BD2  0BB8               	decfsz	??___flmul,f
  6673  0BD3  2BCD               	goto	u6495
  6674  0BD4                     l3812:
  6675  0BD4  1FC2               	btfss	___flmul@grs+3,7
  6676  0BD5  2BD7               	goto	u6501
  6677  0BD6  2BD8               	goto	u6500
  6678  0BD7                     u6501:
  6679  0BD7  2BD9               	goto	l3816
  6680  0BD8                     u6500:
  6681  0BD8                     l3814:
  6682  0BD8  1444               	bsf	___flmul@prod,0
  6683  0BD9                     l3816:
  6684  0BD9  3001               	movlw	1
  6685  0BDA  00B8               	movwf	??___flmul
  6686  0BDB                     u6515:
  6687  0BDB  1003               	clrc
  6688  0BDC  0DBF               	rlf	___flmul@grs,f
  6689  0BDD  0DC0               	rlf	___flmul@grs+1,f
  6690  0BDE  0DC1               	rlf	___flmul@grs+2,f
  6691  0BDF  0DC2               	rlf	___flmul@grs+3,f
  6692  0BE0  0BB8               	decfsz	??___flmul,f
  6693  0BE1  2BDB               	goto	u6515
  6694  0BE2                     l3818:
  6695  0BE2  30FF               	movlw	255
  6696  0BE3  07C8               	addwf	___flmul@temp,f
  6697  0BE4  1803               	skipnc
  6698  0BE5  0AC9               	incf	___flmul@temp+1,f
  6699  0BE6  30FF               	movlw	255
  6700  0BE7  07C9               	addwf	___flmul@temp+1,f
  6701  0BE8                     l3820:
  6702  0BE8  1FC6               	btfss	___flmul@prod+2,7
  6703  0BE9  2BEB               	goto	u6521
  6704  0BEA  2BEC               	goto	u6520
  6705  0BEB                     u6521:
  6706  0BEB  2BCB               	goto	l3810
  6707  0BEC                     u6520:
  6708  0BEC                     l3822:
  6709  0BEC  01BE               	clrf	___flmul@aexp
  6710  0BED                     l3824:
  6711  0BED  1FC2               	btfss	___flmul@grs+3,7
  6712  0BEE  2BF0               	goto	u6531
  6713  0BEF  2BF1               	goto	u6530
  6714  0BF0                     u6531:
  6715  0BF0  2C0D               	goto	l3832
  6716  0BF1                     u6530:
  6717  0BF1                     l3826:
  6718  0BF1  30FF               	movlw	255
  6719  0BF2  053F               	andwf	___flmul@grs,w
  6720  0BF3  00B8               	movwf	??___flmul
  6721  0BF4  30FF               	movlw	255
  6722  0BF5  0540               	andwf	___flmul@grs+1,w
  6723  0BF6  00B9               	movwf	??___flmul+1
  6724  0BF7  30FF               	movlw	255
  6725  0BF8  0541               	andwf	___flmul@grs+2,w
  6726  0BF9  00BA               	movwf	??___flmul+2
  6727  0BFA  307F               	movlw	127
  6728  0BFB  0542               	andwf	___flmul@grs+3,w
  6729  0BFC  00BB               	movwf	??___flmul+3
  6730  0BFD  083B               	movf	??___flmul+3,w
  6731  0BFE  043A               	iorwf	??___flmul+2,w
  6732  0BFF  0439               	iorwf	??___flmul+1,w
  6733  0C00  0438               	iorwf	??___flmul,w
  6734  0C01  1903               	skipnz
  6735  0C02  2C04               	goto	u6541
  6736  0C03  2C05               	goto	u6540
  6737  0C04                     u6541:
  6738  0C04  2C08               	goto	l738
  6739  0C05                     u6540:
  6740  0C05                     l3828:
  6741  0C05  01BE               	clrf	___flmul@aexp
  6742  0C06  0ABE               	incf	___flmul@aexp,f
  6743  0C07  2C0D               	goto	l3832
  6744  0C08                     l738:
  6745  0C08  1C44               	btfss	___flmul@prod,0
  6746  0C09  2C0B               	goto	u6551
  6747  0C0A  2C0C               	goto	u6550
  6748  0C0B                     u6551:
  6749  0C0B  2C0D               	goto	l3832
  6750  0C0C                     u6550:
  6751  0C0C  2C05               	goto	l3828
  6752  0C0D                     l3832:
  6753  0C0D  083E               	movf	___flmul@aexp,w
  6754  0C0E  1903               	btfsc	3,2
  6755  0C0F  2C11               	goto	u6561
  6756  0C10  2C12               	goto	u6560
  6757  0C11                     u6561:
  6758  0C11  2C43               	goto	l3842
  6759  0C12                     u6560:
  6760  0C12                     l3834:
  6761  0C12  3001               	movlw	1
  6762  0C13  07C4               	addwf	___flmul@prod,f
  6763  0C14  3000               	movlw	0
  6764  0C15  1803               	skipnc
  6765  0C16  3001               	movlw	1
  6766  0C17  07C5               	addwf	___flmul@prod+1,f
  6767  0C18  3000               	movlw	0
  6768  0C19  1803               	skipnc
  6769  0C1A  3001               	movlw	1
  6770  0C1B  07C6               	addwf	___flmul@prod+2,f
  6771  0C1C  3000               	movlw	0
  6772  0C1D  1803               	skipnc
  6773  0C1E  3001               	movlw	1
  6774  0C1F  07C7               	addwf	___flmul@prod+3,f
  6775  0C20                     l3836:
  6776  0C20  1C47               	btfss	___flmul@prod+3,0
  6777  0C21  2C23               	goto	u6571
  6778  0C22  2C24               	goto	u6570
  6779  0C23                     u6571:
  6780  0C23  2C43               	goto	l3842
  6781  0C24                     u6570:
  6782  0C24                     l3838:
  6783  0C24  0844               	movf	___flmul@prod,w
  6784  0C25  00B8               	movwf	??___flmul
  6785  0C26  0845               	movf	___flmul@prod+1,w
  6786  0C27  00B9               	movwf	??___flmul+1
  6787  0C28  0846               	movf	___flmul@prod+2,w
  6788  0C29  00BA               	movwf	??___flmul+2
  6789  0C2A  0847               	movf	___flmul@prod+3,w
  6790  0C2B  00BB               	movwf	??___flmul+3
  6791  0C2C  3001               	movlw	1
  6792  0C2D  00BC               	movwf	??___flmul+4
  6793  0C2E                     u6585:
  6794  0C2E  0D3B               	rlf	??___flmul+3,w
  6795  0C2F  0CBB               	rrf	??___flmul+3,f
  6796  0C30  0CBA               	rrf	??___flmul+2,f
  6797  0C31  0CB9               	rrf	??___flmul+1,f
  6798  0C32  0CB8               	rrf	??___flmul,f
  6799  0C33                     u6580:
  6800  0C33  0BBC               	decfsz	??___flmul+4,f
  6801  0C34  2C2E               	goto	u6585
  6802  0C35  083B               	movf	??___flmul+3,w
  6803  0C36  00C7               	movwf	___flmul@prod+3
  6804  0C37  083A               	movf	??___flmul+2,w
  6805  0C38  00C6               	movwf	___flmul@prod+2
  6806  0C39  0839               	movf	??___flmul+1,w
  6807  0C3A  00C5               	movwf	___flmul@prod+1
  6808  0C3B  0838               	movf	??___flmul,w
  6809  0C3C  00C4               	movwf	___flmul@prod
  6810  0C3D                     l3840:
  6811  0C3D  3001               	movlw	1
  6812  0C3E  07C8               	addwf	___flmul@temp,f
  6813  0C3F  1803               	skipnc
  6814  0C40  0AC9               	incf	___flmul@temp+1,f
  6815  0C41  3000               	movlw	0
  6816  0C42  07C9               	addwf	___flmul@temp+1,f
  6817  0C43                     l3842:
  6818  0C43  0849               	movf	___flmul@temp+1,w
  6819  0C44  3A80               	xorlw	128
  6820  0C45  00FF               	movwf	btemp+1
  6821  0C46  3080               	movlw	128
  6822  0C47  027F               	subwf	btemp+1,w
  6823  0C48  1D03               	skipz
  6824  0C49  2C4C               	goto	u6595
  6825  0C4A  30FF               	movlw	255
  6826  0C4B  0248               	subwf	___flmul@temp,w
  6827  0C4C                     u6595:
  6828  0C4C  1C03               	skipc
  6829  0C4D  2C4F               	goto	u6591
  6830  0C4E  2C50               	goto	u6590
  6831  0C4F                     u6591:
  6832  0C4F  2C5B               	goto	l3846
  6833  0C50                     u6590:
  6834  0C50                     l3844:
  6835  0C50  307F               	movlw	127
  6836  0C51  1283               	bcf	3,5	;RP0=0, select bank0
  6837  0C52  1303               	bcf	3,6	;RP1=0, select bank0
  6838  0C53  00C7               	movwf	___flmul@prod+3
  6839  0C54  3080               	movlw	128
  6840  0C55  00C6               	movwf	___flmul@prod+2
  6841  0C56  3000               	movlw	0
  6842  0C57  00C5               	movwf	___flmul@prod+1
  6843  0C58  3000               	movlw	0
  6844  0C59  00C4               	movwf	___flmul@prod
  6845  0C5A  2C90               	goto	l744
  6846  0C5B                     l3846:
  6847  0C5B  1283               	bcf	3,5	;RP0=0, select bank0
  6848  0C5C  1303               	bcf	3,6	;RP1=0, select bank0
  6849  0C5D  0849               	movf	___flmul@temp+1,w
  6850  0C5E  3A80               	xorlw	128
  6851  0C5F  00FF               	movwf	btemp+1
  6852  0C60  3080               	movlw	128
  6853  0C61  027F               	subwf	btemp+1,w
  6854  0C62  1D03               	skipz
  6855  0C63  2C66               	goto	u6605
  6856  0C64  3001               	movlw	1
  6857  0C65  0248               	subwf	___flmul@temp,w
  6858  0C66                     u6605:
  6859  0C66  1803               	skipnc
  6860  0C67  2C69               	goto	u6601
  6861  0C68  2C6A               	goto	u6600
  6862  0C69                     u6601:
  6863  0C69  2C76               	goto	l3852
  6864  0C6A                     u6600:
  6865  0C6A                     l3848:
  6866  0C6A  3000               	movlw	0
  6867  0C6B  1283               	bcf	3,5	;RP0=0, select bank0
  6868  0C6C  1303               	bcf	3,6	;RP1=0, select bank0
  6869  0C6D  00C7               	movwf	___flmul@prod+3
  6870  0C6E  3000               	movlw	0
  6871  0C6F  00C6               	movwf	___flmul@prod+2
  6872  0C70  3000               	movlw	0
  6873  0C71  00C5               	movwf	___flmul@prod+1
  6874  0C72  3000               	movlw	0
  6875  0C73  00C4               	movwf	___flmul@prod
  6876  0C74                     l3850:
  6877  0C74  01BD               	clrf	___flmul@sign
  6878  0C75  2C90               	goto	l744
  6879  0C76                     l3852:
  6880  0C76  1283               	bcf	3,5	;RP0=0, select bank0
  6881  0C77  1303               	bcf	3,6	;RP1=0, select bank0
  6882  0C78  0848               	movf	___flmul@temp,w
  6883  0C79  00B8               	movwf	??___flmul
  6884  0C7A  0838               	movf	??___flmul,w
  6885  0C7B  00C3               	movwf	___flmul@bexp
  6886  0C7C  30FF               	movlw	255
  6887  0C7D  05C4               	andwf	___flmul@prod,f
  6888  0C7E  30FF               	movlw	255
  6889  0C7F  05C5               	andwf	___flmul@prod+1,f
  6890  0C80  307F               	movlw	127
  6891  0C81  05C6               	andwf	___flmul@prod+2,f
  6892  0C82  3000               	movlw	0
  6893  0C83  05C7               	andwf	___flmul@prod+3,f
  6894  0C84                     l3854:
  6895  0C84  1C43               	btfss	___flmul@bexp,0
  6896  0C85  2C87               	goto	u6611
  6897  0C86  2C88               	goto	u6610
  6898  0C87                     u6611:
  6899  0C87  2C89               	goto	l3858
  6900  0C88                     u6610:
  6901  0C88                     l3856:
  6902  0C88  17C6               	bsf	___flmul@prod+2,7
  6903  0C89                     l3858:
  6904  0C89  0843               	movf	___flmul@bexp,w
  6905  0C8A  00B8               	movwf	??___flmul
  6906  0C8B  1003               	clrc
  6907  0C8C  0C38               	rrf	??___flmul,w
  6908  0C8D  00B9               	movwf	??___flmul+1
  6909  0C8E  0839               	movf	??___flmul+1,w
  6910  0C8F  00C7               	movwf	___flmul@prod+3
  6911  0C90                     l744:
  6912  0C90  083D               	movf	___flmul@sign,w
  6913  0C91  00B8               	movwf	??___flmul
  6914  0C92  0838               	movf	??___flmul,w
  6915  0C93  04C7               	iorwf	___flmul@prod+3,f
  6916  0C94                     l3860:
  6917  0C94  0847               	movf	___flmul@prod+3,w
  6918  0C95  00B3               	movwf	?___flmul+3
  6919  0C96  0846               	movf	___flmul@prod+2,w
  6920  0C97  00B2               	movwf	?___flmul+2
  6921  0C98  0845               	movf	___flmul@prod+1,w
  6922  0C99  00B1               	movwf	?___flmul+1
  6923  0C9A  0844               	movf	___flmul@prod,w
  6924  0C9B  00B0               	movwf	?___flmul
  6925  0C9C                     l732:
  6926  0C9C  0008               	return
  6927  0C9D                     __end_of___flmul:
  6928                           
  6929                           	psect	text10
  6930  190A                     __ptext10:	
  6931 ;; *************** function __Umul8_16 *****************
  6932 ;; Defined at:
  6933 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul8_16.c"
  6934 ;; Parameters:    Size  Location     Type
  6935 ;;  multiplier      1    wreg     unsigned char 
  6936 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  6937 ;; Auto vars:     Size  Location     Type
  6938 ;;  multiplier      1    8[BANK0 ] unsigned char 
  6939 ;;  word_mpld       2    6[BANK0 ] unsigned int 
  6940 ;;  product         2    4[BANK0 ] unsigned int 
  6941 ;; Return value:  Size  Location     Type
  6942 ;;                  2    0[BANK0 ] unsigned int 
  6943 ;; Registers used:
  6944 ;;		wreg, status,2, status,0
  6945 ;; Tracked objects:
  6946 ;;		On entry : 0/0
  6947 ;;		On exit  : 0/0
  6948 ;;		Unchanged: 0/0
  6949 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6950 ;;      Params:         0       2       0       0       0
  6951 ;;      Locals:         0       5       0       0       0
  6952 ;;      Temps:          0       2       0       0       0
  6953 ;;      Totals:         0       9       0       0       0
  6954 ;;Total ram usage:        9 bytes
  6955 ;; Hardware stack levels used: 1
  6956 ;; Hardware stack levels required when called: 2
  6957 ;; This function calls:
  6958 ;;		Nothing
  6959 ;; This function is called by:
  6960 ;;		___flmul
  6961 ;; This function uses a non-reentrant model
  6962 ;;
  6963                           
  6964                           
  6965                           ;psect for function __Umul8_16
  6966  190A                     __Umul8_16:
  6967                           
  6968                           ;incstack = 0
  6969                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  6970                           ;__Umul8_16@multiplier stored from wreg
  6971  190A  1283               	bcf	3,5	;RP0=0, select bank0
  6972  190B  1303               	bcf	3,6	;RP1=0, select bank0
  6973  190C  00A8               	movwf	__Umul8_16@multiplier
  6974  190D                     l3446:
  6975  190D  01A4               	clrf	__Umul8_16@product
  6976  190E  01A5               	clrf	__Umul8_16@product+1
  6977  190F                     l3448:
  6978  190F  0820               	movf	__Umul8_16@multiplicand,w
  6979  1910  00A2               	movwf	??__Umul8_16
  6980  1911  01A3               	clrf	??__Umul8_16+1
  6981  1912  0822               	movf	??__Umul8_16,w
  6982  1913  00A6               	movwf	__Umul8_16@word_mpld
  6983  1914  0823               	movf	??__Umul8_16+1,w
  6984  1915  00A7               	movwf	__Umul8_16@word_mpld+1
  6985  1916                     l3450:
  6986  1916  1C28               	btfss	__Umul8_16@multiplier,0
  6987  1917  2919               	goto	u5571
  6988  1918  291A               	goto	u5570
  6989  1919                     u5571:
  6990  1919  2920               	goto	l751
  6991  191A                     u5570:
  6992  191A                     l3452:
  6993  191A  0826               	movf	__Umul8_16@word_mpld,w
  6994  191B  07A4               	addwf	__Umul8_16@product,f
  6995  191C  1803               	skipnc
  6996  191D  0AA5               	incf	__Umul8_16@product+1,f
  6997  191E  0827               	movf	__Umul8_16@word_mpld+1,w
  6998  191F  07A5               	addwf	__Umul8_16@product+1,f
  6999  1920                     l751:
  7000  1920  3001               	movlw	1
  7001  1921                     u5585:
  7002  1921  1003               	clrc
  7003  1922  0DA6               	rlf	__Umul8_16@word_mpld,f
  7004  1923  0DA7               	rlf	__Umul8_16@word_mpld+1,f
  7005  1924  3EFF               	addlw	-1
  7006  1925  1D03               	skipz
  7007  1926  2921               	goto	u5585
  7008  1927  1003               	clrc
  7009  1928  0CA8               	rrf	__Umul8_16@multiplier,f
  7010  1929                     l3454:
  7011  1929  0828               	movf	__Umul8_16@multiplier,w
  7012  192A  1D03               	btfss	3,2
  7013  192B  292D               	goto	u5591
  7014  192C  292E               	goto	u5590
  7015  192D                     u5591:
  7016  192D  2916               	goto	l3450
  7017  192E                     u5590:
  7018  192E                     l3456:
  7019  192E  0825               	movf	__Umul8_16@product+1,w
  7020  192F  00A1               	movwf	?__Umul8_16+1
  7021  1930  0824               	movf	__Umul8_16@product,w
  7022  1931  00A0               	movwf	?__Umul8_16
  7023  1932                     l753:
  7024  1932  0008               	return
  7025  1933                     __end_of__Umul8_16:
  7026                           
  7027                           	psect	text11
  7028  1E85                     __ptext11:	
  7029 ;; *************** function __tdiv_to_l_ *****************
  7030 ;; Defined at:
  7031 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\ftdivl.c"
  7032 ;; Parameters:    Size  Location     Type
  7033 ;;  f1              4    0[BANK0 ] float 
  7034 ;;  f2              4    4[BANK0 ] float 
  7035 ;; Auto vars:     Size  Location     Type
  7036 ;;  quot            4   12[BANK0 ] unsigned long 
  7037 ;;  exp1            1   17[BANK0 ] unsigned char 
  7038 ;;  cntr            1   16[BANK0 ] unsigned char 
  7039 ;; Return value:  Size  Location     Type
  7040 ;;                  4    0[BANK0 ] unsigned long 
  7041 ;; Registers used:
  7042 ;;		wreg, status,2, status,0
  7043 ;; Tracked objects:
  7044 ;;		On entry : 0/0
  7045 ;;		On exit  : 0/0
  7046 ;;		Unchanged: 0/0
  7047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7048 ;;      Params:         0       8       0       0       0
  7049 ;;      Locals:         0       6       0       0       0
  7050 ;;      Temps:          0       4       0       0       0
  7051 ;;      Totals:         0      18       0       0       0
  7052 ;;Total ram usage:       18 bytes
  7053 ;; Hardware stack levels used: 1
  7054 ;; Hardware stack levels required when called: 2
  7055 ;; This function calls:
  7056 ;;		Nothing
  7057 ;; This function is called by:
  7058 ;;		_sprintf
  7059 ;; This function uses a non-reentrant model
  7060 ;;
  7061                           
  7062                           
  7063                           ;psect for function __tdiv_to_l_
  7064  1E85                     __tdiv_to_l_:
  7065  1E85                     l3964:	
  7066                           ;incstack = 0
  7067                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  7068                           
  7069  1E85  1283               	bcf	3,5	;RP0=0, select bank0
  7070  1E86  1303               	bcf	3,6	;RP1=0, select bank0
  7071  1E87  0820               	movf	__tdiv_to_l_@f1,w
  7072  1E88  00A8               	movwf	??__tdiv_to_l_
  7073  1E89  0821               	movf	__tdiv_to_l_@f1+1,w
  7074  1E8A  00A9               	movwf	??__tdiv_to_l_+1
  7075  1E8B  0822               	movf	__tdiv_to_l_@f1+2,w
  7076  1E8C  00AA               	movwf	??__tdiv_to_l_+2
  7077  1E8D  1003               	clrc
  7078  1E8E  0D29               	rlf	??__tdiv_to_l_+1,w
  7079  1E8F  0D2A               	rlf	??__tdiv_to_l_+2,w
  7080  1E90  00AB               	movwf	??__tdiv_to_l_+3
  7081  1E91  082B               	movf	??__tdiv_to_l_+3,w
  7082  1E92  00B1               	movwf	__tdiv_to_l_@exp1
  7083  1E93  0831               	movf	__tdiv_to_l_@exp1,w
  7084  1E94  1D03               	btfss	3,2
  7085  1E95  2E97               	goto	u6901
  7086  1E96  2E98               	goto	u6900
  7087  1E97                     u6901:
  7088  1E97  2EA1               	goto	l3970
  7089  1E98                     u6900:
  7090  1E98                     l3966:
  7091  1E98  3000               	movlw	0
  7092  1E99  00A3               	movwf	?__tdiv_to_l_+3
  7093  1E9A  3000               	movlw	0
  7094  1E9B  00A2               	movwf	?__tdiv_to_l_+2
  7095  1E9C  3000               	movlw	0
  7096  1E9D  00A1               	movwf	?__tdiv_to_l_+1
  7097  1E9E  3000               	movlw	0
  7098  1E9F  00A0               	movwf	?__tdiv_to_l_
  7099  1EA0  2F41               	goto	l526
  7100  1EA1                     l3970:
  7101  1EA1  0824               	movf	__tdiv_to_l_@f2,w
  7102  1EA2  00A8               	movwf	??__tdiv_to_l_
  7103  1EA3  0825               	movf	__tdiv_to_l_@f2+1,w
  7104  1EA4  00A9               	movwf	??__tdiv_to_l_+1
  7105  1EA5  0826               	movf	__tdiv_to_l_@f2+2,w
  7106  1EA6  00AA               	movwf	??__tdiv_to_l_+2
  7107  1EA7  1003               	clrc
  7108  1EA8  0D29               	rlf	??__tdiv_to_l_+1,w
  7109  1EA9  0D2A               	rlf	??__tdiv_to_l_+2,w
  7110  1EAA  00AB               	movwf	??__tdiv_to_l_+3
  7111  1EAB  082B               	movf	??__tdiv_to_l_+3,w
  7112  1EAC  00B0               	movwf	__tdiv_to_l_@cntr
  7113  1EAD  0830               	movf	__tdiv_to_l_@cntr,w
  7114  1EAE  1D03               	btfss	3,2
  7115  1EAF  2EB1               	goto	u6911
  7116  1EB0  2EB2               	goto	u6910
  7117  1EB1                     u6911:
  7118  1EB1  2EB3               	goto	l527
  7119  1EB2                     u6910:
  7120  1EB2  2E98               	goto	l3966
  7121  1EB3                     l527:
  7122  1EB3  17A1               	bsf	__tdiv_to_l_@f1+1,7
  7123  1EB4                     l3976:
  7124  1EB4  30FF               	movlw	255
  7125  1EB5  05A0               	andwf	__tdiv_to_l_@f1,f
  7126  1EB6  30FF               	movlw	255
  7127  1EB7  05A1               	andwf	__tdiv_to_l_@f1+1,f
  7128  1EB8  3000               	movlw	0
  7129  1EB9  05A2               	andwf	__tdiv_to_l_@f1+2,f
  7130  1EBA                     l3978:
  7131  1EBA  17A5               	bsf	__tdiv_to_l_@f2+1,7
  7132  1EBB  30FF               	movlw	255
  7133  1EBC  05A4               	andwf	__tdiv_to_l_@f2,f
  7134  1EBD  30FF               	movlw	255
  7135  1EBE  05A5               	andwf	__tdiv_to_l_@f2+1,f
  7136  1EBF  3000               	movlw	0
  7137  1EC0  05A6               	andwf	__tdiv_to_l_@f2+2,f
  7138  1EC1  3000               	movlw	0
  7139  1EC2  00AF               	movwf	__tdiv_to_l_@quot+3
  7140  1EC3  3000               	movlw	0
  7141  1EC4  00AE               	movwf	__tdiv_to_l_@quot+2
  7142  1EC5  3000               	movlw	0
  7143  1EC6  00AD               	movwf	__tdiv_to_l_@quot+1
  7144  1EC7  3000               	movlw	0
  7145  1EC8  00AC               	movwf	__tdiv_to_l_@quot
  7146  1EC9                     l3980:
  7147  1EC9  307F               	movlw	127
  7148  1ECA  02B1               	subwf	__tdiv_to_l_@exp1,f
  7149  1ECB                     l3982:
  7150  1ECB  3098               	movlw	152
  7151  1ECC  0730               	addwf	__tdiv_to_l_@cntr,w
  7152  1ECD  00A8               	movwf	??__tdiv_to_l_
  7153  1ECE  0828               	movf	??__tdiv_to_l_,w
  7154  1ECF  02B1               	subwf	__tdiv_to_l_@exp1,f
  7155  1ED0  3018               	movlw	24
  7156  1ED1  00A8               	movwf	??__tdiv_to_l_
  7157  1ED2  0828               	movf	??__tdiv_to_l_,w
  7158  1ED3  00B0               	movwf	__tdiv_to_l_@cntr
  7159  1ED4                     l3984:
  7160  1ED4  3001               	movlw	1
  7161  1ED5  00A8               	movwf	??__tdiv_to_l_
  7162  1ED6                     u6925:
  7163  1ED6  1003               	clrc
  7164  1ED7  0DAC               	rlf	__tdiv_to_l_@quot,f
  7165  1ED8  0DAD               	rlf	__tdiv_to_l_@quot+1,f
  7166  1ED9  0DAE               	rlf	__tdiv_to_l_@quot+2,f
  7167  1EDA  0DAF               	rlf	__tdiv_to_l_@quot+3,f
  7168  1EDB  0BA8               	decfsz	??__tdiv_to_l_,f
  7169  1EDC  2ED6               	goto	u6925
  7170  1EDD                     l3986:
  7171  1EDD  0826               	movf	__tdiv_to_l_@f2+2,w
  7172  1EDE  0222               	subwf	__tdiv_to_l_@f1+2,w
  7173  1EDF  1D03               	skipz
  7174  1EE0  2EE7               	goto	u6935
  7175  1EE1  0825               	movf	__tdiv_to_l_@f2+1,w
  7176  1EE2  0221               	subwf	__tdiv_to_l_@f1+1,w
  7177  1EE3  1D03               	skipz
  7178  1EE4  2EE7               	goto	u6935
  7179  1EE5  0824               	movf	__tdiv_to_l_@f2,w
  7180  1EE6  0220               	subwf	__tdiv_to_l_@f1,w
  7181  1EE7                     u6935:
  7182  1EE7  1C03               	skipc
  7183  1EE8  2EEA               	goto	u6931
  7184  1EE9  2EEB               	goto	u6930
  7185  1EEA                     u6931:
  7186  1EEA  2EF6               	goto	l3992
  7187  1EEB                     u6930:
  7188  1EEB                     l3988:
  7189  1EEB  0824               	movf	__tdiv_to_l_@f2,w
  7190  1EEC  02A0               	subwf	__tdiv_to_l_@f1,f
  7191  1EED  0825               	movf	__tdiv_to_l_@f2+1,w
  7192  1EEE  1C03               	skipc
  7193  1EEF  0F25               	incfsz	__tdiv_to_l_@f2+1,w
  7194  1EF0  02A1               	subwf	__tdiv_to_l_@f1+1,f
  7195  1EF1  0826               	movf	__tdiv_to_l_@f2+2,w
  7196  1EF2  1C03               	skipc
  7197  1EF3  0A26               	incf	__tdiv_to_l_@f2+2,w
  7198  1EF4  02A2               	subwf	__tdiv_to_l_@f1+2,f
  7199  1EF5                     l3990:
  7200  1EF5  142C               	bsf	__tdiv_to_l_@quot,0
  7201  1EF6                     l3992:
  7202  1EF6  3001               	movlw	1
  7203  1EF7                     u6945:
  7204  1EF7  1003               	clrc
  7205  1EF8  0DA0               	rlf	__tdiv_to_l_@f1,f
  7206  1EF9  0DA1               	rlf	__tdiv_to_l_@f1+1,f
  7207  1EFA  0DA2               	rlf	__tdiv_to_l_@f1+2,f
  7208  1EFB  3EFF               	addlw	-1
  7209  1EFC  1D03               	skipz
  7210  1EFD  2EF7               	goto	u6945
  7211  1EFE                     l3994:
  7212  1EFE  3001               	movlw	1
  7213  1EFF  02B0               	subwf	__tdiv_to_l_@cntr,f
  7214  1F00  1D03               	btfss	3,2
  7215  1F01  2F03               	goto	u6951
  7216  1F02  2F04               	goto	u6950
  7217  1F03                     u6951:
  7218  1F03  2ED4               	goto	l3984
  7219  1F04                     u6950:
  7220  1F04                     l530:
  7221  1F04  1FB1               	btfss	__tdiv_to_l_@exp1,7
  7222  1F05  2F07               	goto	u6961
  7223  1F06  2F08               	goto	u6960
  7224  1F07                     u6961:
  7225  1F07  2F22               	goto	l4004
  7226  1F08                     u6960:
  7227  1F08                     l3996:
  7228  1F08  0831               	movf	__tdiv_to_l_@exp1,w
  7229  1F09  3A80               	xorlw	128
  7230  1F0A  3E97               	addlw	151
  7231  1F0B  1803               	skipnc
  7232  1F0C  2F0E               	goto	u6971
  7233  1F0D  2F0F               	goto	u6970
  7234  1F0E                     u6971:
  7235  1F0E  2F10               	goto	l4002
  7236  1F0F                     u6970:
  7237  1F0F  2E98               	goto	l3966
  7238  1F10                     l4002:
  7239  1F10  3001               	movlw	1
  7240  1F11                     u6985:
  7241  1F11  1003               	clrc
  7242  1F12  0CAF               	rrf	__tdiv_to_l_@quot+3,f
  7243  1F13  0CAE               	rrf	__tdiv_to_l_@quot+2,f
  7244  1F14  0CAD               	rrf	__tdiv_to_l_@quot+1,f
  7245  1F15  0CAC               	rrf	__tdiv_to_l_@quot,f
  7246  1F16  3EFF               	addlw	-1
  7247  1F17  1D03               	skipz
  7248  1F18  2F11               	goto	u6985
  7249  1F19  3001               	movlw	1
  7250  1F1A  00A8               	movwf	??__tdiv_to_l_
  7251  1F1B  0828               	movf	??__tdiv_to_l_,w
  7252  1F1C  07B1               	addwf	__tdiv_to_l_@exp1,f
  7253  1F1D  1D03               	btfss	3,2
  7254  1F1E  2F20               	goto	u6991
  7255  1F1F  2F21               	goto	u6990
  7256  1F20                     u6991:
  7257  1F20  2F10               	goto	l4002
  7258  1F21                     u6990:
  7259  1F21  2F39               	goto	l4012
  7260  1F22                     l4004:
  7261  1F22  3018               	movlw	24
  7262  1F23  0231               	subwf	__tdiv_to_l_@exp1,w
  7263  1F24  1C03               	skipc
  7264  1F25  2F27               	goto	u7001
  7265  1F26  2F28               	goto	u7000
  7266  1F27                     u7001:
  7267  1F27  2F34               	goto	l537
  7268  1F28                     u7000:
  7269  1F28  2E98               	goto	l3966
  7270  1F29                     l4010:
  7271  1F29  3001               	movlw	1
  7272  1F2A  00A8               	movwf	??__tdiv_to_l_
  7273  1F2B                     u7015:
  7274  1F2B  1003               	clrc
  7275  1F2C  0DAC               	rlf	__tdiv_to_l_@quot,f
  7276  1F2D  0DAD               	rlf	__tdiv_to_l_@quot+1,f
  7277  1F2E  0DAE               	rlf	__tdiv_to_l_@quot+2,f
  7278  1F2F  0DAF               	rlf	__tdiv_to_l_@quot+3,f
  7279  1F30  0BA8               	decfsz	??__tdiv_to_l_,f
  7280  1F31  2F2B               	goto	u7015
  7281  1F32  3001               	movlw	1
  7282  1F33  02B1               	subwf	__tdiv_to_l_@exp1,f
  7283  1F34                     l537:
  7284  1F34  0831               	movf	__tdiv_to_l_@exp1,w
  7285  1F35  1D03               	btfss	3,2
  7286  1F36  2F38               	goto	u7021
  7287  1F37  2F39               	goto	u7020
  7288  1F38                     u7021:
  7289  1F38  2F29               	goto	l4010
  7290  1F39                     u7020:
  7291  1F39                     l4012:
  7292  1F39  082F               	movf	__tdiv_to_l_@quot+3,w
  7293  1F3A  00A3               	movwf	?__tdiv_to_l_+3
  7294  1F3B  082E               	movf	__tdiv_to_l_@quot+2,w
  7295  1F3C  00A2               	movwf	?__tdiv_to_l_+2
  7296  1F3D  082D               	movf	__tdiv_to_l_@quot+1,w
  7297  1F3E  00A1               	movwf	?__tdiv_to_l_+1
  7298  1F3F  082C               	movf	__tdiv_to_l_@quot,w
  7299  1F40  00A0               	movwf	?__tdiv_to_l_
  7300  1F41                     l526:
  7301  1F41  0008               	return
  7302  1F42                     __end_of__tdiv_to_l_:
  7303                           
  7304                           	psect	text12
  7305  1F42                     __ptext12:	
  7306 ;; *************** function __div_to_l_ *****************
  7307 ;; Defined at:
  7308 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\fldivl.c"
  7309 ;; Parameters:    Size  Location     Type
  7310 ;;  f1              4    0[BANK0 ] unsigned long 
  7311 ;;  f2              4    4[BANK0 ] unsigned long 
  7312 ;; Auto vars:     Size  Location     Type
  7313 ;;  quot            4    9[BANK0 ] unsigned long 
  7314 ;;  exp1            1   14[BANK0 ] unsigned char 
  7315 ;;  cntr            1   13[BANK0 ] unsigned char 
  7316 ;; Return value:  Size  Location     Type
  7317 ;;                  4    0[BANK0 ] unsigned long 
  7318 ;; Registers used:
  7319 ;;		wreg, status,2, status,0
  7320 ;; Tracked objects:
  7321 ;;		On entry : 0/0
  7322 ;;		On exit  : 0/0
  7323 ;;		Unchanged: 0/0
  7324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7325 ;;      Params:         0       8       0       0       0
  7326 ;;      Locals:         0       6       0       0       0
  7327 ;;      Temps:          0       1       0       0       0
  7328 ;;      Totals:         0      15       0       0       0
  7329 ;;Total ram usage:       15 bytes
  7330 ;; Hardware stack levels used: 1
  7331 ;; Hardware stack levels required when called: 2
  7332 ;; This function calls:
  7333 ;;		Nothing
  7334 ;; This function is called by:
  7335 ;;		_sprintf
  7336 ;; This function uses a non-reentrant model
  7337 ;;
  7338                           
  7339                           
  7340                           ;psect for function __div_to_l_
  7341  1F42                     __div_to_l_:
  7342  1F42                     l4016:	
  7343                           ;incstack = 0
  7344                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  7345                           
  7346  1F42  1003               	clrc
  7347  1F43  1283               	bcf	3,5	;RP0=0, select bank0
  7348  1F44  1303               	bcf	3,6	;RP1=0, select bank0
  7349  1F45  0D22               	rlf	__div_to_l_@f1+2,w
  7350  1F46  0D23               	rlf	__div_to_l_@f1+3,w
  7351  1F47  00A8               	movwf	??__div_to_l_
  7352  1F48  0828               	movf	??__div_to_l_,w
  7353  1F49  00AE               	movwf	__div_to_l_@exp1
  7354  1F4A  082E               	movf	__div_to_l_@exp1,w
  7355  1F4B  1D03               	btfss	3,2
  7356  1F4C  2F4E               	goto	u7031
  7357  1F4D  2F4F               	goto	u7030
  7358  1F4E                     u7031:
  7359  1F4E  2F58               	goto	l4022
  7360  1F4F                     u7030:
  7361  1F4F                     l4018:
  7362  1F4F  3000               	movlw	0
  7363  1F50  00A3               	movwf	?__div_to_l_+3
  7364  1F51  3000               	movlw	0
  7365  1F52  00A2               	movwf	?__div_to_l_+2
  7366  1F53  3000               	movlw	0
  7367  1F54  00A1               	movwf	?__div_to_l_+1
  7368  1F55  3000               	movlw	0
  7369  1F56  00A0               	movwf	?__div_to_l_
  7370  1F57  2FFF               	goto	l479
  7371  1F58                     l4022:
  7372  1F58  1003               	clrc
  7373  1F59  0D26               	rlf	__div_to_l_@f2+2,w
  7374  1F5A  0D27               	rlf	__div_to_l_@f2+3,w
  7375  1F5B  00A8               	movwf	??__div_to_l_
  7376  1F5C  0828               	movf	??__div_to_l_,w
  7377  1F5D  00AD               	movwf	__div_to_l_@cntr
  7378  1F5E  082D               	movf	__div_to_l_@cntr,w
  7379  1F5F  1D03               	btfss	3,2
  7380  1F60  2F62               	goto	u7041
  7381  1F61  2F63               	goto	u7040
  7382  1F62                     u7041:
  7383  1F62  2F64               	goto	l480
  7384  1F63                     u7040:
  7385  1F63  2F4F               	goto	l4018
  7386  1F64                     l480:
  7387  1F64  17A2               	bsf	__div_to_l_@f1+2,7
  7388  1F65                     l4028:
  7389  1F65  30FF               	movlw	255
  7390  1F66  05A0               	andwf	__div_to_l_@f1,f
  7391  1F67  30FF               	movlw	255
  7392  1F68  05A1               	andwf	__div_to_l_@f1+1,f
  7393  1F69  30FF               	movlw	255
  7394  1F6A  05A2               	andwf	__div_to_l_@f1+2,f
  7395  1F6B  3000               	movlw	0
  7396  1F6C  05A3               	andwf	__div_to_l_@f1+3,f
  7397  1F6D                     l4030:
  7398  1F6D  17A6               	bsf	__div_to_l_@f2+2,7
  7399  1F6E  30FF               	movlw	255
  7400  1F6F  05A4               	andwf	__div_to_l_@f2,f
  7401  1F70  30FF               	movlw	255
  7402  1F71  05A5               	andwf	__div_to_l_@f2+1,f
  7403  1F72  30FF               	movlw	255
  7404  1F73  05A6               	andwf	__div_to_l_@f2+2,f
  7405  1F74  3000               	movlw	0
  7406  1F75  05A7               	andwf	__div_to_l_@f2+3,f
  7407  1F76  3000               	movlw	0
  7408  1F77  00AC               	movwf	__div_to_l_@quot+3
  7409  1F78  3000               	movlw	0
  7410  1F79  00AB               	movwf	__div_to_l_@quot+2
  7411  1F7A  3000               	movlw	0
  7412  1F7B  00AA               	movwf	__div_to_l_@quot+1
  7413  1F7C  3000               	movlw	0
  7414  1F7D  00A9               	movwf	__div_to_l_@quot
  7415  1F7E                     l4032:
  7416  1F7E  307F               	movlw	127
  7417  1F7F  02AE               	subwf	__div_to_l_@exp1,f
  7418  1F80                     l4034:
  7419  1F80  30A0               	movlw	160
  7420  1F81  072D               	addwf	__div_to_l_@cntr,w
  7421  1F82  00A8               	movwf	??__div_to_l_
  7422  1F83  0828               	movf	??__div_to_l_,w
  7423  1F84  02AE               	subwf	__div_to_l_@exp1,f
  7424  1F85  3020               	movlw	32
  7425  1F86  00A8               	movwf	??__div_to_l_
  7426  1F87  0828               	movf	??__div_to_l_,w
  7427  1F88  00AD               	movwf	__div_to_l_@cntr
  7428  1F89                     l4036:
  7429  1F89  3001               	movlw	1
  7430  1F8A  00A8               	movwf	??__div_to_l_
  7431  1F8B                     u7055:
  7432  1F8B  1003               	clrc
  7433  1F8C  0DA9               	rlf	__div_to_l_@quot,f
  7434  1F8D  0DAA               	rlf	__div_to_l_@quot+1,f
  7435  1F8E  0DAB               	rlf	__div_to_l_@quot+2,f
  7436  1F8F  0DAC               	rlf	__div_to_l_@quot+3,f
  7437  1F90  0BA8               	decfsz	??__div_to_l_,f
  7438  1F91  2F8B               	goto	u7055
  7439  1F92                     l4038:
  7440  1F92  0827               	movf	__div_to_l_@f2+3,w
  7441  1F93  0223               	subwf	__div_to_l_@f1+3,w
  7442  1F94  1D03               	skipz
  7443  1F95  2FA0               	goto	u7065
  7444  1F96  0826               	movf	__div_to_l_@f2+2,w
  7445  1F97  0222               	subwf	__div_to_l_@f1+2,w
  7446  1F98  1D03               	skipz
  7447  1F99  2FA0               	goto	u7065
  7448  1F9A  0825               	movf	__div_to_l_@f2+1,w
  7449  1F9B  0221               	subwf	__div_to_l_@f1+1,w
  7450  1F9C  1D03               	skipz
  7451  1F9D  2FA0               	goto	u7065
  7452  1F9E  0824               	movf	__div_to_l_@f2,w
  7453  1F9F  0220               	subwf	__div_to_l_@f1,w
  7454  1FA0                     u7065:
  7455  1FA0  1C03               	skipc
  7456  1FA1  2FA3               	goto	u7061
  7457  1FA2  2FA4               	goto	u7060
  7458  1FA3                     u7061:
  7459  1FA3  2FB3               	goto	l4044
  7460  1FA4                     u7060:
  7461  1FA4                     l4040:
  7462  1FA4  0824               	movf	__div_to_l_@f2,w
  7463  1FA5  02A0               	subwf	__div_to_l_@f1,f
  7464  1FA6  0825               	movf	__div_to_l_@f2+1,w
  7465  1FA7  1C03               	skipc
  7466  1FA8  0F25               	incfsz	__div_to_l_@f2+1,w
  7467  1FA9  02A1               	subwf	__div_to_l_@f1+1,f
  7468  1FAA  0826               	movf	__div_to_l_@f2+2,w
  7469  1FAB  1C03               	skipc
  7470  1FAC  0F26               	incfsz	__div_to_l_@f2+2,w
  7471  1FAD  02A2               	subwf	__div_to_l_@f1+2,f
  7472  1FAE  0827               	movf	__div_to_l_@f2+3,w
  7473  1FAF  1C03               	skipc
  7474  1FB0  0F27               	incfsz	__div_to_l_@f2+3,w
  7475  1FB1  02A3               	subwf	__div_to_l_@f1+3,f
  7476  1FB2                     l4042:
  7477  1FB2  1429               	bsf	__div_to_l_@quot,0
  7478  1FB3                     l4044:
  7479  1FB3  3001               	movlw	1
  7480  1FB4  00A8               	movwf	??__div_to_l_
  7481  1FB5                     u7075:
  7482  1FB5  1003               	clrc
  7483  1FB6  0DA0               	rlf	__div_to_l_@f1,f
  7484  1FB7  0DA1               	rlf	__div_to_l_@f1+1,f
  7485  1FB8  0DA2               	rlf	__div_to_l_@f1+2,f
  7486  1FB9  0DA3               	rlf	__div_to_l_@f1+3,f
  7487  1FBA  0BA8               	decfsz	??__div_to_l_,f
  7488  1FBB  2FB5               	goto	u7075
  7489  1FBC                     l4046:
  7490  1FBC  3001               	movlw	1
  7491  1FBD  02AD               	subwf	__div_to_l_@cntr,f
  7492  1FBE  1D03               	btfss	3,2
  7493  1FBF  2FC1               	goto	u7081
  7494  1FC0  2FC2               	goto	u7080
  7495  1FC1                     u7081:
  7496  1FC1  2F89               	goto	l4036
  7497  1FC2                     u7080:
  7498  1FC2                     l483:
  7499  1FC2  1FAE               	btfss	__div_to_l_@exp1,7
  7500  1FC3  2FC5               	goto	u7091
  7501  1FC4  2FC6               	goto	u7090
  7502  1FC5                     u7091:
  7503  1FC5  2FE0               	goto	l4056
  7504  1FC6                     u7090:
  7505  1FC6                     l4048:
  7506  1FC6  082E               	movf	__div_to_l_@exp1,w
  7507  1FC7  3A80               	xorlw	128
  7508  1FC8  3E9F               	addlw	159
  7509  1FC9  1803               	skipnc
  7510  1FCA  2FCC               	goto	u7101
  7511  1FCB  2FCD               	goto	u7100
  7512  1FCC                     u7101:
  7513  1FCC  2FCE               	goto	l4054
  7514  1FCD                     u7100:
  7515  1FCD  2F4F               	goto	l4018
  7516  1FCE                     l4054:
  7517  1FCE  3001               	movlw	1
  7518  1FCF                     u7115:
  7519  1FCF  1003               	clrc
  7520  1FD0  0CAC               	rrf	__div_to_l_@quot+3,f
  7521  1FD1  0CAB               	rrf	__div_to_l_@quot+2,f
  7522  1FD2  0CAA               	rrf	__div_to_l_@quot+1,f
  7523  1FD3  0CA9               	rrf	__div_to_l_@quot,f
  7524  1FD4  3EFF               	addlw	-1
  7525  1FD5  1D03               	skipz
  7526  1FD6  2FCF               	goto	u7115
  7527  1FD7  3001               	movlw	1
  7528  1FD8  00A8               	movwf	??__div_to_l_
  7529  1FD9  0828               	movf	??__div_to_l_,w
  7530  1FDA  07AE               	addwf	__div_to_l_@exp1,f
  7531  1FDB  1D03               	btfss	3,2
  7532  1FDC  2FDE               	goto	u7121
  7533  1FDD  2FDF               	goto	u7120
  7534  1FDE                     u7121:
  7535  1FDE  2FCE               	goto	l4054
  7536  1FDF                     u7120:
  7537  1FDF  2FF7               	goto	l4064
  7538  1FE0                     l4056:
  7539  1FE0  3020               	movlw	32
  7540  1FE1  022E               	subwf	__div_to_l_@exp1,w
  7541  1FE2  1C03               	skipc
  7542  1FE3  2FE5               	goto	u7131
  7543  1FE4  2FE6               	goto	u7130
  7544  1FE5                     u7131:
  7545  1FE5  2FF2               	goto	l490
  7546  1FE6                     u7130:
  7547  1FE6  2F4F               	goto	l4018
  7548  1FE7                     l4062:
  7549  1FE7  3001               	movlw	1
  7550  1FE8  00A8               	movwf	??__div_to_l_
  7551  1FE9                     u7145:
  7552  1FE9  1003               	clrc
  7553  1FEA  0DA9               	rlf	__div_to_l_@quot,f
  7554  1FEB  0DAA               	rlf	__div_to_l_@quot+1,f
  7555  1FEC  0DAB               	rlf	__div_to_l_@quot+2,f
  7556  1FED  0DAC               	rlf	__div_to_l_@quot+3,f
  7557  1FEE  0BA8               	decfsz	??__div_to_l_,f
  7558  1FEF  2FE9               	goto	u7145
  7559  1FF0  3001               	movlw	1
  7560  1FF1  02AE               	subwf	__div_to_l_@exp1,f
  7561  1FF2                     l490:
  7562  1FF2  082E               	movf	__div_to_l_@exp1,w
  7563  1FF3  1D03               	btfss	3,2
  7564  1FF4  2FF6               	goto	u7151
  7565  1FF5  2FF7               	goto	u7150
  7566  1FF6                     u7151:
  7567  1FF6  2FE7               	goto	l4062
  7568  1FF7                     u7150:
  7569  1FF7                     l4064:
  7570  1FF7  082C               	movf	__div_to_l_@quot+3,w
  7571  1FF8  00A3               	movwf	?__div_to_l_+3
  7572  1FF9  082B               	movf	__div_to_l_@quot+2,w
  7573  1FFA  00A2               	movwf	?__div_to_l_+2
  7574  1FFB  082A               	movf	__div_to_l_@quot+1,w
  7575  1FFC  00A1               	movwf	?__div_to_l_+1
  7576  1FFD  0829               	movf	__div_to_l_@quot,w
  7577  1FFE  00A0               	movwf	?__div_to_l_
  7578  1FFF                     l479:
  7579  1FFF  0008               	return
  7580  2000                     __end_of__div_to_l_:
  7581                           
  7582                           	psect	text13
  7583  1DC9                     __ptext13:	
  7584 ;; *************** function ___xxtofl *****************
  7585 ;; Defined at:
  7586 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\xxtofl.c"
  7587 ;; Parameters:    Size  Location     Type
  7588 ;;  sign            1    wreg     unsigned char 
  7589 ;;  val             4   16[BANK0 ] long 
  7590 ;; Auto vars:     Size  Location     Type
  7591 ;;  sign            1   24[BANK0 ] unsigned char 
  7592 ;;  arg             4   26[BANK0 ] unsigned long 
  7593 ;;  exp             1   25[BANK0 ] unsigned char 
  7594 ;; Return value:  Size  Location     Type
  7595 ;;                  4   16[BANK0 ] unsigned char 
  7596 ;; Registers used:
  7597 ;;		wreg, status,2, status,0
  7598 ;; Tracked objects:
  7599 ;;		On entry : 0/0
  7600 ;;		On exit  : 0/0
  7601 ;;		Unchanged: 0/0
  7602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7603 ;;      Params:         0       4       0       0       0
  7604 ;;      Locals:         0       6       0       0       0
  7605 ;;      Temps:          0       4       0       0       0
  7606 ;;      Totals:         0      14       0       0       0
  7607 ;;Total ram usage:       14 bytes
  7608 ;; Hardware stack levels used: 1
  7609 ;; Hardware stack levels required when called: 2
  7610 ;; This function calls:
  7611 ;;		Nothing
  7612 ;; This function is called by:
  7613 ;;		_main
  7614 ;;		_sprintf
  7615 ;; This function uses a non-reentrant model
  7616 ;;
  7617                           
  7618                           
  7619                           ;psect for function ___xxtofl
  7620  1DC9                     ___xxtofl:
  7621                           
  7622                           ;incstack = 0
  7623                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  7624                           ;___xxtofl@sign stored from wreg
  7625  1DC9  1283               	bcf	3,5	;RP0=0, select bank0
  7626  1DCA  1303               	bcf	3,6	;RP1=0, select bank0
  7627  1DCB  00B8               	movwf	___xxtofl@sign
  7628  1DCC                     l2996:
  7629  1DCC  0838               	movf	___xxtofl@sign,w
  7630  1DCD  1903               	btfsc	3,2
  7631  1DCE  2DD0               	goto	u4931
  7632  1DCF  2DD1               	goto	u4930
  7633  1DD0                     u4931:
  7634  1DD0  2DE5               	goto	l3002
  7635  1DD1                     u4930:
  7636  1DD1                     l2998:
  7637  1DD1  1FB3               	btfss	___xxtofl@val+3,7
  7638  1DD2  2DD4               	goto	u4941
  7639  1DD3  2DD5               	goto	u4940
  7640  1DD4                     u4941:
  7641  1DD4  2DE5               	goto	l3002
  7642  1DD5                     u4940:
  7643  1DD5                     l3000:
  7644  1DD5  0930               	comf	___xxtofl@val,w
  7645  1DD6  00BA               	movwf	___xxtofl@arg
  7646  1DD7  0931               	comf	___xxtofl@val+1,w
  7647  1DD8  00BB               	movwf	___xxtofl@arg+1
  7648  1DD9  0932               	comf	___xxtofl@val+2,w
  7649  1DDA  00BC               	movwf	___xxtofl@arg+2
  7650  1DDB  0933               	comf	___xxtofl@val+3,w
  7651  1DDC  00BD               	movwf	___xxtofl@arg+3
  7652  1DDD  0ABA               	incf	___xxtofl@arg,f
  7653  1DDE  1903               	skipnz
  7654  1DDF  0ABB               	incf	___xxtofl@arg+1,f
  7655  1DE0  1903               	skipnz
  7656  1DE1  0ABC               	incf	___xxtofl@arg+2,f
  7657  1DE2  1903               	skipnz
  7658  1DE3  0ABD               	incf	___xxtofl@arg+3,f
  7659  1DE4  2DED               	goto	l776
  7660  1DE5                     l3002:
  7661  1DE5  0833               	movf	___xxtofl@val+3,w
  7662  1DE6  00BD               	movwf	___xxtofl@arg+3
  7663  1DE7  0832               	movf	___xxtofl@val+2,w
  7664  1DE8  00BC               	movwf	___xxtofl@arg+2
  7665  1DE9  0831               	movf	___xxtofl@val+1,w
  7666  1DEA  00BB               	movwf	___xxtofl@arg+1
  7667  1DEB  0830               	movf	___xxtofl@val,w
  7668  1DEC  00BA               	movwf	___xxtofl@arg
  7669  1DED                     l776:
  7670  1DED  0833               	movf	___xxtofl@val+3,w
  7671  1DEE  0432               	iorwf	___xxtofl@val+2,w
  7672  1DEF  0431               	iorwf	___xxtofl@val+1,w
  7673  1DF0  0430               	iorwf	___xxtofl@val,w
  7674  1DF1  1D03               	skipz
  7675  1DF2  2DF4               	goto	u4951
  7676  1DF3  2DF5               	goto	u4950
  7677  1DF4                     u4951:
  7678  1DF4  2DFE               	goto	l3008
  7679  1DF5                     u4950:
  7680  1DF5                     l3004:
  7681  1DF5  3000               	movlw	0
  7682  1DF6  00B3               	movwf	?___xxtofl+3
  7683  1DF7  3000               	movlw	0
  7684  1DF8  00B2               	movwf	?___xxtofl+2
  7685  1DF9  3000               	movlw	0
  7686  1DFA  00B1               	movwf	?___xxtofl+1
  7687  1DFB  3000               	movlw	0
  7688  1DFC  00B0               	movwf	?___xxtofl
  7689  1DFD  2E84               	goto	l778
  7690  1DFE                     l3008:
  7691  1DFE  3096               	movlw	150
  7692  1DFF  00B4               	movwf	??___xxtofl
  7693  1E00  0834               	movf	??___xxtofl,w
  7694  1E01  00B9               	movwf	___xxtofl@exp
  7695  1E02  2E10               	goto	l3012
  7696  1E03                     l3010:
  7697  1E03  3001               	movlw	1
  7698  1E04  00B4               	movwf	??___xxtofl
  7699  1E05  0834               	movf	??___xxtofl,w
  7700  1E06  07B9               	addwf	___xxtofl@exp,f
  7701  1E07  3001               	movlw	1
  7702  1E08                     u4965:
  7703  1E08  1003               	clrc
  7704  1E09  0CBD               	rrf	___xxtofl@arg+3,f
  7705  1E0A  0CBC               	rrf	___xxtofl@arg+2,f
  7706  1E0B  0CBB               	rrf	___xxtofl@arg+1,f
  7707  1E0C  0CBA               	rrf	___xxtofl@arg,f
  7708  1E0D  3EFF               	addlw	-1
  7709  1E0E  1D03               	skipz
  7710  1E0F  2E08               	goto	u4965
  7711  1E10                     l3012:
  7712  1E10  30FE               	movlw	254
  7713  1E11  053D               	andwf	___xxtofl@arg+3,w
  7714  1E12  1D03               	btfss	3,2
  7715  1E13  2E15               	goto	u4971
  7716  1E14  2E16               	goto	u4970
  7717  1E15                     u4971:
  7718  1E15  2E03               	goto	l3010
  7719  1E16                     u4970:
  7720  1E16  2E32               	goto	l782
  7721  1E17                     l3014:
  7722  1E17  3001               	movlw	1
  7723  1E18  00B4               	movwf	??___xxtofl
  7724  1E19  0834               	movf	??___xxtofl,w
  7725  1E1A  07B9               	addwf	___xxtofl@exp,f
  7726  1E1B                     l3016:
  7727  1E1B  3001               	movlw	1
  7728  1E1C  07BA               	addwf	___xxtofl@arg,f
  7729  1E1D  3000               	movlw	0
  7730  1E1E  1803               	skipnc
  7731  1E1F  3001               	movlw	1
  7732  1E20  07BB               	addwf	___xxtofl@arg+1,f
  7733  1E21  3000               	movlw	0
  7734  1E22  1803               	skipnc
  7735  1E23  3001               	movlw	1
  7736  1E24  07BC               	addwf	___xxtofl@arg+2,f
  7737  1E25  3000               	movlw	0
  7738  1E26  1803               	skipnc
  7739  1E27  3001               	movlw	1
  7740  1E28  07BD               	addwf	___xxtofl@arg+3,f
  7741  1E29                     l3018:
  7742  1E29  3001               	movlw	1
  7743  1E2A                     u4985:
  7744  1E2A  1003               	clrc
  7745  1E2B  0CBD               	rrf	___xxtofl@arg+3,f
  7746  1E2C  0CBC               	rrf	___xxtofl@arg+2,f
  7747  1E2D  0CBB               	rrf	___xxtofl@arg+1,f
  7748  1E2E  0CBA               	rrf	___xxtofl@arg,f
  7749  1E2F  3EFF               	addlw	-1
  7750  1E30  1D03               	skipz
  7751  1E31  2E2A               	goto	u4985
  7752  1E32                     l782:
  7753  1E32  30FF               	movlw	255
  7754  1E33  053D               	andwf	___xxtofl@arg+3,w
  7755  1E34  1D03               	btfss	3,2
  7756  1E35  2E37               	goto	u4991
  7757  1E36  2E38               	goto	u4990
  7758  1E37                     u4991:
  7759  1E37  2E17               	goto	l3014
  7760  1E38                     u4990:
  7761  1E38  2E44               	goto	l3022
  7762  1E39                     l3020:
  7763  1E39  3001               	movlw	1
  7764  1E3A  02B9               	subwf	___xxtofl@exp,f
  7765  1E3B  3001               	movlw	1
  7766  1E3C  00B4               	movwf	??___xxtofl
  7767  1E3D                     u5005:
  7768  1E3D  1003               	clrc
  7769  1E3E  0DBA               	rlf	___xxtofl@arg,f
  7770  1E3F  0DBB               	rlf	___xxtofl@arg+1,f
  7771  1E40  0DBC               	rlf	___xxtofl@arg+2,f
  7772  1E41  0DBD               	rlf	___xxtofl@arg+3,f
  7773  1E42  0BB4               	decfsz	??___xxtofl,f
  7774  1E43  2E3D               	goto	u5005
  7775  1E44                     l3022:
  7776  1E44  1BBC               	btfsc	___xxtofl@arg+2,7
  7777  1E45  2E47               	goto	u5011
  7778  1E46  2E48               	goto	u5010
  7779  1E47                     u5011:
  7780  1E47  2E4E               	goto	l789
  7781  1E48                     u5010:
  7782  1E48                     l3024:
  7783  1E48  3002               	movlw	2
  7784  1E49  0239               	subwf	___xxtofl@exp,w
  7785  1E4A  1803               	skipnc
  7786  1E4B  2E4D               	goto	u5021
  7787  1E4C  2E4E               	goto	u5020
  7788  1E4D                     u5021:
  7789  1E4D  2E39               	goto	l3020
  7790  1E4E                     u5020:
  7791  1E4E                     l789:
  7792  1E4E  1839               	btfsc	___xxtofl@exp,0
  7793  1E4F  2E51               	goto	u5031
  7794  1E50  2E52               	goto	u5030
  7795  1E51                     u5031:
  7796  1E51  2E5A               	goto	l790
  7797  1E52                     u5030:
  7798  1E52                     l3026:
  7799  1E52  30FF               	movlw	255
  7800  1E53  05BA               	andwf	___xxtofl@arg,f
  7801  1E54  30FF               	movlw	255
  7802  1E55  05BB               	andwf	___xxtofl@arg+1,f
  7803  1E56  307F               	movlw	127
  7804  1E57  05BC               	andwf	___xxtofl@arg+2,f
  7805  1E58  30FF               	movlw	255
  7806  1E59  05BD               	andwf	___xxtofl@arg+3,f
  7807  1E5A                     l790:
  7808  1E5A  1003               	clrc
  7809  1E5B  0CB9               	rrf	___xxtofl@exp,f
  7810  1E5C                     l3028:
  7811  1E5C  0839               	movf	___xxtofl@exp,w
  7812  1E5D  00B4               	movwf	??___xxtofl
  7813  1E5E  01B5               	clrf	??___xxtofl+1
  7814  1E5F  01B6               	clrf	??___xxtofl+2
  7815  1E60  01B7               	clrf	??___xxtofl+3
  7816  1E61  3018               	movlw	24
  7817  1E62                     u5045:
  7818  1E62  1003               	clrc
  7819  1E63  0DB4               	rlf	??___xxtofl,f
  7820  1E64  0DB5               	rlf	??___xxtofl+1,f
  7821  1E65  0DB6               	rlf	??___xxtofl+2,f
  7822  1E66  0DB7               	rlf	??___xxtofl+3,f
  7823  1E67                     u5040:
  7824  1E67  3EFF               	addlw	-1
  7825  1E68  1D03               	skipz
  7826  1E69  2E62               	goto	u5045
  7827  1E6A  0834               	movf	??___xxtofl,w
  7828  1E6B  04BA               	iorwf	___xxtofl@arg,f
  7829  1E6C  0835               	movf	??___xxtofl+1,w
  7830  1E6D  04BB               	iorwf	___xxtofl@arg+1,f
  7831  1E6E  0836               	movf	??___xxtofl+2,w
  7832  1E6F  04BC               	iorwf	___xxtofl@arg+2,f
  7833  1E70  0837               	movf	??___xxtofl+3,w
  7834  1E71  04BD               	iorwf	___xxtofl@arg+3,f
  7835  1E72                     l3030:
  7836  1E72  0838               	movf	___xxtofl@sign,w
  7837  1E73  1903               	btfsc	3,2
  7838  1E74  2E76               	goto	u5051
  7839  1E75  2E77               	goto	u5050
  7840  1E76                     u5051:
  7841  1E76  2E7C               	goto	l3036
  7842  1E77                     u5050:
  7843  1E77                     l3032:
  7844  1E77  1FB3               	btfss	___xxtofl@val+3,7
  7845  1E78  2E7A               	goto	u5061
  7846  1E79  2E7B               	goto	u5060
  7847  1E7A                     u5061:
  7848  1E7A  2E7C               	goto	l3036
  7849  1E7B                     u5060:
  7850  1E7B                     l3034:
  7851  1E7B  17BD               	bsf	___xxtofl@arg+3,7
  7852  1E7C                     l3036:
  7853  1E7C  083D               	movf	___xxtofl@arg+3,w
  7854  1E7D  00B3               	movwf	?___xxtofl+3
  7855  1E7E  083C               	movf	___xxtofl@arg+2,w
  7856  1E7F  00B2               	movwf	?___xxtofl+2
  7857  1E80  083B               	movf	___xxtofl@arg+1,w
  7858  1E81  00B1               	movwf	?___xxtofl+1
  7859  1E82  083A               	movf	___xxtofl@arg,w
  7860  1E83  00B0               	movwf	?___xxtofl
  7861  1E84                     l778:
  7862  1E84  0008               	return
  7863  1E85                     __end_of___xxtofl:
  7864                           
  7865                           	psect	text14
  7866  18E3                     __ptext14:	
  7867 ;; *************** function ___wmul *****************
  7868 ;; Defined at:
  7869 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul16.c"
  7870 ;; Parameters:    Size  Location     Type
  7871 ;;  multiplier      2    0[BANK0 ] unsigned int 
  7872 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  7873 ;; Auto vars:     Size  Location     Type
  7874 ;;  product         2    4[BANK0 ] unsigned int 
  7875 ;; Return value:  Size  Location     Type
  7876 ;;                  2    0[BANK0 ] unsigned int 
  7877 ;; Registers used:
  7878 ;;		wreg, status,2, status,0
  7879 ;; Tracked objects:
  7880 ;;		On entry : 0/0
  7881 ;;		On exit  : 0/0
  7882 ;;		Unchanged: 0/0
  7883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7884 ;;      Params:         0       4       0       0       0
  7885 ;;      Locals:         0       2       0       0       0
  7886 ;;      Temps:          0       0       0       0       0
  7887 ;;      Totals:         0       6       0       0       0
  7888 ;;Total ram usage:        6 bytes
  7889 ;; Hardware stack levels used: 1
  7890 ;; Hardware stack levels required when called: 2
  7891 ;; This function calls:
  7892 ;;		Nothing
  7893 ;; This function is called by:
  7894 ;;		_sprintf
  7895 ;; This function uses a non-reentrant model
  7896 ;;
  7897                           
  7898                           
  7899                           ;psect for function ___wmul
  7900  18E3                     ___wmul:
  7901  18E3                     l4068:	
  7902                           ;incstack = 0
  7903                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  7904                           
  7905  18E3  1283               	bcf	3,5	;RP0=0, select bank0
  7906  18E4  1303               	bcf	3,6	;RP1=0, select bank0
  7907  18E5  01A4               	clrf	___wmul@product
  7908  18E6  01A5               	clrf	___wmul@product+1
  7909  18E7                     l4070:
  7910  18E7  1C20               	btfss	___wmul@multiplier,0
  7911  18E8  28EA               	goto	u7161
  7912  18E9  28EB               	goto	u7160
  7913  18EA                     u7161:
  7914  18EA  28F1               	goto	l309
  7915  18EB                     u7160:
  7916  18EB                     l4072:
  7917  18EB  0822               	movf	___wmul@multiplicand,w
  7918  18EC  07A4               	addwf	___wmul@product,f
  7919  18ED  1803               	skipnc
  7920  18EE  0AA5               	incf	___wmul@product+1,f
  7921  18EF  0823               	movf	___wmul@multiplicand+1,w
  7922  18F0  07A5               	addwf	___wmul@product+1,f
  7923  18F1                     l309:
  7924  18F1  3001               	movlw	1
  7925  18F2                     u7175:
  7926  18F2  1003               	clrc
  7927  18F3  0DA2               	rlf	___wmul@multiplicand,f
  7928  18F4  0DA3               	rlf	___wmul@multiplicand+1,f
  7929  18F5  3EFF               	addlw	-1
  7930  18F6  1D03               	skipz
  7931  18F7  28F2               	goto	u7175
  7932  18F8                     l4074:
  7933  18F8  3001               	movlw	1
  7934  18F9                     u7185:
  7935  18F9  1003               	clrc
  7936  18FA  0CA1               	rrf	___wmul@multiplier+1,f
  7937  18FB  0CA0               	rrf	___wmul@multiplier,f
  7938  18FC  3EFF               	addlw	-1
  7939  18FD  1D03               	skipz
  7940  18FE  28F9               	goto	u7185
  7941  18FF                     l4076:
  7942  18FF  0820               	movf	___wmul@multiplier,w
  7943  1900  0421               	iorwf	___wmul@multiplier+1,w
  7944  1901  1D03               	btfss	3,2
  7945  1902  2904               	goto	u7191
  7946  1903  2905               	goto	u7190
  7947  1904                     u7191:
  7948  1904  28E7               	goto	l4070
  7949  1905                     u7190:
  7950  1905                     l4078:
  7951  1905  0825               	movf	___wmul@product+1,w
  7952  1906  00A1               	movwf	?___wmul+1
  7953  1907  0824               	movf	___wmul@product,w
  7954  1908  00A0               	movwf	?___wmul
  7955  1909                     l311:
  7956  1909  0008               	return
  7957  190A                     __end_of___wmul:
  7958                           
  7959                           	psect	text15
  7960  1AD8                     __ptext15:	
  7961 ;; *************** function ___llmod *****************
  7962 ;; Defined at:
  7963 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\llmod.c"
  7964 ;; Parameters:    Size  Location     Type
  7965 ;;  divisor         4    0[BANK0 ] unsigned long 
  7966 ;;  dividend        4    4[BANK0 ] unsigned long 
  7967 ;; Auto vars:     Size  Location     Type
  7968 ;;  counter         1    9[BANK0 ] unsigned char 
  7969 ;; Return value:  Size  Location     Type
  7970 ;;                  4    0[BANK0 ] unsigned long 
  7971 ;; Registers used:
  7972 ;;		wreg, status,2, status,0
  7973 ;; Tracked objects:
  7974 ;;		On entry : 0/0
  7975 ;;		On exit  : 0/0
  7976 ;;		Unchanged: 0/0
  7977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7978 ;;      Params:         0       8       0       0       0
  7979 ;;      Locals:         0       1       0       0       0
  7980 ;;      Temps:          0       1       0       0       0
  7981 ;;      Totals:         0      10       0       0       0
  7982 ;;Total ram usage:       10 bytes
  7983 ;; Hardware stack levels used: 1
  7984 ;; Hardware stack levels required when called: 2
  7985 ;; This function calls:
  7986 ;;		Nothing
  7987 ;; This function is called by:
  7988 ;;		_sprintf
  7989 ;; This function uses a non-reentrant model
  7990 ;;
  7991                           
  7992                           
  7993                           ;psect for function ___llmod
  7994  1AD8                     ___llmod:
  7995  1AD8                     l4146:	
  7996                           ;incstack = 0
  7997                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  7998                           
  7999  1AD8  1283               	bcf	3,5	;RP0=0, select bank0
  8000  1AD9  1303               	bcf	3,6	;RP1=0, select bank0
  8001  1ADA  0823               	movf	___llmod@divisor+3,w
  8002  1ADB  0422               	iorwf	___llmod@divisor+2,w
  8003  1ADC  0421               	iorwf	___llmod@divisor+1,w
  8004  1ADD  0420               	iorwf	___llmod@divisor,w
  8005  1ADE  1903               	skipnz
  8006  1ADF  2AE1               	goto	u7381
  8007  1AE0  2AE2               	goto	u7380
  8008  1AE1                     u7381:
  8009  1AE1  2B25               	goto	l4162
  8010  1AE2                     u7380:
  8011  1AE2                     l4148:
  8012  1AE2  01A9               	clrf	___llmod@counter
  8013  1AE3  0AA9               	incf	___llmod@counter,f
  8014  1AE4  2AF2               	goto	l4152
  8015  1AE5                     l4150:
  8016  1AE5  3001               	movlw	1
  8017  1AE6  00A8               	movwf	??___llmod
  8018  1AE7                     u7395:
  8019  1AE7  1003               	clrc
  8020  1AE8  0DA0               	rlf	___llmod@divisor,f
  8021  1AE9  0DA1               	rlf	___llmod@divisor+1,f
  8022  1AEA  0DA2               	rlf	___llmod@divisor+2,f
  8023  1AEB  0DA3               	rlf	___llmod@divisor+3,f
  8024  1AEC  0BA8               	decfsz	??___llmod,f
  8025  1AED  2AE7               	goto	u7395
  8026  1AEE  3001               	movlw	1
  8027  1AEF  00A8               	movwf	??___llmod
  8028  1AF0  0828               	movf	??___llmod,w
  8029  1AF1  07A9               	addwf	___llmod@counter,f
  8030  1AF2                     l4152:
  8031  1AF2  1FA3               	btfss	___llmod@divisor+3,7
  8032  1AF3  2AF5               	goto	u7401
  8033  1AF4  2AF6               	goto	u7400
  8034  1AF5                     u7401:
  8035  1AF5  2AE5               	goto	l4150
  8036  1AF6                     u7400:
  8037  1AF6                     l4154:
  8038  1AF6  0823               	movf	___llmod@divisor+3,w
  8039  1AF7  0227               	subwf	___llmod@dividend+3,w
  8040  1AF8  1D03               	skipz
  8041  1AF9  2B04               	goto	u7415
  8042  1AFA  0822               	movf	___llmod@divisor+2,w
  8043  1AFB  0226               	subwf	___llmod@dividend+2,w
  8044  1AFC  1D03               	skipz
  8045  1AFD  2B04               	goto	u7415
  8046  1AFE  0821               	movf	___llmod@divisor+1,w
  8047  1AFF  0225               	subwf	___llmod@dividend+1,w
  8048  1B00  1D03               	skipz
  8049  1B01  2B04               	goto	u7415
  8050  1B02  0820               	movf	___llmod@divisor,w
  8051  1B03  0224               	subwf	___llmod@dividend,w
  8052  1B04                     u7415:
  8053  1B04  1C03               	skipc
  8054  1B05  2B07               	goto	u7411
  8055  1B06  2B08               	goto	u7410
  8056  1B07                     u7411:
  8057  1B07  2B16               	goto	l4158
  8058  1B08                     u7410:
  8059  1B08                     l4156:
  8060  1B08  0820               	movf	___llmod@divisor,w
  8061  1B09  02A4               	subwf	___llmod@dividend,f
  8062  1B0A  0821               	movf	___llmod@divisor+1,w
  8063  1B0B  1C03               	skipc
  8064  1B0C  0F21               	incfsz	___llmod@divisor+1,w
  8065  1B0D  02A5               	subwf	___llmod@dividend+1,f
  8066  1B0E  0822               	movf	___llmod@divisor+2,w
  8067  1B0F  1C03               	skipc
  8068  1B10  0F22               	incfsz	___llmod@divisor+2,w
  8069  1B11  02A6               	subwf	___llmod@dividend+2,f
  8070  1B12  0823               	movf	___llmod@divisor+3,w
  8071  1B13  1C03               	skipc
  8072  1B14  0F23               	incfsz	___llmod@divisor+3,w
  8073  1B15  02A7               	subwf	___llmod@dividend+3,f
  8074  1B16                     l4158:
  8075  1B16  3001               	movlw	1
  8076  1B17                     u7425:
  8077  1B17  1003               	clrc
  8078  1B18  0CA3               	rrf	___llmod@divisor+3,f
  8079  1B19  0CA2               	rrf	___llmod@divisor+2,f
  8080  1B1A  0CA1               	rrf	___llmod@divisor+1,f
  8081  1B1B  0CA0               	rrf	___llmod@divisor,f
  8082  1B1C  3EFF               	addlw	-1
  8083  1B1D  1D03               	skipz
  8084  1B1E  2B17               	goto	u7425
  8085  1B1F                     l4160:
  8086  1B1F  3001               	movlw	1
  8087  1B20  02A9               	subwf	___llmod@counter,f
  8088  1B21  1D03               	btfss	3,2
  8089  1B22  2B24               	goto	u7431
  8090  1B23  2B25               	goto	u7430
  8091  1B24                     u7431:
  8092  1B24  2AF6               	goto	l4154
  8093  1B25                     u7430:
  8094  1B25                     l4162:
  8095  1B25  0827               	movf	___llmod@dividend+3,w
  8096  1B26  00A3               	movwf	?___llmod+3
  8097  1B27  0826               	movf	___llmod@dividend+2,w
  8098  1B28  00A2               	movwf	?___llmod+2
  8099  1B29  0825               	movf	___llmod@dividend+1,w
  8100  1B2A  00A1               	movwf	?___llmod+1
  8101  1B2B  0824               	movf	___llmod@dividend,w
  8102  1B2C  00A0               	movwf	?___llmod
  8103  1B2D                     l565:
  8104  1B2D  0008               	return
  8105  1B2E                     __end_of___llmod:
  8106                           
  8107                           	psect	text16
  8108  1C41                     __ptext16:	
  8109 ;; *************** function ___lldiv *****************
  8110 ;; Defined at:
  8111 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\__lldiv.c"
  8112 ;; Parameters:    Size  Location     Type
  8113 ;;  divisor         4    0[BANK0 ] unsigned long 
  8114 ;;  dividend        4    4[BANK0 ] unsigned long 
  8115 ;; Auto vars:     Size  Location     Type
  8116 ;;  quotient        4    9[BANK0 ] unsigned long 
  8117 ;;  counter         1   13[BANK0 ] unsigned char 
  8118 ;; Return value:  Size  Location     Type
  8119 ;;                  4    0[BANK0 ] unsigned long 
  8120 ;; Registers used:
  8121 ;;		wreg, status,2, status,0
  8122 ;; Tracked objects:
  8123 ;;		On entry : 0/0
  8124 ;;		On exit  : 0/0
  8125 ;;		Unchanged: 0/0
  8126 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8127 ;;      Params:         0       8       0       0       0
  8128 ;;      Locals:         0       5       0       0       0
  8129 ;;      Temps:          0       1       0       0       0
  8130 ;;      Totals:         0      14       0       0       0
  8131 ;;Total ram usage:       14 bytes
  8132 ;; Hardware stack levels used: 1
  8133 ;; Hardware stack levels required when called: 2
  8134 ;; This function calls:
  8135 ;;		Nothing
  8136 ;; This function is called by:
  8137 ;;		_sprintf
  8138 ;; This function uses a non-reentrant model
  8139 ;;
  8140                           
  8141                           
  8142                           ;psect for function ___lldiv
  8143  1C41                     ___lldiv:
  8144  1C41                     l4082:	
  8145                           ;incstack = 0
  8146                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  8147                           
  8148  1C41  3000               	movlw	0
  8149  1C42  1283               	bcf	3,5	;RP0=0, select bank0
  8150  1C43  1303               	bcf	3,6	;RP1=0, select bank0
  8151  1C44  00AC               	movwf	___lldiv@quotient+3
  8152  1C45  3000               	movlw	0
  8153  1C46  00AB               	movwf	___lldiv@quotient+2
  8154  1C47  3000               	movlw	0
  8155  1C48  00AA               	movwf	___lldiv@quotient+1
  8156  1C49  3000               	movlw	0
  8157  1C4A  00A9               	movwf	___lldiv@quotient
  8158  1C4B  0823               	movf	___lldiv@divisor+3,w
  8159  1C4C  0422               	iorwf	___lldiv@divisor+2,w
  8160  1C4D  0421               	iorwf	___lldiv@divisor+1,w
  8161  1C4E  0420               	iorwf	___lldiv@divisor,w
  8162  1C4F  1903               	skipnz
  8163  1C50  2C52               	goto	u7201
  8164  1C51  2C53               	goto	u7200
  8165  1C52                     u7201:
  8166  1C52  2CA0               	goto	l4102
  8167  1C53                     u7200:
  8168  1C53                     l4084:
  8169  1C53  01AD               	clrf	___lldiv@counter
  8170  1C54  0AAD               	incf	___lldiv@counter,f
  8171  1C55  2C63               	goto	l4088
  8172  1C56                     l4086:
  8173  1C56  3001               	movlw	1
  8174  1C57  00A8               	movwf	??___lldiv
  8175  1C58                     u7215:
  8176  1C58  1003               	clrc
  8177  1C59  0DA0               	rlf	___lldiv@divisor,f
  8178  1C5A  0DA1               	rlf	___lldiv@divisor+1,f
  8179  1C5B  0DA2               	rlf	___lldiv@divisor+2,f
  8180  1C5C  0DA3               	rlf	___lldiv@divisor+3,f
  8181  1C5D  0BA8               	decfsz	??___lldiv,f
  8182  1C5E  2C58               	goto	u7215
  8183  1C5F  3001               	movlw	1
  8184  1C60  00A8               	movwf	??___lldiv
  8185  1C61  0828               	movf	??___lldiv,w
  8186  1C62  07AD               	addwf	___lldiv@counter,f
  8187  1C63                     l4088:
  8188  1C63  1FA3               	btfss	___lldiv@divisor+3,7
  8189  1C64  2C66               	goto	u7221
  8190  1C65  2C67               	goto	u7220
  8191  1C66                     u7221:
  8192  1C66  2C56               	goto	l4086
  8193  1C67                     u7220:
  8194  1C67                     l4090:
  8195  1C67  3001               	movlw	1
  8196  1C68  00A8               	movwf	??___lldiv
  8197  1C69                     u7235:
  8198  1C69  1003               	clrc
  8199  1C6A  0DA9               	rlf	___lldiv@quotient,f
  8200  1C6B  0DAA               	rlf	___lldiv@quotient+1,f
  8201  1C6C  0DAB               	rlf	___lldiv@quotient+2,f
  8202  1C6D  0DAC               	rlf	___lldiv@quotient+3,f
  8203  1C6E  0BA8               	decfsz	??___lldiv,f
  8204  1C6F  2C69               	goto	u7235
  8205  1C70                     l4092:
  8206  1C70  0823               	movf	___lldiv@divisor+3,w
  8207  1C71  0227               	subwf	___lldiv@dividend+3,w
  8208  1C72  1D03               	skipz
  8209  1C73  2C7E               	goto	u7245
  8210  1C74  0822               	movf	___lldiv@divisor+2,w
  8211  1C75  0226               	subwf	___lldiv@dividend+2,w
  8212  1C76  1D03               	skipz
  8213  1C77  2C7E               	goto	u7245
  8214  1C78  0821               	movf	___lldiv@divisor+1,w
  8215  1C79  0225               	subwf	___lldiv@dividend+1,w
  8216  1C7A  1D03               	skipz
  8217  1C7B  2C7E               	goto	u7245
  8218  1C7C  0820               	movf	___lldiv@divisor,w
  8219  1C7D  0224               	subwf	___lldiv@dividend,w
  8220  1C7E                     u7245:
  8221  1C7E  1C03               	skipc
  8222  1C7F  2C81               	goto	u7241
  8223  1C80  2C82               	goto	u7240
  8224  1C81                     u7241:
  8225  1C81  2C91               	goto	l4098
  8226  1C82                     u7240:
  8227  1C82                     l4094:
  8228  1C82  0820               	movf	___lldiv@divisor,w
  8229  1C83  02A4               	subwf	___lldiv@dividend,f
  8230  1C84  0821               	movf	___lldiv@divisor+1,w
  8231  1C85  1C03               	skipc
  8232  1C86  0F21               	incfsz	___lldiv@divisor+1,w
  8233  1C87  02A5               	subwf	___lldiv@dividend+1,f
  8234  1C88  0822               	movf	___lldiv@divisor+2,w
  8235  1C89  1C03               	skipc
  8236  1C8A  0F22               	incfsz	___lldiv@divisor+2,w
  8237  1C8B  02A6               	subwf	___lldiv@dividend+2,f
  8238  1C8C  0823               	movf	___lldiv@divisor+3,w
  8239  1C8D  1C03               	skipc
  8240  1C8E  0F23               	incfsz	___lldiv@divisor+3,w
  8241  1C8F  02A7               	subwf	___lldiv@dividend+3,f
  8242  1C90                     l4096:
  8243  1C90  1429               	bsf	___lldiv@quotient,0
  8244  1C91                     l4098:
  8245  1C91  3001               	movlw	1
  8246  1C92                     u7255:
  8247  1C92  1003               	clrc
  8248  1C93  0CA3               	rrf	___lldiv@divisor+3,f
  8249  1C94  0CA2               	rrf	___lldiv@divisor+2,f
  8250  1C95  0CA1               	rrf	___lldiv@divisor+1,f
  8251  1C96  0CA0               	rrf	___lldiv@divisor,f
  8252  1C97  3EFF               	addlw	-1
  8253  1C98  1D03               	skipz
  8254  1C99  2C92               	goto	u7255
  8255  1C9A                     l4100:
  8256  1C9A  3001               	movlw	1
  8257  1C9B  02AD               	subwf	___lldiv@counter,f
  8258  1C9C  1D03               	btfss	3,2
  8259  1C9D  2C9F               	goto	u7261
  8260  1C9E  2CA0               	goto	u7260
  8261  1C9F                     u7261:
  8262  1C9F  2C67               	goto	l4090
  8263  1CA0                     u7260:
  8264  1CA0                     l4102:
  8265  1CA0  082C               	movf	___lldiv@quotient+3,w
  8266  1CA1  00A3               	movwf	?___lldiv+3
  8267  1CA2  082B               	movf	___lldiv@quotient+2,w
  8268  1CA3  00A2               	movwf	?___lldiv+2
  8269  1CA4  082A               	movf	___lldiv@quotient+1,w
  8270  1CA5  00A1               	movwf	?___lldiv+1
  8271  1CA6  0829               	movf	___lldiv@quotient,w
  8272  1CA7  00A0               	movwf	?___lldiv
  8273  1CA8                     l345:
  8274  1CA8  0008               	return
  8275  1CA9                     __end_of___lldiv:
  8276                           
  8277                           	psect	text17
  8278  1CA9                     __ptext17:	
  8279 ;; *************** function ___fltol *****************
  8280 ;; Defined at:
  8281 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\fltol.c"
  8282 ;; Parameters:    Size  Location     Type
  8283 ;;  f1              4   61[BANK0 ] unsigned long 
  8284 ;; Auto vars:     Size  Location     Type
  8285 ;;  exp1            1   71[BANK0 ] unsigned char 
  8286 ;;  sign1           1   70[BANK0 ] unsigned char 
  8287 ;; Return value:  Size  Location     Type
  8288 ;;                  4   61[BANK0 ] long 
  8289 ;; Registers used:
  8290 ;;		wreg, status,2, status,0
  8291 ;; Tracked objects:
  8292 ;;		On entry : 0/0
  8293 ;;		On exit  : 0/0
  8294 ;;		Unchanged: 0/0
  8295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8296 ;;      Params:         0       4       0       0       0
  8297 ;;      Locals:         0       2       0       0       0
  8298 ;;      Temps:          0       5       0       0       0
  8299 ;;      Totals:         0      11       0       0       0
  8300 ;;Total ram usage:       11 bytes
  8301 ;; Hardware stack levels used: 1
  8302 ;; Hardware stack levels required when called: 2
  8303 ;; This function calls:
  8304 ;;		Nothing
  8305 ;; This function is called by:
  8306 ;;		_sprintf
  8307 ;; This function uses a non-reentrant model
  8308 ;;
  8309                           
  8310                           
  8311                           ;psect for function ___fltol
  8312  1CA9                     ___fltol:
  8313  1CA9                     l2934:	
  8314                           ;incstack = 0
  8315                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  8316                           
  8317  1CA9  1003               	clrc
  8318  1CAA  1283               	bcf	3,5	;RP0=0, select bank0
  8319  1CAB  1303               	bcf	3,6	;RP1=0, select bank0
  8320  1CAC  0D5F               	rlf	___fltol@f1+2,w
  8321  1CAD  0D60               	rlf	___fltol@f1+3,w
  8322  1CAE  00E1               	movwf	??___fltol
  8323  1CAF  0861               	movf	??___fltol,w
  8324  1CB0  00E7               	movwf	___fltol@exp1
  8325  1CB1  0867               	movf	___fltol@exp1,w
  8326  1CB2  1D03               	btfss	3,2
  8327  1CB3  2CB5               	goto	u4771
  8328  1CB4  2CB6               	goto	u4770
  8329  1CB5                     u4771:
  8330  1CB5  2CBF               	goto	l2940
  8331  1CB6                     u4770:
  8332  1CB6                     l2936:
  8333  1CB6  3000               	movlw	0
  8334  1CB7  00E0               	movwf	?___fltol+3
  8335  1CB8  3000               	movlw	0
  8336  1CB9  00DF               	movwf	?___fltol+2
  8337  1CBA  3000               	movlw	0
  8338  1CBB  00DE               	movwf	?___fltol+1
  8339  1CBC  3000               	movlw	0
  8340  1CBD  00DD               	movwf	?___fltol
  8341  1CBE  2D24               	goto	l512
  8342  1CBF                     l2940:
  8343  1CBF  085D               	movf	___fltol@f1,w
  8344  1CC0  00E1               	movwf	??___fltol
  8345  1CC1  085E               	movf	___fltol@f1+1,w
  8346  1CC2  00E2               	movwf	??___fltol+1
  8347  1CC3  085F               	movf	___fltol@f1+2,w
  8348  1CC4  00E3               	movwf	??___fltol+2
  8349  1CC5  0860               	movf	___fltol@f1+3,w
  8350  1CC6  00E4               	movwf	??___fltol+3
  8351  1CC7  301F               	movlw	31
  8352  1CC8                     u4785:
  8353  1CC8  1003               	clrc
  8354  1CC9  0CE4               	rrf	??___fltol+3,f
  8355  1CCA  0CE3               	rrf	??___fltol+2,f
  8356  1CCB  0CE2               	rrf	??___fltol+1,f
  8357  1CCC  0CE1               	rrf	??___fltol,f
  8358  1CCD                     u4780:
  8359  1CCD  3EFF               	addlw	-1
  8360  1CCE  1D03               	skipz
  8361  1CCF  2CC8               	goto	u4785
  8362  1CD0  0861               	movf	??___fltol,w
  8363  1CD1  00E5               	movwf	??___fltol+4
  8364  1CD2  0865               	movf	??___fltol+4,w
  8365  1CD3  00E6               	movwf	___fltol@sign1
  8366  1CD4                     l2942:
  8367  1CD4  17DF               	bsf	___fltol@f1+2,7
  8368  1CD5                     l2944:
  8369  1CD5  30FF               	movlw	255
  8370  1CD6  05DD               	andwf	___fltol@f1,f
  8371  1CD7  30FF               	movlw	255
  8372  1CD8  05DE               	andwf	___fltol@f1+1,f
  8373  1CD9  30FF               	movlw	255
  8374  1CDA  05DF               	andwf	___fltol@f1+2,f
  8375  1CDB  3000               	movlw	0
  8376  1CDC  05E0               	andwf	___fltol@f1+3,f
  8377  1CDD                     l2946:
  8378  1CDD  3096               	movlw	150
  8379  1CDE  02E7               	subwf	___fltol@exp1,f
  8380  1CDF                     l2948:
  8381  1CDF  1FE7               	btfss	___fltol@exp1,7
  8382  1CE0  2CE2               	goto	u4791
  8383  1CE1  2CE3               	goto	u4790
  8384  1CE2                     u4791:
  8385  1CE2  2CFD               	goto	l2958
  8386  1CE3                     u4790:
  8387  1CE3                     l2950:
  8388  1CE3  0867               	movf	___fltol@exp1,w
  8389  1CE4  3A80               	xorlw	128
  8390  1CE5  3E97               	addlw	151
  8391  1CE6  1803               	skipnc
  8392  1CE7  2CE9               	goto	u4801
  8393  1CE8  2CEA               	goto	u4800
  8394  1CE9                     u4801:
  8395  1CE9  2CEB               	goto	l2956
  8396  1CEA                     u4800:
  8397  1CEA  2CB6               	goto	l2936
  8398  1CEB                     l2956:
  8399  1CEB  3001               	movlw	1
  8400  1CEC                     u4815:
  8401  1CEC  1003               	clrc
  8402  1CED  0CE0               	rrf	___fltol@f1+3,f
  8403  1CEE  0CDF               	rrf	___fltol@f1+2,f
  8404  1CEF  0CDE               	rrf	___fltol@f1+1,f
  8405  1CF0  0CDD               	rrf	___fltol@f1,f
  8406  1CF1  3EFF               	addlw	-1
  8407  1CF2  1D03               	skipz
  8408  1CF3  2CEC               	goto	u4815
  8409  1CF4  3001               	movlw	1
  8410  1CF5  00E1               	movwf	??___fltol
  8411  1CF6  0861               	movf	??___fltol,w
  8412  1CF7  07E7               	addwf	___fltol@exp1,f
  8413  1CF8  1D03               	btfss	3,2
  8414  1CF9  2CFB               	goto	u4821
  8415  1CFA  2CFC               	goto	u4820
  8416  1CFB                     u4821:
  8417  1CFB  2CEB               	goto	l2956
  8418  1CFC                     u4820:
  8419  1CFC  2D14               	goto	l2966
  8420  1CFD                     l2958:
  8421  1CFD  3020               	movlw	32
  8422  1CFE  0267               	subwf	___fltol@exp1,w
  8423  1CFF  1C03               	skipc
  8424  1D00  2D02               	goto	u4831
  8425  1D01  2D03               	goto	u4830
  8426  1D02                     u4831:
  8427  1D02  2D0F               	goto	l519
  8428  1D03                     u4830:
  8429  1D03  2CB6               	goto	l2936
  8430  1D04                     l2964:
  8431  1D04  3001               	movlw	1
  8432  1D05  00E1               	movwf	??___fltol
  8433  1D06                     u4845:
  8434  1D06  1003               	clrc
  8435  1D07  0DDD               	rlf	___fltol@f1,f
  8436  1D08  0DDE               	rlf	___fltol@f1+1,f
  8437  1D09  0DDF               	rlf	___fltol@f1+2,f
  8438  1D0A  0DE0               	rlf	___fltol@f1+3,f
  8439  1D0B  0BE1               	decfsz	??___fltol,f
  8440  1D0C  2D06               	goto	u4845
  8441  1D0D  3001               	movlw	1
  8442  1D0E  02E7               	subwf	___fltol@exp1,f
  8443  1D0F                     l519:
  8444  1D0F  0867               	movf	___fltol@exp1,w
  8445  1D10  1D03               	btfss	3,2
  8446  1D11  2D13               	goto	u4851
  8447  1D12  2D14               	goto	u4850
  8448  1D13                     u4851:
  8449  1D13  2D04               	goto	l2964
  8450  1D14                     u4850:
  8451  1D14                     l2966:
  8452  1D14  0866               	movf	___fltol@sign1,w
  8453  1D15  1903               	btfsc	3,2
  8454  1D16  2D18               	goto	u4861
  8455  1D17  2D19               	goto	u4860
  8456  1D18                     u4861:
  8457  1D18  2D24               	goto	l522
  8458  1D19                     u4860:
  8459  1D19                     l2968:
  8460  1D19  09DD               	comf	___fltol@f1,f
  8461  1D1A  09DE               	comf	___fltol@f1+1,f
  8462  1D1B  09DF               	comf	___fltol@f1+2,f
  8463  1D1C  09E0               	comf	___fltol@f1+3,f
  8464  1D1D  0ADD               	incf	___fltol@f1,f
  8465  1D1E  1903               	skipnz
  8466  1D1F  0ADE               	incf	___fltol@f1+1,f
  8467  1D20  1903               	skipnz
  8468  1D21  0ADF               	incf	___fltol@f1+2,f
  8469  1D22  1903               	skipnz
  8470  1D23  0AE0               	incf	___fltol@f1+3,f
  8471  1D24                     l522:
  8472  1D24                     l512:
  8473  1D24  0008               	return
  8474  1D25                     __end_of___fltol:
  8475                           
  8476                           	psect	text18
  8477  1A88                     __ptext18:	
  8478 ;; *************** function ___flsub *****************
  8479 ;; Defined at:
  8480 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\sprcadd.c"
  8481 ;; Parameters:    Size  Location     Type
  8482 ;;  a               4    4[BANK1 ] long 
  8483 ;;  b               4    8[BANK1 ] long 
  8484 ;; Auto vars:     Size  Location     Type
  8485 ;;		None
  8486 ;; Return value:  Size  Location     Type
  8487 ;;                  4    4[BANK1 ] long 
  8488 ;; Registers used:
  8489 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  8490 ;; Tracked objects:
  8491 ;;		On entry : 0/0
  8492 ;;		On exit  : 0/0
  8493 ;;		Unchanged: 0/0
  8494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8495 ;;      Params:         0       0       8       0       0
  8496 ;;      Locals:         0       0       0       0       0
  8497 ;;      Temps:          0       0       0       0       0
  8498 ;;      Totals:         0       0       8       0       0
  8499 ;;Total ram usage:        8 bytes
  8500 ;; Hardware stack levels used: 1
  8501 ;; Hardware stack levels required when called: 3
  8502 ;; This function calls:
  8503 ;;		___fladd
  8504 ;; This function is called by:
  8505 ;;		_sprintf
  8506 ;; This function uses a non-reentrant model
  8507 ;;
  8508                           
  8509                           
  8510                           ;psect for function ___flsub
  8511  1A88                     ___flsub:
  8512  1A88                     l4166:	
  8513                           ;incstack = 0
  8514                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  8515                           
  8516  1A88  3080               	movlw	128
  8517  1A89  1683               	bsf	3,5	;RP0=1, select bank1
  8518  1A8A  1303               	bcf	3,6	;RP1=0, select bank1
  8519  1A8B  06A7               	xorwf	(___flsub@a+3)^(0+128),f
  8520  1A8C                     l4168:
  8521  1A8C  082B               	movf	(___flsub@b+3)^(0+128),w
  8522  1A8D  1283               	bcf	3,5	;RP0=0, select bank0
  8523  1A8E  1303               	bcf	3,6	;RP1=0, select bank0
  8524  1A8F  00E1               	movwf	___fladd@b+3
  8525  1A90  1683               	bsf	3,5	;RP0=1, select bank1
  8526  1A91  1303               	bcf	3,6	;RP1=0, select bank1
  8527  1A92  082A               	movf	(___flsub@b+2)^(0+128),w
  8528  1A93  1283               	bcf	3,5	;RP0=0, select bank0
  8529  1A94  1303               	bcf	3,6	;RP1=0, select bank0
  8530  1A95  00E0               	movwf	___fladd@b+2
  8531  1A96  1683               	bsf	3,5	;RP0=1, select bank1
  8532  1A97  1303               	bcf	3,6	;RP1=0, select bank1
  8533  1A98  0829               	movf	(___flsub@b+1)^(0+128),w
  8534  1A99  1283               	bcf	3,5	;RP0=0, select bank0
  8535  1A9A  1303               	bcf	3,6	;RP1=0, select bank0
  8536  1A9B  00DF               	movwf	___fladd@b+1
  8537  1A9C  1683               	bsf	3,5	;RP0=1, select bank1
  8538  1A9D  1303               	bcf	3,6	;RP1=0, select bank1
  8539  1A9E  0828               	movf	___flsub@b^(0+128),w
  8540  1A9F  1283               	bcf	3,5	;RP0=0, select bank0
  8541  1AA0  1303               	bcf	3,6	;RP1=0, select bank0
  8542  1AA1  00DE               	movwf	___fladd@b
  8543  1AA2  1683               	bsf	3,5	;RP0=1, select bank1
  8544  1AA3  1303               	bcf	3,6	;RP1=0, select bank1
  8545  1AA4  0827               	movf	(___flsub@a+3)^(0+128),w
  8546  1AA5  1283               	bcf	3,5	;RP0=0, select bank0
  8547  1AA6  1303               	bcf	3,6	;RP1=0, select bank0
  8548  1AA7  00E5               	movwf	___fladd@a+3
  8549  1AA8  1683               	bsf	3,5	;RP0=1, select bank1
  8550  1AA9  1303               	bcf	3,6	;RP1=0, select bank1
  8551  1AAA  0826               	movf	(___flsub@a+2)^(0+128),w
  8552  1AAB  1283               	bcf	3,5	;RP0=0, select bank0
  8553  1AAC  1303               	bcf	3,6	;RP1=0, select bank0
  8554  1AAD  00E4               	movwf	___fladd@a+2
  8555  1AAE  1683               	bsf	3,5	;RP0=1, select bank1
  8556  1AAF  1303               	bcf	3,6	;RP1=0, select bank1
  8557  1AB0  0825               	movf	(___flsub@a+1)^(0+128),w
  8558  1AB1  1283               	bcf	3,5	;RP0=0, select bank0
  8559  1AB2  1303               	bcf	3,6	;RP1=0, select bank0
  8560  1AB3  00E3               	movwf	___fladd@a+1
  8561  1AB4  1683               	bsf	3,5	;RP0=1, select bank1
  8562  1AB5  1303               	bcf	3,6	;RP1=0, select bank1
  8563  1AB6  0824               	movf	___flsub@a^(0+128),w
  8564  1AB7  1283               	bcf	3,5	;RP0=0, select bank0
  8565  1AB8  1303               	bcf	3,6	;RP1=0, select bank0
  8566  1AB9  00E2               	movwf	___fladd@a
  8567  1ABA  160A  118A  24C0  160A  158A  	fcall	___fladd
  8568  1ABF  1283               	bcf	3,5	;RP0=0, select bank0
  8569  1AC0  1303               	bcf	3,6	;RP1=0, select bank0
  8570  1AC1  0861               	movf	?___fladd+3,w
  8571  1AC2  1683               	bsf	3,5	;RP0=1, select bank1
  8572  1AC3  1303               	bcf	3,6	;RP1=0, select bank1
  8573  1AC4  00A7               	movwf	(?___flsub+3)^(0+128)
  8574  1AC5  1283               	bcf	3,5	;RP0=0, select bank0
  8575  1AC6  1303               	bcf	3,6	;RP1=0, select bank0
  8576  1AC7  0860               	movf	?___fladd+2,w
  8577  1AC8  1683               	bsf	3,5	;RP0=1, select bank1
  8578  1AC9  1303               	bcf	3,6	;RP1=0, select bank1
  8579  1ACA  00A6               	movwf	(?___flsub+2)^(0+128)
  8580  1ACB  1283               	bcf	3,5	;RP0=0, select bank0
  8581  1ACC  1303               	bcf	3,6	;RP1=0, select bank0
  8582  1ACD  085F               	movf	?___fladd+1,w
  8583  1ACE  1683               	bsf	3,5	;RP0=1, select bank1
  8584  1ACF  1303               	bcf	3,6	;RP1=0, select bank1
  8585  1AD0  00A5               	movwf	(?___flsub+1)^(0+128)
  8586  1AD1  1283               	bcf	3,5	;RP0=0, select bank0
  8587  1AD2  1303               	bcf	3,6	;RP1=0, select bank0
  8588  1AD3  085E               	movf	?___fladd,w
  8589  1AD4  1683               	bsf	3,5	;RP0=1, select bank1
  8590  1AD5  1303               	bcf	3,6	;RP1=0, select bank1
  8591  1AD6  00A4               	movwf	?___flsub^(0+128)
  8592  1AD7                     l682:
  8593  1AD7  0008               	return
  8594  1AD8                     __end_of___flsub:
  8595                           
  8596                           	psect	text19
  8597  14C0                     __ptext19:	
  8598 ;; *************** function ___fladd *****************
  8599 ;; Defined at:
  8600 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\sprcadd.c"
  8601 ;; Parameters:    Size  Location     Type
  8602 ;;  b               4   62[BANK0 ] long 
  8603 ;;  a               4   66[BANK0 ] long 
  8604 ;; Auto vars:     Size  Location     Type
  8605 ;;  grs             1    3[BANK1 ] unsigned char 
  8606 ;;  bexp            1    2[BANK1 ] unsigned char 
  8607 ;;  aexp            1    1[BANK1 ] unsigned char 
  8608 ;;  signs           1    0[BANK1 ] unsigned char 
  8609 ;; Return value:  Size  Location     Type
  8610 ;;                  4   62[BANK0 ] unsigned char 
  8611 ;; Registers used:
  8612 ;;		wreg, status,2, status,0, btemp+1
  8613 ;; Tracked objects:
  8614 ;;		On entry : 0/0
  8615 ;;		On exit  : 0/0
  8616 ;;		Unchanged: 0/0
  8617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8618 ;;      Params:         0       8       0       0       0
  8619 ;;      Locals:         0       0       4       0       0
  8620 ;;      Temps:          0       8       0       0       0
  8621 ;;      Totals:         0      16       4       0       0
  8622 ;;Total ram usage:       20 bytes
  8623 ;; Hardware stack levels used: 1
  8624 ;; Hardware stack levels required when called: 2
  8625 ;; This function calls:
  8626 ;;		Nothing
  8627 ;; This function is called by:
  8628 ;;		_sprintf
  8629 ;;		___flsub
  8630 ;; This function uses a non-reentrant model
  8631 ;;
  8632                           
  8633                           
  8634                           ;psect for function ___fladd
  8635  14C0                     ___fladd:
  8636  14C0                     l3530:	
  8637                           ;incstack = 0
  8638                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  8639                           
  8640  14C0  1283               	bcf	3,5	;RP0=0, select bank0
  8641  14C1  1303               	bcf	3,6	;RP1=0, select bank0
  8642  14C2  0861               	movf	___fladd@b+3,w
  8643  14C3  3980               	andlw	128
  8644  14C4  00E6               	movwf	??___fladd
  8645  14C5  0866               	movf	??___fladd,w
  8646  14C6  1683               	bsf	3,5	;RP0=1, select bank1
  8647  14C7  1303               	bcf	3,6	;RP1=0, select bank1
  8648  14C8  00A0               	movwf	___fladd@signs^(0+128)
  8649  14C9                     l3532:
  8650  14C9  1283               	bcf	3,5	;RP0=0, select bank0
  8651  14CA  1303               	bcf	3,6	;RP1=0, select bank0
  8652  14CB  0861               	movf	___fladd@b+3,w
  8653  14CC  00E6               	movwf	??___fladd
  8654  14CD  0766               	addwf	??___fladd,w
  8655  14CE  00E7               	movwf	??___fladd+1
  8656  14CF  0867               	movf	??___fladd+1,w
  8657  14D0  1683               	bsf	3,5	;RP0=1, select bank1
  8658  14D1  1303               	bcf	3,6	;RP1=0, select bank1
  8659  14D2  00A2               	movwf	___fladd@bexp^(0+128)
  8660  14D3                     l3534:
  8661  14D3  1283               	bcf	3,5	;RP0=0, select bank0
  8662  14D4  1303               	bcf	3,6	;RP1=0, select bank0
  8663  14D5  1FE0               	btfss	___fladd@b+2,7
  8664  14D6  2CD8               	goto	u5791
  8665  14D7  2CD9               	goto	u5790
  8666  14D8                     u5791:
  8667  14D8  2CDC               	goto	l3538
  8668  14D9                     u5790:
  8669  14D9                     l3536:
  8670  14D9  1683               	bsf	3,5	;RP0=1, select bank1
  8671  14DA  1303               	bcf	3,6	;RP1=0, select bank1
  8672  14DB  1422               	bsf	___fladd@bexp^(0+128),0
  8673  14DC                     l3538:
  8674  14DC  1683               	bsf	3,5	;RP0=1, select bank1
  8675  14DD  1303               	bcf	3,6	;RP1=0, select bank1
  8676  14DE  0822               	movf	___fladd@bexp^(0+128),w
  8677  14DF  1903               	btfsc	3,2
  8678  14E0  2CE2               	goto	u5801
  8679  14E1  2CE3               	goto	u5800
  8680  14E2                     u5801:
  8681  14E2  2CF6               	goto	l3548
  8682  14E3                     u5800:
  8683  14E3                     l3540:
  8684  14E3  0A22               	incf	___fladd@bexp^(0+128),w
  8685  14E4  1D03               	btfss	3,2
  8686  14E5  2CE7               	goto	u5811
  8687  14E6  2CE8               	goto	u5810
  8688  14E7                     u5811:
  8689  14E7  2CF2               	goto	l3544
  8690  14E8                     u5810:
  8691  14E8                     l3542:
  8692  14E8  3000               	movlw	0
  8693  14E9  1283               	bcf	3,5	;RP0=0, select bank0
  8694  14EA  1303               	bcf	3,6	;RP1=0, select bank0
  8695  14EB  00E1               	movwf	___fladd@b+3
  8696  14EC  3000               	movlw	0
  8697  14ED  00E0               	movwf	___fladd@b+2
  8698  14EE  3000               	movlw	0
  8699  14EF  00DF               	movwf	___fladd@b+1
  8700  14F0  3000               	movlw	0
  8701  14F1  00DE               	movwf	___fladd@b
  8702  14F2                     l3544:
  8703  14F2  1283               	bcf	3,5	;RP0=0, select bank0
  8704  14F3  17E0               	bsf	___fladd@b+2,7
  8705  14F4                     l3546:
  8706  14F4  01E1               	clrf	___fladd@b+3
  8707  14F5  2D00               	goto	l3550
  8708  14F6                     l3548:
  8709  14F6  3000               	movlw	0
  8710  14F7  1283               	bcf	3,5	;RP0=0, select bank0
  8711  14F8  1303               	bcf	3,6	;RP1=0, select bank0
  8712  14F9  00E1               	movwf	___fladd@b+3
  8713  14FA  3000               	movlw	0
  8714  14FB  00E0               	movwf	___fladd@b+2
  8715  14FC  3000               	movlw	0
  8716  14FD  00DF               	movwf	___fladd@b+1
  8717  14FE  3000               	movlw	0
  8718  14FF  00DE               	movwf	___fladd@b
  8719  1500                     l3550:
  8720  1500  0865               	movf	___fladd@a+3,w
  8721  1501  3980               	andlw	128
  8722  1502  00E6               	movwf	??___fladd
  8723  1503  0866               	movf	??___fladd,w
  8724  1504  1683               	bsf	3,5	;RP0=1, select bank1
  8725  1505  1303               	bcf	3,6	;RP1=0, select bank1
  8726  1506  00A1               	movwf	___fladd@aexp^(0+128)
  8727  1507                     l3552:
  8728  1507  0821               	movf	___fladd@aexp^(0+128),w
  8729  1508  0620               	xorwf	___fladd@signs^(0+128),w
  8730  1509  1903               	skipnz
  8731  150A  2D0C               	goto	u5821
  8732  150B  2D0D               	goto	u5820
  8733  150C                     u5821:
  8734  150C  2D0E               	goto	l3556
  8735  150D                     u5820:
  8736  150D                     l3554:
  8737  150D  1720               	bsf	___fladd@signs^(0+128),6
  8738  150E                     l3556:
  8739  150E  1283               	bcf	3,5	;RP0=0, select bank0
  8740  150F  1303               	bcf	3,6	;RP1=0, select bank0
  8741  1510  0865               	movf	___fladd@a+3,w
  8742  1511  00E6               	movwf	??___fladd
  8743  1512  0766               	addwf	??___fladd,w
  8744  1513  00E7               	movwf	??___fladd+1
  8745  1514  0867               	movf	??___fladd+1,w
  8746  1515  1683               	bsf	3,5	;RP0=1, select bank1
  8747  1516  1303               	bcf	3,6	;RP1=0, select bank1
  8748  1517  00A1               	movwf	___fladd@aexp^(0+128)
  8749  1518                     l3558:
  8750  1518  1283               	bcf	3,5	;RP0=0, select bank0
  8751  1519  1303               	bcf	3,6	;RP1=0, select bank0
  8752  151A  1FE4               	btfss	___fladd@a+2,7
  8753  151B  2D1D               	goto	u5831
  8754  151C  2D1E               	goto	u5830
  8755  151D                     u5831:
  8756  151D  2D21               	goto	l3562
  8757  151E                     u5830:
  8758  151E                     l3560:
  8759  151E  1683               	bsf	3,5	;RP0=1, select bank1
  8760  151F  1303               	bcf	3,6	;RP1=0, select bank1
  8761  1520  1421               	bsf	___fladd@aexp^(0+128),0
  8762  1521                     l3562:
  8763  1521  1683               	bsf	3,5	;RP0=1, select bank1
  8764  1522  1303               	bcf	3,6	;RP1=0, select bank1
  8765  1523  0821               	movf	___fladd@aexp^(0+128),w
  8766  1524  1903               	btfsc	3,2
  8767  1525  2D27               	goto	u5841
  8768  1526  2D28               	goto	u5840
  8769  1527                     u5841:
  8770  1527  2D3B               	goto	l3572
  8771  1528                     u5840:
  8772  1528                     l3564:
  8773  1528  0A21               	incf	___fladd@aexp^(0+128),w
  8774  1529  1D03               	btfss	3,2
  8775  152A  2D2C               	goto	u5851
  8776  152B  2D2D               	goto	u5850
  8777  152C                     u5851:
  8778  152C  2D37               	goto	l3568
  8779  152D                     u5850:
  8780  152D                     l3566:
  8781  152D  3000               	movlw	0
  8782  152E  1283               	bcf	3,5	;RP0=0, select bank0
  8783  152F  1303               	bcf	3,6	;RP1=0, select bank0
  8784  1530  00E5               	movwf	___fladd@a+3
  8785  1531  3000               	movlw	0
  8786  1532  00E4               	movwf	___fladd@a+2
  8787  1533  3000               	movlw	0
  8788  1534  00E3               	movwf	___fladd@a+1
  8789  1535  3000               	movlw	0
  8790  1536  00E2               	movwf	___fladd@a
  8791  1537                     l3568:
  8792  1537  1283               	bcf	3,5	;RP0=0, select bank0
  8793  1538  17E4               	bsf	___fladd@a+2,7
  8794  1539                     l3570:
  8795  1539  01E5               	clrf	___fladd@a+3
  8796  153A  2D45               	goto	l636
  8797  153B                     l3572:
  8798  153B  3000               	movlw	0
  8799  153C  1283               	bcf	3,5	;RP0=0, select bank0
  8800  153D  1303               	bcf	3,6	;RP1=0, select bank0
  8801  153E  00E5               	movwf	___fladd@a+3
  8802  153F  3000               	movlw	0
  8803  1540  00E4               	movwf	___fladd@a+2
  8804  1541  3000               	movlw	0
  8805  1542  00E3               	movwf	___fladd@a+1
  8806  1543  3000               	movlw	0
  8807  1544  00E2               	movwf	___fladd@a
  8808  1545                     l636:
  8809  1545  1683               	bsf	3,5	;RP0=1, select bank1
  8810  1546  1303               	bcf	3,6	;RP1=0, select bank1
  8811  1547  0822               	movf	___fladd@bexp^(0+128),w
  8812  1548  0221               	subwf	___fladd@aexp^(0+128),w
  8813  1549  1803               	skipnc
  8814  154A  2D4C               	goto	u5861
  8815  154B  2D4D               	goto	u5860
  8816  154C                     u5861:
  8817  154C  2DC3               	goto	l3608
  8818  154D                     u5860:
  8819  154D                     l3574:
  8820  154D  1F20               	btfss	___fladd@signs^(0+128),6
  8821  154E  2D50               	goto	u5871
  8822  154F  2D51               	goto	u5870
  8823  1550                     u5871:
  8824  1550  2D59               	goto	l3578
  8825  1551                     u5870:
  8826  1551                     l3576:
  8827  1551  3080               	movlw	128
  8828  1552  1283               	bcf	3,5	;RP0=0, select bank0
  8829  1553  1303               	bcf	3,6	;RP1=0, select bank0
  8830  1554  00E6               	movwf	??___fladd
  8831  1555  0866               	movf	??___fladd,w
  8832  1556  1683               	bsf	3,5	;RP0=1, select bank1
  8833  1557  1303               	bcf	3,6	;RP1=0, select bank1
  8834  1558  06A0               	xorwf	___fladd@signs^(0+128),f
  8835  1559                     l3578:
  8836  1559  0822               	movf	___fladd@bexp^(0+128),w
  8837  155A  1283               	bcf	3,5	;RP0=0, select bank0
  8838  155B  1303               	bcf	3,6	;RP1=0, select bank0
  8839  155C  00E6               	movwf	??___fladd
  8840  155D  0866               	movf	??___fladd,w
  8841  155E  1683               	bsf	3,5	;RP0=1, select bank1
  8842  155F  1303               	bcf	3,6	;RP1=0, select bank1
  8843  1560  00A3               	movwf	___fladd@grs^(0+128)
  8844  1561                     l3580:
  8845  1561  0821               	movf	___fladd@aexp^(0+128),w
  8846  1562  1283               	bcf	3,5	;RP0=0, select bank0
  8847  1563  1303               	bcf	3,6	;RP1=0, select bank0
  8848  1564  00E6               	movwf	??___fladd
  8849  1565  0866               	movf	??___fladd,w
  8850  1566  1683               	bsf	3,5	;RP0=1, select bank1
  8851  1567  1303               	bcf	3,6	;RP1=0, select bank1
  8852  1568  00A2               	movwf	___fladd@bexp^(0+128)
  8853  1569                     l3582:
  8854  1569  0823               	movf	___fladd@grs^(0+128),w
  8855  156A  1283               	bcf	3,5	;RP0=0, select bank0
  8856  156B  1303               	bcf	3,6	;RP1=0, select bank0
  8857  156C  00E6               	movwf	??___fladd
  8858  156D  0866               	movf	??___fladd,w
  8859  156E  1683               	bsf	3,5	;RP0=1, select bank1
  8860  156F  1303               	bcf	3,6	;RP1=0, select bank1
  8861  1570  00A1               	movwf	___fladd@aexp^(0+128)
  8862  1571                     l3584:
  8863  1571  1283               	bcf	3,5	;RP0=0, select bank0
  8864  1572  1303               	bcf	3,6	;RP1=0, select bank0
  8865  1573  085E               	movf	___fladd@b,w
  8866  1574  00E6               	movwf	??___fladd
  8867  1575  0866               	movf	??___fladd,w
  8868  1576  1683               	bsf	3,5	;RP0=1, select bank1
  8869  1577  1303               	bcf	3,6	;RP1=0, select bank1
  8870  1578  00A3               	movwf	___fladd@grs^(0+128)
  8871  1579                     l3586:
  8872  1579  1283               	bcf	3,5	;RP0=0, select bank0
  8873  157A  1303               	bcf	3,6	;RP1=0, select bank0
  8874  157B  0862               	movf	___fladd@a,w
  8875  157C  00E6               	movwf	??___fladd
  8876  157D  0866               	movf	??___fladd,w
  8877  157E  00DE               	movwf	___fladd@b
  8878  157F                     l3588:
  8879  157F  1683               	bsf	3,5	;RP0=1, select bank1
  8880  1580  1303               	bcf	3,6	;RP1=0, select bank1
  8881  1581  0823               	movf	___fladd@grs^(0+128),w
  8882  1582  1283               	bcf	3,5	;RP0=0, select bank0
  8883  1583  1303               	bcf	3,6	;RP1=0, select bank0
  8884  1584  00E6               	movwf	??___fladd
  8885  1585  0866               	movf	??___fladd,w
  8886  1586  00E2               	movwf	___fladd@a
  8887  1587                     l3590:
  8888  1587  085F               	movf	___fladd@b+1,w
  8889  1588  00E6               	movwf	??___fladd
  8890  1589  0866               	movf	??___fladd,w
  8891  158A  1683               	bsf	3,5	;RP0=1, select bank1
  8892  158B  1303               	bcf	3,6	;RP1=0, select bank1
  8893  158C  00A3               	movwf	___fladd@grs^(0+128)
  8894  158D                     l3592:
  8895  158D  1283               	bcf	3,5	;RP0=0, select bank0
  8896  158E  1303               	bcf	3,6	;RP1=0, select bank0
  8897  158F  0863               	movf	___fladd@a+1,w
  8898  1590  00E6               	movwf	??___fladd
  8899  1591  0866               	movf	??___fladd,w
  8900  1592  00DF               	movwf	___fladd@b+1
  8901  1593                     l3594:
  8902  1593  1683               	bsf	3,5	;RP0=1, select bank1
  8903  1594  1303               	bcf	3,6	;RP1=0, select bank1
  8904  1595  0823               	movf	___fladd@grs^(0+128),w
  8905  1596  1283               	bcf	3,5	;RP0=0, select bank0
  8906  1597  1303               	bcf	3,6	;RP1=0, select bank0
  8907  1598  00E6               	movwf	??___fladd
  8908  1599  0866               	movf	??___fladd,w
  8909  159A  00E3               	movwf	___fladd@a+1
  8910  159B                     l3596:
  8911  159B  0860               	movf	___fladd@b+2,w
  8912  159C  00E6               	movwf	??___fladd
  8913  159D  0866               	movf	??___fladd,w
  8914  159E  1683               	bsf	3,5	;RP0=1, select bank1
  8915  159F  1303               	bcf	3,6	;RP1=0, select bank1
  8916  15A0  00A3               	movwf	___fladd@grs^(0+128)
  8917  15A1                     l3598:
  8918  15A1  1283               	bcf	3,5	;RP0=0, select bank0
  8919  15A2  1303               	bcf	3,6	;RP1=0, select bank0
  8920  15A3  0864               	movf	___fladd@a+2,w
  8921  15A4  00E6               	movwf	??___fladd
  8922  15A5  0866               	movf	??___fladd,w
  8923  15A6  00E0               	movwf	___fladd@b+2
  8924  15A7                     l3600:
  8925  15A7  1683               	bsf	3,5	;RP0=1, select bank1
  8926  15A8  1303               	bcf	3,6	;RP1=0, select bank1
  8927  15A9  0823               	movf	___fladd@grs^(0+128),w
  8928  15AA  1283               	bcf	3,5	;RP0=0, select bank0
  8929  15AB  1303               	bcf	3,6	;RP1=0, select bank0
  8930  15AC  00E6               	movwf	??___fladd
  8931  15AD  0866               	movf	??___fladd,w
  8932  15AE  00E4               	movwf	___fladd@a+2
  8933  15AF                     l3602:
  8934  15AF  0861               	movf	___fladd@b+3,w
  8935  15B0  00E6               	movwf	??___fladd
  8936  15B1  0866               	movf	??___fladd,w
  8937  15B2  1683               	bsf	3,5	;RP0=1, select bank1
  8938  15B3  1303               	bcf	3,6	;RP1=0, select bank1
  8939  15B4  00A3               	movwf	___fladd@grs^(0+128)
  8940  15B5                     l3604:
  8941  15B5  1283               	bcf	3,5	;RP0=0, select bank0
  8942  15B6  1303               	bcf	3,6	;RP1=0, select bank0
  8943  15B7  0865               	movf	___fladd@a+3,w
  8944  15B8  00E6               	movwf	??___fladd
  8945  15B9  0866               	movf	??___fladd,w
  8946  15BA  00E1               	movwf	___fladd@b+3
  8947  15BB                     l3606:
  8948  15BB  1683               	bsf	3,5	;RP0=1, select bank1
  8949  15BC  1303               	bcf	3,6	;RP1=0, select bank1
  8950  15BD  0823               	movf	___fladd@grs^(0+128),w
  8951  15BE  1283               	bcf	3,5	;RP0=0, select bank0
  8952  15BF  1303               	bcf	3,6	;RP1=0, select bank0
  8953  15C0  00E6               	movwf	??___fladd
  8954  15C1  0866               	movf	??___fladd,w
  8955  15C2  00E5               	movwf	___fladd@a+3
  8956  15C3                     l3608:
  8957  15C3  1683               	bsf	3,5	;RP0=1, select bank1
  8958  15C4  1303               	bcf	3,6	;RP1=0, select bank1
  8959  15C5  01A3               	clrf	___fladd@grs^(0+128)
  8960  15C6                     l3610:
  8961  15C6  0821               	movf	___fladd@aexp^(0+128),w
  8962  15C7  1283               	bcf	3,5	;RP0=0, select bank0
  8963  15C8  1303               	bcf	3,6	;RP1=0, select bank0
  8964  15C9  00E6               	movwf	??___fladd
  8965  15CA  01E7               	clrf	??___fladd+1
  8966  15CB  0867               	movf	??___fladd+1,w
  8967  15CC  00E9               	movwf	??___fladd+3
  8968  15CD  1683               	bsf	3,5	;RP0=1, select bank1
  8969  15CE  1303               	bcf	3,6	;RP1=0, select bank1
  8970  15CF  0822               	movf	___fladd@bexp^(0+128),w
  8971  15D0  1283               	bcf	3,5	;RP0=0, select bank0
  8972  15D1  1303               	bcf	3,6	;RP1=0, select bank0
  8973  15D2  0266               	subwf	??___fladd,w
  8974  15D3  00E8               	movwf	??___fladd+2
  8975  15D4  1C03               	skipc
  8976  15D5  03E9               	decf	??___fladd+3,f
  8977  15D6  0869               	movf	??___fladd+3,w
  8978  15D7  3A80               	xorlw	128
  8979  15D8  00FF               	movwf	btemp+1
  8980  15D9  3080               	movlw	128
  8981  15DA  027F               	subwf	btemp+1,w
  8982  15DB  1D03               	skipz
  8983  15DC  2DDF               	goto	u5885
  8984  15DD  301A               	movlw	26
  8985  15DE  0268               	subwf	??___fladd+2,w
  8986  15DF                     u5885:
  8987  15DF  1C03               	skipc
  8988  15E0  2DE2               	goto	u5881
  8989  15E1  2DE3               	goto	u5880
  8990  15E2                     u5881:
  8991  15E2  2E35               	goto	l3626
  8992  15E3                     u5880:
  8993  15E3                     l3612:
  8994  15E3  1283               	bcf	3,5	;RP0=0, select bank0
  8995  15E4  1303               	bcf	3,6	;RP1=0, select bank0
  8996  15E5  0861               	movf	___fladd@b+3,w
  8997  15E6  0460               	iorwf	___fladd@b+2,w
  8998  15E7  045F               	iorwf	___fladd@b+1,w
  8999  15E8  045E               	iorwf	___fladd@b,w
  9000  15E9  1D03               	skipz
  9001  15EA  2DEC               	goto	u5891
  9002  15EB  2DEE               	goto	u5890
  9003  15EC                     u5891:
  9004  15EC  3001               	movlw	1
  9005  15ED  2DEF               	goto	u5900
  9006  15EE                     u5890:
  9007  15EE  3000               	movlw	0
  9008  15EF                     u5900:
  9009  15EF  00E6               	movwf	??___fladd
  9010  15F0  0866               	movf	??___fladd,w
  9011  15F1  1683               	bsf	3,5	;RP0=1, select bank1
  9012  15F2  1303               	bcf	3,6	;RP1=0, select bank1
  9013  15F3  00A3               	movwf	___fladd@grs^(0+128)
  9014  15F4  3000               	movlw	0
  9015  15F5  1283               	bcf	3,5	;RP0=0, select bank0
  9016  15F6  1303               	bcf	3,6	;RP1=0, select bank0
  9017  15F7  00E1               	movwf	___fladd@b+3
  9018  15F8  3000               	movlw	0
  9019  15F9  00E0               	movwf	___fladd@b+2
  9020  15FA  3000               	movlw	0
  9021  15FB  00DF               	movwf	___fladd@b+1
  9022  15FC  3000               	movlw	0
  9023  15FD  00DE               	movwf	___fladd@b
  9024  15FE  1683               	bsf	3,5	;RP0=1, select bank1
  9025  15FF  1303               	bcf	3,6	;RP1=0, select bank1
  9026  1600  0821               	movf	___fladd@aexp^(0+128),w
  9027  1601  1283               	bcf	3,5	;RP0=0, select bank0
  9028  1602  1303               	bcf	3,6	;RP1=0, select bank0
  9029  1603  00E6               	movwf	??___fladd
  9030  1604  0866               	movf	??___fladd,w
  9031  1605  1683               	bsf	3,5	;RP0=1, select bank1
  9032  1606  1303               	bcf	3,6	;RP1=0, select bank1
  9033  1607  00A2               	movwf	___fladd@bexp^(0+128)
  9034  1608  2E3D               	goto	l640
  9035  1609                     l642:
  9036  1609  1C23               	btfss	___fladd@grs^(0+128),0
  9037  160A  2E0C               	goto	u5911
  9038  160B  2E0D               	goto	u5910
  9039  160C                     u5911:
  9040  160C  2E1A               	goto	l3616
  9041  160D                     u5910:
  9042  160D                     l3614:
  9043  160D  0823               	movf	___fladd@grs^(0+128),w
  9044  160E  1283               	bcf	3,5	;RP0=0, select bank0
  9045  160F  1303               	bcf	3,6	;RP1=0, select bank0
  9046  1610  00E6               	movwf	??___fladd
  9047  1611  1003               	clrc
  9048  1612  0C66               	rrf	??___fladd,w
  9049  1613  3801               	iorlw	1
  9050  1614  00E7               	movwf	??___fladd+1
  9051  1615  0867               	movf	??___fladd+1,w
  9052  1616  1683               	bsf	3,5	;RP0=1, select bank1
  9053  1617  1303               	bcf	3,6	;RP1=0, select bank1
  9054  1618  00A3               	movwf	___fladd@grs^(0+128)
  9055  1619  2E1C               	goto	l3618
  9056  161A                     l3616:
  9057  161A  1003               	clrc
  9058  161B  0CA3               	rrf	___fladd@grs^(0+128),f
  9059  161C                     l3618:
  9060  161C  1283               	bcf	3,5	;RP0=0, select bank0
  9061  161D  1303               	bcf	3,6	;RP1=0, select bank0
  9062  161E  1C5E               	btfss	___fladd@b,0
  9063  161F  2E21               	goto	u5921
  9064  1620  2E22               	goto	u5920
  9065  1621                     u5921:
  9066  1621  2E25               	goto	l3622
  9067  1622                     u5920:
  9068  1622                     l3620:
  9069  1622  1683               	bsf	3,5	;RP0=1, select bank1
  9070  1623  1303               	bcf	3,6	;RP1=0, select bank1
  9071  1624  17A3               	bsf	___fladd@grs^(0+128),7
  9072  1625                     l3622:
  9073  1625  3001               	movlw	1
  9074  1626  1283               	bcf	3,5	;RP0=0, select bank0
  9075  1627  00E6               	movwf	??___fladd
  9076  1628                     u5935:
  9077  1628  0D61               	rlf	___fladd@b+3,w
  9078  1629  0CE1               	rrf	___fladd@b+3,f
  9079  162A  0CE0               	rrf	___fladd@b+2,f
  9080  162B  0CDF               	rrf	___fladd@b+1,f
  9081  162C  0CDE               	rrf	___fladd@b,f
  9082  162D  0BE6               	decfsz	??___fladd& (0+127),f
  9083  162E  2E28               	goto	u5935
  9084  162F                     l3624:
  9085  162F  3001               	movlw	1
  9086  1630  00E6               	movwf	??___fladd
  9087  1631  0866               	movf	??___fladd,w
  9088  1632  1683               	bsf	3,5	;RP0=1, select bank1
  9089  1633  1303               	bcf	3,6	;RP1=0, select bank1
  9090  1634  07A2               	addwf	___fladd@bexp^(0+128),f
  9091  1635                     l3626:
  9092  1635  1683               	bsf	3,5	;RP0=1, select bank1
  9093  1636  1303               	bcf	3,6	;RP1=0, select bank1
  9094  1637  0821               	movf	___fladd@aexp^(0+128),w
  9095  1638  0222               	subwf	___fladd@bexp^(0+128),w
  9096  1639  1C03               	skipc
  9097  163A  2E3C               	goto	u5941
  9098  163B  2E3D               	goto	u5940
  9099  163C                     u5941:
  9100  163C  2E09               	goto	l642
  9101  163D                     u5940:
  9102  163D                     l640:
  9103  163D  1B20               	btfsc	___fladd@signs^(0+128),6
  9104  163E  2E40               	goto	u5951
  9105  163F  2E41               	goto	u5950
  9106  1640                     u5951:
  9107  1640  2E9D               	goto	l3652
  9108  1641                     u5950:
  9109  1641                     l3628:
  9110  1641  0822               	movf	___fladd@bexp^(0+128),w
  9111  1642  1D03               	btfss	3,2
  9112  1643  2E45               	goto	u5961
  9113  1644  2E46               	goto	u5960
  9114  1645                     u5961:
  9115  1645  2E51               	goto	l3634
  9116  1646                     u5960:
  9117  1646                     l3630:
  9118  1646  3000               	movlw	0
  9119  1647  1283               	bcf	3,5	;RP0=0, select bank0
  9120  1648  1303               	bcf	3,6	;RP1=0, select bank0
  9121  1649  00E1               	movwf	?___fladd+3
  9122  164A  3000               	movlw	0
  9123  164B  00E0               	movwf	?___fladd+2
  9124  164C  3000               	movlw	0
  9125  164D  00DF               	movwf	?___fladd+1
  9126  164E  3000               	movlw	0
  9127  164F  00DE               	movwf	?___fladd
  9128  1650  2FFF               	goto	l649
  9129  1651                     l3634:
  9130  1651  1283               	bcf	3,5	;RP0=0, select bank0
  9131  1652  1303               	bcf	3,6	;RP1=0, select bank0
  9132  1653  0862               	movf	___fladd@a,w
  9133  1654  07DE               	addwf	___fladd@b,f
  9134  1655  0863               	movf	___fladd@a+1,w
  9135  1656  1103               	clrz
  9136  1657  1803               	skipnc
  9137  1658  3E01               	addlw	1
  9138  1659  1903               	skipnz
  9139  165A  2E5C               	goto	u5971
  9140  165B  07DF               	addwf	___fladd@b+1,f
  9141  165C                     u5971:
  9142  165C  0864               	movf	___fladd@a+2,w
  9143  165D  1103               	clrz
  9144  165E  1803               	skipnc
  9145  165F  3E01               	addlw	1
  9146  1660  1903               	skipnz
  9147  1661  2E63               	goto	u5972
  9148  1662  07E0               	addwf	___fladd@b+2,f
  9149  1663                     u5972:
  9150  1663  0865               	movf	___fladd@a+3,w
  9151  1664  1103               	clrz
  9152  1665  1803               	skipnc
  9153  1666  3E01               	addlw	1
  9154  1667  1903               	skipnz
  9155  1668  2E6A               	goto	u5973
  9156  1669  07E1               	addwf	___fladd@b+3,f
  9157  166A                     u5973:
  9158  166A                     l3636:
  9159  166A  1C61               	btfss	___fladd@b+3,0
  9160  166B  2E6D               	goto	u5981
  9161  166C  2E6E               	goto	u5980
  9162  166D                     u5981:
  9163  166D  2F63               	goto	l3686
  9164  166E                     u5980:
  9165  166E                     l3638:
  9166  166E  1683               	bsf	3,5	;RP0=1, select bank1
  9167  166F  1303               	bcf	3,6	;RP1=0, select bank1
  9168  1670  1C23               	btfss	___fladd@grs^(0+128),0
  9169  1671  2E73               	goto	u5991
  9170  1672  2E74               	goto	u5990
  9171  1673                     u5991:
  9172  1673  2E81               	goto	l3642
  9173  1674                     u5990:
  9174  1674                     l3640:
  9175  1674  0823               	movf	___fladd@grs^(0+128),w
  9176  1675  1283               	bcf	3,5	;RP0=0, select bank0
  9177  1676  1303               	bcf	3,6	;RP1=0, select bank0
  9178  1677  00E6               	movwf	??___fladd
  9179  1678  1003               	clrc
  9180  1679  0C66               	rrf	??___fladd,w
  9181  167A  3801               	iorlw	1
  9182  167B  00E7               	movwf	??___fladd+1
  9183  167C  0867               	movf	??___fladd+1,w
  9184  167D  1683               	bsf	3,5	;RP0=1, select bank1
  9185  167E  1303               	bcf	3,6	;RP1=0, select bank1
  9186  167F  00A3               	movwf	___fladd@grs^(0+128)
  9187  1680  2E83               	goto	l3644
  9188  1681                     l3642:
  9189  1681  1003               	clrc
  9190  1682  0CA3               	rrf	___fladd@grs^(0+128),f
  9191  1683                     l3644:
  9192  1683  1283               	bcf	3,5	;RP0=0, select bank0
  9193  1684  1303               	bcf	3,6	;RP1=0, select bank0
  9194  1685  1C5E               	btfss	___fladd@b,0
  9195  1686  2E88               	goto	u6001
  9196  1687  2E89               	goto	u6000
  9197  1688                     u6001:
  9198  1688  2E8C               	goto	l3648
  9199  1689                     u6000:
  9200  1689                     l3646:
  9201  1689  1683               	bsf	3,5	;RP0=1, select bank1
  9202  168A  1303               	bcf	3,6	;RP1=0, select bank1
  9203  168B  17A3               	bsf	___fladd@grs^(0+128),7
  9204  168C                     l3648:
  9205  168C  3001               	movlw	1
  9206  168D  1283               	bcf	3,5	;RP0=0, select bank0
  9207  168E  00E6               	movwf	??___fladd
  9208  168F                     u6015:
  9209  168F  0D61               	rlf	___fladd@b+3,w
  9210  1690  0CE1               	rrf	___fladd@b+3,f
  9211  1691  0CE0               	rrf	___fladd@b+2,f
  9212  1692  0CDF               	rrf	___fladd@b+1,f
  9213  1693  0CDE               	rrf	___fladd@b,f
  9214  1694  0BE6               	decfsz	??___fladd& (0+127),f
  9215  1695  2E8F               	goto	u6015
  9216  1696                     l3650:
  9217  1696  3001               	movlw	1
  9218  1697  00E6               	movwf	??___fladd
  9219  1698  0866               	movf	??___fladd,w
  9220  1699  1683               	bsf	3,5	;RP0=1, select bank1
  9221  169A  1303               	bcf	3,6	;RP1=0, select bank1
  9222  169B  07A2               	addwf	___fladd@bexp^(0+128),f
  9223  169C  2F63               	goto	l3686
  9224  169D                     l3652:
  9225  169D  1283               	bcf	3,5	;RP0=0, select bank0
  9226  169E  1303               	bcf	3,6	;RP1=0, select bank0
  9227  169F  0861               	movf	___fladd@b+3,w
  9228  16A0  3A80               	xorlw	128
  9229  16A1  00FF               	movwf	btemp+1
  9230  16A2  0865               	movf	___fladd@a+3,w
  9231  16A3  3A80               	xorlw	128
  9232  16A4  027F               	subwf	btemp+1,w
  9233  16A5  1D03               	skipz
  9234  16A6  2EB1               	goto	u6023
  9235  16A7  0864               	movf	___fladd@a+2,w
  9236  16A8  0260               	subwf	___fladd@b+2,w
  9237  16A9  1D03               	skipz
  9238  16AA  2EB1               	goto	u6023
  9239  16AB  0863               	movf	___fladd@a+1,w
  9240  16AC  025F               	subwf	___fladd@b+1,w
  9241  16AD  1D03               	skipz
  9242  16AE  2EB1               	goto	u6023
  9243  16AF  0862               	movf	___fladd@a,w
  9244  16B0  025E               	subwf	___fladd@b,w
  9245  16B1                     u6023:
  9246  16B1  1803               	skipnc
  9247  16B2  2EB4               	goto	u6021
  9248  16B3  2EB5               	goto	u6020
  9249  16B4                     u6021:
  9250  16B4  2F11               	goto	l3662
  9251  16B5                     u6020:
  9252  16B5                     l3654:
  9253  16B5  30FF               	movlw	255
  9254  16B6  00E6               	movwf	??___fladd
  9255  16B7  30FF               	movlw	255
  9256  16B8  00E7               	movwf	??___fladd+1
  9257  16B9  30FF               	movlw	255
  9258  16BA  00E8               	movwf	??___fladd+2
  9259  16BB  30FF               	movlw	255
  9260  16BC  00E9               	movwf	??___fladd+3
  9261  16BD  0862               	movf	___fladd@a,w
  9262  16BE  00EA               	movwf	??___fladd+4
  9263  16BF  0863               	movf	___fladd@a+1,w
  9264  16C0  00EB               	movwf	??___fladd+5
  9265  16C1  0864               	movf	___fladd@a+2,w
  9266  16C2  00EC               	movwf	??___fladd+6
  9267  16C3  0865               	movf	___fladd@a+3,w
  9268  16C4  00ED               	movwf	??___fladd+7
  9269  16C5  085E               	movf	___fladd@b,w
  9270  16C6  02EA               	subwf	??___fladd+4,f
  9271  16C7  085F               	movf	___fladd@b+1,w
  9272  16C8  1C03               	skipc
  9273  16C9  0F5F               	incfsz	___fladd@b+1,w
  9274  16CA  2ECC               	goto	u6031
  9275  16CB  2ECD               	goto	u6032
  9276  16CC                     u6031:
  9277  16CC  02EB               	subwf	??___fladd+5,f
  9278  16CD                     u6032:
  9279  16CD  0860               	movf	___fladd@b+2,w
  9280  16CE  1C03               	skipc
  9281  16CF  0F60               	incfsz	___fladd@b+2,w
  9282  16D0  2ED2               	goto	u6033
  9283  16D1  2ED3               	goto	u6034
  9284  16D2                     u6033:
  9285  16D2  02EC               	subwf	??___fladd+6,f
  9286  16D3                     u6034:
  9287  16D3  0861               	movf	___fladd@b+3,w
  9288  16D4  1C03               	skipc
  9289  16D5  0F61               	incfsz	___fladd@b+3,w
  9290  16D6  2ED8               	goto	u6035
  9291  16D7  2ED9               	goto	u6036
  9292  16D8                     u6035:
  9293  16D8  02ED               	subwf	??___fladd+7,f
  9294  16D9                     u6036:
  9295  16D9  086A               	movf	??___fladd+4,w
  9296  16DA  07E6               	addwf	??___fladd,f
  9297  16DB  086B               	movf	??___fladd+5,w
  9298  16DC  1803               	skipnc
  9299  16DD  0F6B               	incfsz	??___fladd+5,w
  9300  16DE  2EE0               	goto	u6040
  9301  16DF  2EE1               	goto	u6041
  9302  16E0                     u6040:
  9303  16E0  07E7               	addwf	??___fladd+1,f
  9304  16E1                     u6041:
  9305  16E1  086C               	movf	??___fladd+6,w
  9306  16E2  1803               	skipnc
  9307  16E3  0F6C               	incfsz	??___fladd+6,w
  9308  16E4  2EE6               	goto	u6042
  9309  16E5  2EE7               	goto	u6043
  9310  16E6                     u6042:
  9311  16E6  07E8               	addwf	??___fladd+2,f
  9312  16E7                     u6043:
  9313  16E7  086D               	movf	??___fladd+7,w
  9314  16E8  1803               	skipnc
  9315  16E9  0A6D               	incf	??___fladd+7,w
  9316  16EA  07E9               	addwf	??___fladd+3,f
  9317  16EB  0869               	movf	??___fladd+3,w
  9318  16EC  00E1               	movwf	___fladd@b+3
  9319  16ED  0868               	movf	??___fladd+2,w
  9320  16EE  00E0               	movwf	___fladd@b+2
  9321  16EF  0867               	movf	??___fladd+1,w
  9322  16F0  00DF               	movwf	___fladd@b+1
  9323  16F1  0866               	movf	??___fladd,w
  9324  16F2  00DE               	movwf	___fladd@b
  9325  16F3                     l3656:
  9326  16F3  3080               	movlw	128
  9327  16F4  00E6               	movwf	??___fladd
  9328  16F5  0866               	movf	??___fladd,w
  9329  16F6  1683               	bsf	3,5	;RP0=1, select bank1
  9330  16F7  1303               	bcf	3,6	;RP1=0, select bank1
  9331  16F8  06A0               	xorwf	___fladd@signs^(0+128),f
  9332  16F9  09A3               	comf	___fladd@grs^(0+128),f
  9333  16FA  0AA3               	incf	___fladd@grs^(0+128),f
  9334  16FB                     l3658:
  9335  16FB  0823               	movf	___fladd@grs^(0+128),w
  9336  16FC  1D03               	btfss	3,2
  9337  16FD  2EFF               	goto	u6051
  9338  16FE  2F00               	goto	u6050
  9339  16FF                     u6051:
  9340  16FF  2F1F               	goto	l657
  9341  1700                     u6050:
  9342  1700                     l3660:
  9343  1700  3001               	movlw	1
  9344  1701  1283               	bcf	3,5	;RP0=0, select bank0
  9345  1702  1303               	bcf	3,6	;RP1=0, select bank0
  9346  1703  07DE               	addwf	___fladd@b,f
  9347  1704  3000               	movlw	0
  9348  1705  1803               	skipnc
  9349  1706  3001               	movlw	1
  9350  1707  07DF               	addwf	___fladd@b+1,f
  9351  1708  3000               	movlw	0
  9352  1709  1803               	skipnc
  9353  170A  3001               	movlw	1
  9354  170B  07E0               	addwf	___fladd@b+2,f
  9355  170C  3000               	movlw	0
  9356  170D  1803               	skipnc
  9357  170E  3001               	movlw	1
  9358  170F  07E1               	addwf	___fladd@b+3,f
  9359  1710  2F1F               	goto	l657
  9360  1711                     l3662:
  9361  1711  0862               	movf	___fladd@a,w
  9362  1712  02DE               	subwf	___fladd@b,f
  9363  1713  0863               	movf	___fladd@a+1,w
  9364  1714  1C03               	skipc
  9365  1715  0F63               	incfsz	___fladd@a+1,w
  9366  1716  02DF               	subwf	___fladd@b+1,f
  9367  1717  0864               	movf	___fladd@a+2,w
  9368  1718  1C03               	skipc
  9369  1719  0F64               	incfsz	___fladd@a+2,w
  9370  171A  02E0               	subwf	___fladd@b+2,f
  9371  171B  0865               	movf	___fladd@a+3,w
  9372  171C  1C03               	skipc
  9373  171D  0F65               	incfsz	___fladd@a+3,w
  9374  171E  02E1               	subwf	___fladd@b+3,f
  9375  171F                     l657:
  9376  171F  1283               	bcf	3,5	;RP0=0, select bank0
  9377  1720  0861               	movf	___fladd@b+3,w
  9378  1721  0460               	iorwf	___fladd@b+2,w
  9379  1722  045F               	iorwf	___fladd@b+1,w
  9380  1723  045E               	iorwf	___fladd@b,w
  9381  1724  1D03               	skipz
  9382  1725  2F27               	goto	u6061
  9383  1726  2F28               	goto	u6060
  9384  1727                     u6061:
  9385  1727  2F5E               	goto	l3684
  9386  1728                     u6060:
  9387  1728                     l3664:
  9388  1728  1683               	bsf	3,5	;RP0=1, select bank1
  9389  1729  1303               	bcf	3,6	;RP1=0, select bank1
  9390  172A  0823               	movf	___fladd@grs^(0+128),w
  9391  172B  1D03               	btfss	3,2
  9392  172C  2F2E               	goto	u6071
  9393  172D  2F2F               	goto	u6070
  9394  172E                     u6071:
  9395  172E  2F5E               	goto	l3684
  9396  172F                     u6070:
  9397  172F                     l3666:
  9398  172F  3000               	movlw	0
  9399  1730  1283               	bcf	3,5	;RP0=0, select bank0
  9400  1731  1303               	bcf	3,6	;RP1=0, select bank0
  9401  1732  00E1               	movwf	?___fladd+3
  9402  1733  3000               	movlw	0
  9403  1734  00E0               	movwf	?___fladd+2
  9404  1735  3000               	movlw	0
  9405  1736  00DF               	movwf	?___fladd+1
  9406  1737  3000               	movlw	0
  9407  1738  00DE               	movwf	?___fladd
  9408  1739  2FFF               	goto	l649
  9409  173A                     l3670:
  9410  173A  3001               	movlw	1
  9411  173B  00E6               	movwf	??___fladd
  9412  173C                     u6085:
  9413  173C  1003               	clrc
  9414  173D  0DDE               	rlf	___fladd@b,f
  9415  173E  0DDF               	rlf	___fladd@b+1,f
  9416  173F  0DE0               	rlf	___fladd@b+2,f
  9417  1740  0DE1               	rlf	___fladd@b+3,f
  9418  1741  0BE6               	decfsz	??___fladd,f
  9419  1742  2F3C               	goto	u6085
  9420  1743                     l3672:
  9421  1743  1683               	bsf	3,5	;RP0=1, select bank1
  9422  1744  1303               	bcf	3,6	;RP1=0, select bank1
  9423  1745  1FA3               	btfss	___fladd@grs^(0+128),7
  9424  1746  2F48               	goto	u6091
  9425  1747  2F49               	goto	u6090
  9426  1748                     u6091:
  9427  1748  2F4C               	goto	l661
  9428  1749                     u6090:
  9429  1749                     l3674:
  9430  1749  1283               	bcf	3,5	;RP0=0, select bank0
  9431  174A  1303               	bcf	3,6	;RP1=0, select bank0
  9432  174B  145E               	bsf	___fladd@b,0
  9433  174C                     l661:
  9434  174C  1683               	bsf	3,5	;RP0=1, select bank1
  9435  174D  1303               	bcf	3,6	;RP1=0, select bank1
  9436  174E  1C23               	btfss	___fladd@grs^(0+128),0
  9437  174F  2F51               	goto	u6101
  9438  1750  2F52               	goto	u6100
  9439  1751                     u6101:
  9440  1751  2F55               	goto	l3678
  9441  1752                     u6100:
  9442  1752                     l3676:
  9443  1752  1403               	setc
  9444  1753  0DA3               	rlf	___fladd@grs^(0+128),f
  9445  1754  2F57               	goto	l3680
  9446  1755                     l3678:
  9447  1755  1003               	clrc
  9448  1756  0DA3               	rlf	___fladd@grs^(0+128),f
  9449  1757                     l3680:
  9450  1757  0822               	movf	___fladd@bexp^(0+128),w
  9451  1758  1903               	btfsc	3,2
  9452  1759  2F5B               	goto	u6111
  9453  175A  2F5C               	goto	u6110
  9454  175B                     u6111:
  9455  175B  2F5E               	goto	l3684
  9456  175C                     u6110:
  9457  175C                     l3682:
  9458  175C  3001               	movlw	1
  9459  175D  02A2               	subwf	___fladd@bexp^(0+128),f
  9460  175E                     l3684:
  9461  175E  1283               	bcf	3,5	;RP0=0, select bank0
  9462  175F  1FE0               	btfss	___fladd@b+2,7
  9463  1760  2F62               	goto	u6121
  9464  1761  2F63               	goto	u6120
  9465  1762                     u6121:
  9466  1762  2F3A               	goto	l3670
  9467  1763                     u6120:
  9468  1763                     l3686:
  9469  1763  1683               	bsf	3,5	;RP0=1, select bank1
  9470  1764  1303               	bcf	3,6	;RP1=0, select bank1
  9471  1765  01A1               	clrf	___fladd@aexp^(0+128)
  9472  1766                     l3688:
  9473  1766  1FA3               	btfss	___fladd@grs^(0+128),7
  9474  1767  2F69               	goto	u6131
  9475  1768  2F6A               	goto	u6130
  9476  1769                     u6131:
  9477  1769  2F7C               	goto	l3696
  9478  176A                     u6130:
  9479  176A                     l3690:
  9480  176A  0823               	movf	___fladd@grs^(0+128),w
  9481  176B  397F               	andlw	127
  9482  176C  1903               	btfsc	3,2
  9483  176D  2F6F               	goto	u6141
  9484  176E  2F70               	goto	u6140
  9485  176F                     u6141:
  9486  176F  2F75               	goto	l667
  9487  1770                     u6140:
  9488  1770                     l3692:
  9489  1770  1683               	bsf	3,5	;RP0=1, select bank1
  9490  1771  1303               	bcf	3,6	;RP1=0, select bank1
  9491  1772  01A1               	clrf	___fladd@aexp^(0+128)
  9492  1773  0AA1               	incf	___fladd@aexp^(0+128),f
  9493  1774  2F7C               	goto	l3696
  9494  1775                     l667:
  9495  1775  1283               	bcf	3,5	;RP0=0, select bank0
  9496  1776  1303               	bcf	3,6	;RP1=0, select bank0
  9497  1777  1C5E               	btfss	___fladd@b,0
  9498  1778  2F7A               	goto	u6151
  9499  1779  2F7B               	goto	u6150
  9500  177A                     u6151:
  9501  177A  2F7C               	goto	l3696
  9502  177B                     u6150:
  9503  177B  2F70               	goto	l3692
  9504  177C                     l3696:
  9505  177C  1683               	bsf	3,5	;RP0=1, select bank1
  9506  177D  1303               	bcf	3,6	;RP1=0, select bank1
  9507  177E  0821               	movf	___fladd@aexp^(0+128),w
  9508  177F  1903               	btfsc	3,2
  9509  1780  2F82               	goto	u6161
  9510  1781  2F83               	goto	u6160
  9511  1782                     u6161:
  9512  1782  2FBF               	goto	l670
  9513  1783                     u6160:
  9514  1783                     l3698:
  9515  1783  3001               	movlw	1
  9516  1784  1283               	bcf	3,5	;RP0=0, select bank0
  9517  1785  1303               	bcf	3,6	;RP1=0, select bank0
  9518  1786  07DE               	addwf	___fladd@b,f
  9519  1787  3000               	movlw	0
  9520  1788  1803               	skipnc
  9521  1789  3001               	movlw	1
  9522  178A  07DF               	addwf	___fladd@b+1,f
  9523  178B  3000               	movlw	0
  9524  178C  1803               	skipnc
  9525  178D  3001               	movlw	1
  9526  178E  07E0               	addwf	___fladd@b+2,f
  9527  178F  3000               	movlw	0
  9528  1790  1803               	skipnc
  9529  1791  3001               	movlw	1
  9530  1792  07E1               	addwf	___fladd@b+3,f
  9531  1793                     l3700:
  9532  1793  1C61               	btfss	___fladd@b+3,0
  9533  1794  2F96               	goto	u6171
  9534  1795  2F97               	goto	u6170
  9535  1796                     u6171:
  9536  1796  2FBF               	goto	l670
  9537  1797                     u6170:
  9538  1797                     l3702:
  9539  1797  085E               	movf	___fladd@b,w
  9540  1798  00E6               	movwf	??___fladd
  9541  1799  085F               	movf	___fladd@b+1,w
  9542  179A  00E7               	movwf	??___fladd+1
  9543  179B  0860               	movf	___fladd@b+2,w
  9544  179C  00E8               	movwf	??___fladd+2
  9545  179D  0861               	movf	___fladd@b+3,w
  9546  179E  00E9               	movwf	??___fladd+3
  9547  179F  3001               	movlw	1
  9548  17A0  00EA               	movwf	??___fladd+4
  9549  17A1                     u6185:
  9550  17A1  0D69               	rlf	??___fladd+3,w
  9551  17A2  0CE9               	rrf	??___fladd+3,f
  9552  17A3  0CE8               	rrf	??___fladd+2,f
  9553  17A4  0CE7               	rrf	??___fladd+1,f
  9554  17A5  0CE6               	rrf	??___fladd,f
  9555  17A6                     u6180:
  9556  17A6  0BEA               	decfsz	??___fladd+4,f
  9557  17A7  2FA1               	goto	u6185
  9558  17A8  0869               	movf	??___fladd+3,w
  9559  17A9  00E1               	movwf	___fladd@b+3
  9560  17AA  0868               	movf	??___fladd+2,w
  9561  17AB  00E0               	movwf	___fladd@b+2
  9562  17AC  0867               	movf	??___fladd+1,w
  9563  17AD  00DF               	movwf	___fladd@b+1
  9564  17AE  0866               	movf	??___fladd,w
  9565  17AF  00DE               	movwf	___fladd@b
  9566  17B0  1683               	bsf	3,5	;RP0=1, select bank1
  9567  17B1  1303               	bcf	3,6	;RP1=0, select bank1
  9568  17B2  0A22               	incf	___fladd@bexp^(0+128),w
  9569  17B3  1903               	btfsc	3,2
  9570  17B4  2FB6               	goto	u6191
  9571  17B5  2FB7               	goto	u6190
  9572  17B6                     u6191:
  9573  17B6  2FBF               	goto	l670
  9574  17B7                     u6190:
  9575  17B7                     l3704:
  9576  17B7  3001               	movlw	1
  9577  17B8  1283               	bcf	3,5	;RP0=0, select bank0
  9578  17B9  1303               	bcf	3,6	;RP1=0, select bank0
  9579  17BA  00E6               	movwf	??___fladd
  9580  17BB  0866               	movf	??___fladd,w
  9581  17BC  1683               	bsf	3,5	;RP0=1, select bank1
  9582  17BD  1303               	bcf	3,6	;RP1=0, select bank1
  9583  17BE  07A2               	addwf	___fladd@bexp^(0+128),f
  9584  17BF                     l670:
  9585  17BF  1683               	bsf	3,5	;RP0=1, select bank1
  9586  17C0  1303               	bcf	3,6	;RP1=0, select bank1
  9587  17C1  0A22               	incf	___fladd@bexp^(0+128),w
  9588  17C2  1903               	btfsc	3,2
  9589  17C3  2FC5               	goto	u6201
  9590  17C4  2FC6               	goto	u6200
  9591  17C5                     u6201:
  9592  17C5  2FCB               	goto	l3708
  9593  17C6                     u6200:
  9594  17C6                     l3706:
  9595  17C6  0822               	movf	___fladd@bexp^(0+128),w
  9596  17C7  1D03               	btfss	3,2
  9597  17C8  2FCA               	goto	u6211
  9598  17C9  2FCB               	goto	u6210
  9599  17CA                     u6211:
  9600  17CA  2FDD               	goto	l3714
  9601  17CB                     u6210:
  9602  17CB                     l3708:
  9603  17CB  3000               	movlw	0
  9604  17CC  1283               	bcf	3,5	;RP0=0, select bank0
  9605  17CD  1303               	bcf	3,6	;RP1=0, select bank0
  9606  17CE  00E1               	movwf	___fladd@b+3
  9607  17CF  3000               	movlw	0
  9608  17D0  00E0               	movwf	___fladd@b+2
  9609  17D1  3000               	movlw	0
  9610  17D2  00DF               	movwf	___fladd@b+1
  9611  17D3  3000               	movlw	0
  9612  17D4  00DE               	movwf	___fladd@b
  9613  17D5                     l3710:
  9614  17D5  1683               	bsf	3,5	;RP0=1, select bank1
  9615  17D6  1303               	bcf	3,6	;RP1=0, select bank1
  9616  17D7  0822               	movf	___fladd@bexp^(0+128),w
  9617  17D8  1D03               	btfss	3,2
  9618  17D9  2FDB               	goto	u6221
  9619  17DA  2FDC               	goto	u6220
  9620  17DB                     u6221:
  9621  17DB  2FDD               	goto	l3714
  9622  17DC                     u6220:
  9623  17DC                     l3712:
  9624  17DC  01A0               	clrf	___fladd@signs^(0+128)
  9625  17DD                     l3714:
  9626  17DD  1C22               	btfss	___fladd@bexp^(0+128),0
  9627  17DE  2FE0               	goto	u6231
  9628  17DF  2FE1               	goto	u6230
  9629  17E0                     u6231:
  9630  17E0  2FE5               	goto	l3718
  9631  17E1                     u6230:
  9632  17E1                     l3716:
  9633  17E1  1283               	bcf	3,5	;RP0=0, select bank0
  9634  17E2  1303               	bcf	3,6	;RP1=0, select bank0
  9635  17E3  17E0               	bsf	___fladd@b+2,7
  9636  17E4  2FEB               	goto	l678
  9637  17E5                     l3718:
  9638  17E5  307F               	movlw	127
  9639  17E6  1283               	bcf	3,5	;RP0=0, select bank0
  9640  17E7  1303               	bcf	3,6	;RP1=0, select bank0
  9641  17E8  00E6               	movwf	??___fladd
  9642  17E9  0866               	movf	??___fladd,w
  9643  17EA  05E0               	andwf	___fladd@b+2,f
  9644  17EB                     l678:
  9645  17EB  1683               	bsf	3,5	;RP0=1, select bank1
  9646  17EC  1303               	bcf	3,6	;RP1=0, select bank1
  9647  17ED  0822               	movf	___fladd@bexp^(0+128),w
  9648  17EE  1283               	bcf	3,5	;RP0=0, select bank0
  9649  17EF  1303               	bcf	3,6	;RP1=0, select bank0
  9650  17F0  00E6               	movwf	??___fladd
  9651  17F1  1003               	clrc
  9652  17F2  0C66               	rrf	??___fladd,w
  9653  17F3  00E7               	movwf	??___fladd+1
  9654  17F4  0867               	movf	??___fladd+1,w
  9655  17F5  00E1               	movwf	___fladd@b+3
  9656  17F6                     l3720:
  9657  17F6  1683               	bsf	3,5	;RP0=1, select bank1
  9658  17F7  1303               	bcf	3,6	;RP1=0, select bank1
  9659  17F8  1FA0               	btfss	___fladd@signs^(0+128),7
  9660  17F9  2FFB               	goto	u6241
  9661  17FA  2FFC               	goto	u6240
  9662  17FB                     u6241:
  9663  17FB  2FFF               	goto	l679
  9664  17FC                     u6240:
  9665  17FC                     l3722:
  9666  17FC  1283               	bcf	3,5	;RP0=0, select bank0
  9667  17FD  1303               	bcf	3,6	;RP1=0, select bank0
  9668  17FE  17E1               	bsf	___fladd@b+3,7
  9669  17FF                     l679:
  9670  17FF                     l649:
  9671  17FF  0008               	return
  9672  1800                     __end_of___fladd:
  9673                           
  9674                           	psect	text20
  9675  1003                     __ptext20:	
  9676 ;; *************** function ___flneg *****************
  9677 ;; Defined at:
  9678 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\flneg.c"
  9679 ;; Parameters:    Size  Location     Type
  9680 ;;  f1              4    0[BANK0 ] unsigned char 
  9681 ;; Auto vars:     Size  Location     Type
  9682 ;;		None
  9683 ;; Return value:  Size  Location     Type
  9684 ;;                  4    0[BANK0 ] unsigned char 
  9685 ;; Registers used:
  9686 ;;		wreg
  9687 ;; Tracked objects:
  9688 ;;		On entry : 0/0
  9689 ;;		On exit  : 0/0
  9690 ;;		Unchanged: 0/0
  9691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9692 ;;      Params:         0       4       0       0       0
  9693 ;;      Locals:         0       0       0       0       0
  9694 ;;      Temps:          0       0       0       0       0
  9695 ;;      Totals:         0       4       0       0       0
  9696 ;;Total ram usage:        4 bytes
  9697 ;; Hardware stack levels used: 1
  9698 ;; Hardware stack levels required when called: 2
  9699 ;; This function calls:
  9700 ;;		Nothing
  9701 ;; This function is called by:
  9702 ;;		_sprintf
  9703 ;; This function uses a non-reentrant model
  9704 ;;
  9705                           
  9706                           
  9707                           ;psect for function ___flneg
  9708  1003                     ___flneg:
  9709  1003                     l4138:	
  9710                           ;incstack = 0
  9711                           ; Regs used in ___flneg: [wreg]
  9712                           
  9713  1003  1283               	bcf	3,5	;RP0=0, select bank0
  9714  1004  1303               	bcf	3,6	;RP1=0, select bank0
  9715  1005  0823               	movf	___flneg@f1+3,w
  9716  1006  0422               	iorwf	___flneg@f1+2,w
  9717  1007  0421               	iorwf	___flneg@f1+1,w
  9718  1008  0420               	iorwf	___flneg@f1,w
  9719  1009  1903               	skipnz
  9720  100A  280C               	goto	u7371
  9721  100B  280D               	goto	u7370
  9722  100C                     u7371:
  9723  100C  280F               	goto	l4142
  9724  100D                     u7370:
  9725  100D                     l4140:
  9726  100D  3080               	movlw	128
  9727  100E  06A3               	xorwf	___flneg@f1+3,f
  9728  100F                     l4142:
  9729  100F                     l508:
  9730  100F  0008               	return
  9731  1010                     __end_of___flneg:
  9732                           
  9733                           	psect	text21
  9734  1D25                     __ptext21:	
  9735 ;; *************** function ___flge *****************
  9736 ;; Defined at:
  9737 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\flge.c"
  9738 ;; Parameters:    Size  Location     Type
  9739 ;;  ff1             4    0[BANK0 ] unsigned char 
  9740 ;;  ff2             4    4[BANK0 ] unsigned char 
  9741 ;; Auto vars:     Size  Location     Type
  9742 ;;		None
  9743 ;; Return value:  Size  Location     Type
  9744 ;;		None               void
  9745 ;; Registers used:
  9746 ;;		wreg, status,2, status,0
  9747 ;; Tracked objects:
  9748 ;;		On entry : 0/0
  9749 ;;		On exit  : 0/0
  9750 ;;		Unchanged: 0/0
  9751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9752 ;;      Params:         0       8       0       0       0
  9753 ;;      Locals:         0       0       0       0       0
  9754 ;;      Temps:          0       4       0       0       0
  9755 ;;      Totals:         0      12       0       0       0
  9756 ;;Total ram usage:       12 bytes
  9757 ;; Hardware stack levels used: 1
  9758 ;; Hardware stack levels required when called: 2
  9759 ;; This function calls:
  9760 ;;		Nothing
  9761 ;; This function is called by:
  9762 ;;		_main
  9763 ;;		_sprintf
  9764 ;; This function uses a non-reentrant model
  9765 ;;
  9766                           
  9767                           
  9768                           ;psect for function ___flge
  9769  1D25                     ___flge:
  9770  1D25                     l4118:	
  9771                           ;incstack = 0
  9772                           ; Regs used in ___flge: [wreg+status,2+status,0]
  9773                           
  9774  1D25  3000               	movlw	0
  9775  1D26  1283               	bcf	3,5	;RP0=0, select bank0
  9776  1D27  1303               	bcf	3,6	;RP1=0, select bank0
  9777  1D28  0520               	andwf	___flge@ff1,w
  9778  1D29  00A8               	movwf	??___flge
  9779  1D2A  3000               	movlw	0
  9780  1D2B  0521               	andwf	___flge@ff1+1,w
  9781  1D2C  00A9               	movwf	??___flge+1
  9782  1D2D  3080               	movlw	128
  9783  1D2E  0522               	andwf	___flge@ff1+2,w
  9784  1D2F  00AA               	movwf	??___flge+2
  9785  1D30  307F               	movlw	127
  9786  1D31  0523               	andwf	___flge@ff1+3,w
  9787  1D32  00AB               	movwf	??___flge+3
  9788  1D33  082B               	movf	??___flge+3,w
  9789  1D34  042A               	iorwf	??___flge+2,w
  9790  1D35  0429               	iorwf	??___flge+1,w
  9791  1D36  0428               	iorwf	??___flge,w
  9792  1D37  1D03               	skipz
  9793  1D38  2D3A               	goto	u7301
  9794  1D39  2D3B               	goto	u7300
  9795  1D3A                     u7301:
  9796  1D3A  2D43               	goto	l500
  9797  1D3B                     u7300:
  9798  1D3B                     l4120:
  9799  1D3B  3000               	movlw	0
  9800  1D3C  00A3               	movwf	___flge@ff1+3
  9801  1D3D  3000               	movlw	0
  9802  1D3E  00A2               	movwf	___flge@ff1+2
  9803  1D3F  3000               	movlw	0
  9804  1D40  00A1               	movwf	___flge@ff1+1
  9805  1D41  3000               	movlw	0
  9806  1D42  00A0               	movwf	___flge@ff1
  9807  1D43                     l500:
  9808  1D43  3000               	movlw	0
  9809  1D44  0524               	andwf	___flge@ff2,w
  9810  1D45  00A8               	movwf	??___flge
  9811  1D46  3000               	movlw	0
  9812  1D47  0525               	andwf	___flge@ff2+1,w
  9813  1D48  00A9               	movwf	??___flge+1
  9814  1D49  3080               	movlw	128
  9815  1D4A  0526               	andwf	___flge@ff2+2,w
  9816  1D4B  00AA               	movwf	??___flge+2
  9817  1D4C  307F               	movlw	127
  9818  1D4D  0527               	andwf	___flge@ff2+3,w
  9819  1D4E  00AB               	movwf	??___flge+3
  9820  1D4F  082B               	movf	??___flge+3,w
  9821  1D50  042A               	iorwf	??___flge+2,w
  9822  1D51  0429               	iorwf	??___flge+1,w
  9823  1D52  0428               	iorwf	??___flge,w
  9824  1D53  1D03               	skipz
  9825  1D54  2D56               	goto	u7311
  9826  1D55  2D57               	goto	u7310
  9827  1D56                     u7311:
  9828  1D56  2D5F               	goto	l4124
  9829  1D57                     u7310:
  9830  1D57                     l4122:
  9831  1D57  3000               	movlw	0
  9832  1D58  00A7               	movwf	___flge@ff2+3
  9833  1D59  3000               	movlw	0
  9834  1D5A  00A6               	movwf	___flge@ff2+2
  9835  1D5B  3000               	movlw	0
  9836  1D5C  00A5               	movwf	___flge@ff2+1
  9837  1D5D  3000               	movlw	0
  9838  1D5E  00A4               	movwf	___flge@ff2
  9839  1D5F                     l4124:
  9840  1D5F  1FA3               	btfss	___flge@ff1+3,7
  9841  1D60  2D62               	goto	u7321
  9842  1D61  2D63               	goto	u7320
  9843  1D62                     u7321:
  9844  1D62  2D87               	goto	l4128
  9845  1D63                     u7320:
  9846  1D63                     l4126:
  9847  1D63  3000               	movlw	0
  9848  1D64  00A8               	movwf	??___flge
  9849  1D65  3000               	movlw	0
  9850  1D66  00A9               	movwf	??___flge+1
  9851  1D67  3000               	movlw	0
  9852  1D68  00AA               	movwf	??___flge+2
  9853  1D69  3080               	movlw	128
  9854  1D6A  00AB               	movwf	??___flge+3
  9855  1D6B  0820               	movf	___flge@ff1,w
  9856  1D6C  02A8               	subwf	??___flge,f
  9857  1D6D  0821               	movf	___flge@ff1+1,w
  9858  1D6E  1C03               	skipc
  9859  1D6F  0F21               	incfsz	___flge@ff1+1,w
  9860  1D70  2D72               	goto	u7331
  9861  1D71  2D73               	goto	u7332
  9862  1D72                     u7331:
  9863  1D72  02A9               	subwf	??___flge+1,f
  9864  1D73                     u7332:
  9865  1D73  0822               	movf	___flge@ff1+2,w
  9866  1D74  1C03               	skipc
  9867  1D75  0F22               	incfsz	___flge@ff1+2,w
  9868  1D76  2D78               	goto	u7333
  9869  1D77  2D79               	goto	u7334
  9870  1D78                     u7333:
  9871  1D78  02AA               	subwf	??___flge+2,f
  9872  1D79                     u7334:
  9873  1D79  0823               	movf	___flge@ff1+3,w
  9874  1D7A  1C03               	skipc
  9875  1D7B  0F23               	incfsz	___flge@ff1+3,w
  9876  1D7C  2D7E               	goto	u7335
  9877  1D7D  2D7F               	goto	u7336
  9878  1D7E                     u7335:
  9879  1D7E  02AB               	subwf	??___flge+3,f
  9880  1D7F                     u7336:
  9881  1D7F  082B               	movf	??___flge+3,w
  9882  1D80  00A3               	movwf	___flge@ff1+3
  9883  1D81  082A               	movf	??___flge+2,w
  9884  1D82  00A2               	movwf	___flge@ff1+2
  9885  1D83  0829               	movf	??___flge+1,w
  9886  1D84  00A1               	movwf	___flge@ff1+1
  9887  1D85  0828               	movf	??___flge,w
  9888  1D86  00A0               	movwf	___flge@ff1
  9889  1D87                     l4128:
  9890  1D87  1FA7               	btfss	___flge@ff2+3,7
  9891  1D88  2D8A               	goto	u7341
  9892  1D89  2D8B               	goto	u7340
  9893  1D8A                     u7341:
  9894  1D8A  2DAF               	goto	l503
  9895  1D8B                     u7340:
  9896  1D8B                     l4130:
  9897  1D8B  3000               	movlw	0
  9898  1D8C  00A8               	movwf	??___flge
  9899  1D8D  3000               	movlw	0
  9900  1D8E  00A9               	movwf	??___flge+1
  9901  1D8F  3000               	movlw	0
  9902  1D90  00AA               	movwf	??___flge+2
  9903  1D91  3080               	movlw	128
  9904  1D92  00AB               	movwf	??___flge+3
  9905  1D93  0824               	movf	___flge@ff2,w
  9906  1D94  02A8               	subwf	??___flge,f
  9907  1D95  0825               	movf	___flge@ff2+1,w
  9908  1D96  1C03               	skipc
  9909  1D97  0F25               	incfsz	___flge@ff2+1,w
  9910  1D98  2D9A               	goto	u7351
  9911  1D99  2D9B               	goto	u7352
  9912  1D9A                     u7351:
  9913  1D9A  02A9               	subwf	??___flge+1,f
  9914  1D9B                     u7352:
  9915  1D9B  0826               	movf	___flge@ff2+2,w
  9916  1D9C  1C03               	skipc
  9917  1D9D  0F26               	incfsz	___flge@ff2+2,w
  9918  1D9E  2DA0               	goto	u7353
  9919  1D9F  2DA1               	goto	u7354
  9920  1DA0                     u7353:
  9921  1DA0  02AA               	subwf	??___flge+2,f
  9922  1DA1                     u7354:
  9923  1DA1  0827               	movf	___flge@ff2+3,w
  9924  1DA2  1C03               	skipc
  9925  1DA3  0F27               	incfsz	___flge@ff2+3,w
  9926  1DA4  2DA6               	goto	u7355
  9927  1DA5  2DA7               	goto	u7356
  9928  1DA6                     u7355:
  9929  1DA6  02AB               	subwf	??___flge+3,f
  9930  1DA7                     u7356:
  9931  1DA7  082B               	movf	??___flge+3,w
  9932  1DA8  00A7               	movwf	___flge@ff2+3
  9933  1DA9  082A               	movf	??___flge+2,w
  9934  1DAA  00A6               	movwf	___flge@ff2+2
  9935  1DAB  0829               	movf	??___flge+1,w
  9936  1DAC  00A5               	movwf	___flge@ff2+1
  9937  1DAD  0828               	movf	??___flge,w
  9938  1DAE  00A4               	movwf	___flge@ff2
  9939  1DAF                     l503:
  9940  1DAF  3080               	movlw	128
  9941  1DB0  06A3               	xorwf	___flge@ff1+3,f
  9942  1DB1  3080               	movlw	128
  9943  1DB2  06A7               	xorwf	___flge@ff2+3,f
  9944  1DB3  0827               	movf	___flge@ff2+3,w
  9945  1DB4  0223               	subwf	___flge@ff1+3,w
  9946  1DB5  1D03               	skipz
  9947  1DB6  2DC1               	goto	u7365
  9948  1DB7  0826               	movf	___flge@ff2+2,w
  9949  1DB8  0222               	subwf	___flge@ff1+2,w
  9950  1DB9  1D03               	skipz
  9951  1DBA  2DC1               	goto	u7365
  9952  1DBB  0825               	movf	___flge@ff2+1,w
  9953  1DBC  0221               	subwf	___flge@ff1+1,w
  9954  1DBD  1D03               	skipz
  9955  1DBE  2DC1               	goto	u7365
  9956  1DBF  0824               	movf	___flge@ff2,w
  9957  1DC0  0220               	subwf	___flge@ff1,w
  9958  1DC1                     u7365:
  9959  1DC1  1803               	skipnc
  9960  1DC2  2DC4               	goto	u7361
  9961  1DC3  2DC5               	goto	u7360
  9962  1DC4                     u7361:
  9963  1DC4  2DC7               	goto	l4134
  9964  1DC5                     u7360:
  9965  1DC5                     l4132:
  9966  1DC5  1003               	clrc
  9967  1DC6  2DC8               	goto	l504
  9968  1DC7                     l4134:
  9969  1DC7  1403               	setc
  9970  1DC8                     l504:
  9971  1DC8  0008               	return
  9972  1DC9                     __end_of___flge:
  9973                           
  9974                           	psect	text22
  9975  1A38                     __ptext22:	
  9976 ;; *************** function ___fleq *****************
  9977 ;; Defined at:
  9978 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\fleq.c"
  9979 ;; Parameters:    Size  Location     Type
  9980 ;;  ff1             4    0[BANK0 ] unsigned char 
  9981 ;;  ff2             4    4[BANK0 ] unsigned char 
  9982 ;; Auto vars:     Size  Location     Type
  9983 ;;		None
  9984 ;; Return value:  Size  Location     Type
  9985 ;;		None               void
  9986 ;; Registers used:
  9987 ;;		wreg, status,2, status,0
  9988 ;; Tracked objects:
  9989 ;;		On entry : 0/0
  9990 ;;		On exit  : 0/0
  9991 ;;		Unchanged: 0/0
  9992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9993 ;;      Params:         0       8       0       0       0
  9994 ;;      Locals:         0       0       0       0       0
  9995 ;;      Temps:          0       4       0       0       0
  9996 ;;      Totals:         0      12       0       0       0
  9997 ;;Total ram usage:       12 bytes
  9998 ;; Hardware stack levels used: 1
  9999 ;; Hardware stack levels required when called: 2
 10000 ;; This function calls:
 10001 ;;		Nothing
 10002 ;; This function is called by:
 10003 ;;		_sprintf
 10004 ;; This function uses a non-reentrant model
 10005 ;;
 10006                           
 10007                           
 10008                           ;psect for function ___fleq
 10009  1A38                     ___fleq:
 10010  1A38                     l4106:	
 10011                           ;incstack = 0
 10012                           ; Regs used in ___fleq: [wreg+status,2+status,0]
 10013                           
 10014  1A38  3000               	movlw	0
 10015  1A39  1283               	bcf	3,5	;RP0=0, select bank0
 10016  1A3A  1303               	bcf	3,6	;RP1=0, select bank0
 10017  1A3B  0520               	andwf	___fleq@ff1,w
 10018  1A3C  00A8               	movwf	??___fleq
 10019  1A3D  3000               	movlw	0
 10020  1A3E  0521               	andwf	___fleq@ff1+1,w
 10021  1A3F  00A9               	movwf	??___fleq+1
 10022  1A40  3080               	movlw	128
 10023  1A41  0522               	andwf	___fleq@ff1+2,w
 10024  1A42  00AA               	movwf	??___fleq+2
 10025  1A43  307F               	movlw	127
 10026  1A44  0523               	andwf	___fleq@ff1+3,w
 10027  1A45  00AB               	movwf	??___fleq+3
 10028  1A46  082B               	movf	??___fleq+3,w
 10029  1A47  042A               	iorwf	??___fleq+2,w
 10030  1A48  0429               	iorwf	??___fleq+1,w
 10031  1A49  0428               	iorwf	??___fleq,w
 10032  1A4A  1D03               	skipz
 10033  1A4B  2A4D               	goto	u7271
 10034  1A4C  2A4E               	goto	u7270
 10035  1A4D                     u7271:
 10036  1A4D  2A56               	goto	l495
 10037  1A4E                     u7270:
 10038  1A4E                     l4108:
 10039  1A4E  3000               	movlw	0
 10040  1A4F  00A3               	movwf	___fleq@ff1+3
 10041  1A50  3000               	movlw	0
 10042  1A51  00A2               	movwf	___fleq@ff1+2
 10043  1A52  3000               	movlw	0
 10044  1A53  00A1               	movwf	___fleq@ff1+1
 10045  1A54  3000               	movlw	0
 10046  1A55  00A0               	movwf	___fleq@ff1
 10047  1A56                     l495:
 10048  1A56  3000               	movlw	0
 10049  1A57  0524               	andwf	___fleq@ff2,w
 10050  1A58  00A8               	movwf	??___fleq
 10051  1A59  3000               	movlw	0
 10052  1A5A  0525               	andwf	___fleq@ff2+1,w
 10053  1A5B  00A9               	movwf	??___fleq+1
 10054  1A5C  3080               	movlw	128
 10055  1A5D  0526               	andwf	___fleq@ff2+2,w
 10056  1A5E  00AA               	movwf	??___fleq+2
 10057  1A5F  307F               	movlw	127
 10058  1A60  0527               	andwf	___fleq@ff2+3,w
 10059  1A61  00AB               	movwf	??___fleq+3
 10060  1A62  082B               	movf	??___fleq+3,w
 10061  1A63  042A               	iorwf	??___fleq+2,w
 10062  1A64  0429               	iorwf	??___fleq+1,w
 10063  1A65  0428               	iorwf	??___fleq,w
 10064  1A66  1D03               	skipz
 10065  1A67  2A69               	goto	u7281
 10066  1A68  2A6A               	goto	u7280
 10067  1A69                     u7281:
 10068  1A69  2A72               	goto	l496
 10069  1A6A                     u7280:
 10070  1A6A                     l4110:
 10071  1A6A  3000               	movlw	0
 10072  1A6B  00A7               	movwf	___fleq@ff2+3
 10073  1A6C  3000               	movlw	0
 10074  1A6D  00A6               	movwf	___fleq@ff2+2
 10075  1A6E  3000               	movlw	0
 10076  1A6F  00A5               	movwf	___fleq@ff2+1
 10077  1A70  3000               	movlw	0
 10078  1A71  00A4               	movwf	___fleq@ff2
 10079  1A72                     l496:
 10080  1A72  0827               	movf	___fleq@ff2+3,w
 10081  1A73  0623               	xorwf	___fleq@ff1+3,w
 10082  1A74  1D03               	skipz
 10083  1A75  2A80               	goto	u7295
 10084  1A76  0826               	movf	___fleq@ff2+2,w
 10085  1A77  0622               	xorwf	___fleq@ff1+2,w
 10086  1A78  1D03               	skipz
 10087  1A79  2A80               	goto	u7295
 10088  1A7A  0825               	movf	___fleq@ff2+1,w
 10089  1A7B  0621               	xorwf	___fleq@ff1+1,w
 10090  1A7C  1D03               	skipz
 10091  1A7D  2A80               	goto	u7295
 10092  1A7E  0824               	movf	___fleq@ff2,w
 10093  1A7F  0620               	xorwf	___fleq@ff1,w
 10094  1A80                     u7295:
 10095  1A80  1903               	skipnz
 10096  1A81  2A83               	goto	u7291
 10097  1A82  2A84               	goto	u7290
 10098  1A83                     u7291:
 10099  1A83  2A86               	goto	l4114
 10100  1A84                     u7290:
 10101  1A84                     l4112:
 10102  1A84  1003               	clrc
 10103  1A85  2A87               	goto	l497
 10104  1A86                     l4114:
 10105  1A86  1403               	setc
 10106  1A87                     l497:
 10107  1A87  0008               	return
 10108  1A88                     __end_of___fleq:
 10109                           
 10110                           	psect	text23
 10111  19AC                     __ptext23:	
 10112 ;; *************** function _Lcd_Write_String *****************
 10113 ;; Defined at:
 10114 ;;		line 94 in file "./lcd.h"
 10115 ;; Parameters:    Size  Location     Type
 10116 ;;  a               2    5[BANK0 ] PTR unsigned char 
 10117 ;;		 -> main@msg1(20), main@msg(20), STR_1(15), 
 10118 ;; Auto vars:     Size  Location     Type
 10119 ;;  i               2   10[BANK0 ] int 
 10120 ;; Return value:  Size  Location     Type
 10121 ;;                  1    wreg      void 
 10122 ;; Registers used:
 10123 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10124 ;; Tracked objects:
 10125 ;;		On entry : 0/0
 10126 ;;		On exit  : 0/0
 10127 ;;		Unchanged: 0/0
 10128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10129 ;;      Params:         0       2       0       0       0
 10130 ;;      Locals:         0       2       0       0       0
 10131 ;;      Temps:          0       3       0       0       0
 10132 ;;      Totals:         0       7       0       0       0
 10133 ;;Total ram usage:        7 bytes
 10134 ;; Hardware stack levels used: 1
 10135 ;; Hardware stack levels required when called: 4
 10136 ;; This function calls:
 10137 ;;		_Lcd_Write_Char
 10138 ;; This function is called by:
 10139 ;;		_main
 10140 ;; This function uses a non-reentrant model
 10141 ;;
 10142                           
 10143                           
 10144                           ;psect for function _Lcd_Write_String
 10145  19AC                     _Lcd_Write_String:
 10146  19AC                     l4204:	
 10147                           ;incstack = 0
 10148                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 10149                           
 10150                           
 10151                           ;./lcd.h: 94: void Lcd_Write_String(char *a);./lcd.h: 95: {;./lcd.h: 96:  int i;;./lcd.h
      +                          : 97:  for(i=0;a[i]!='\0';i++)
 10152  19AC  1283               	bcf	3,5	;RP0=0, select bank0
 10153  19AD  1303               	bcf	3,6	;RP1=0, select bank0
 10154  19AE  01AA               	clrf	Lcd_Write_String@i
 10155  19AF  01AB               	clrf	Lcd_Write_String@i+1
 10156  19B0  29D5               	goto	l4210
 10157  19B1                     l4206:
 10158                           
 10159                           ;./lcd.h: 98:     Lcd_Write_Char(a[i]);
 10160  19B1  082A               	movf	Lcd_Write_String@i,w
 10161  19B2  0725               	addwf	Lcd_Write_String@a,w
 10162  19B3  00A8               	movwf	??_Lcd_Write_String+1
 10163  19B4  0826               	movf	Lcd_Write_String@a+1,w
 10164  19B5  00A7               	movwf	??_Lcd_Write_String
 10165  19B6  1803               	skipnc
 10166  19B7  0AA7               	incf	??_Lcd_Write_String,f
 10167  19B8  1FAA               	btfss	Lcd_Write_String@i,7
 10168  19B9  29BB               	goto	u7480
 10169  19BA  03A7               	decf	??_Lcd_Write_String,f
 10170  19BB                     u7480:
 10171  19BB  1283               	bcf	3,5	;RP0=0, select bank0
 10172  19BC  1303               	bcf	3,6	;RP1=0, select bank0
 10173  19BD  0827               	movf	??_Lcd_Write_String,w
 10174  19BE  00A9               	movwf	??_Lcd_Write_String+2
 10175  19BF  0829               	movf	??_Lcd_Write_String+2,w
 10176  19C0  00FF               	movwf	btemp+1
 10177  19C1  0828               	movf	??_Lcd_Write_String+1,w
 10178  19C2  0084               	movwf	4
 10179  19C3  120A  158A  2000  160A  158A  	fcall	stringtab
 10180  19C8  160A  158A  216F  160A  158A  	fcall	_Lcd_Write_Char
 10181  19CD                     l4208:
 10182  19CD  3001               	movlw	1
 10183  19CE  1283               	bcf	3,5	;RP0=0, select bank0
 10184  19CF  1303               	bcf	3,6	;RP1=0, select bank0
 10185  19D0  07AA               	addwf	Lcd_Write_String@i,f
 10186  19D1  1803               	skipnc
 10187  19D2  0AAB               	incf	Lcd_Write_String@i+1,f
 10188  19D3  3000               	movlw	0
 10189  19D4  07AB               	addwf	Lcd_Write_String@i+1,f
 10190  19D5                     l4210:
 10191  19D5  082A               	movf	Lcd_Write_String@i,w
 10192  19D6  0725               	addwf	Lcd_Write_String@a,w
 10193  19D7  00A8               	movwf	??_Lcd_Write_String+1
 10194  19D8  0826               	movf	Lcd_Write_String@a+1,w
 10195  19D9  00A7               	movwf	??_Lcd_Write_String
 10196  19DA  1803               	skipnc
 10197  19DB  0AA7               	incf	??_Lcd_Write_String,f
 10198  19DC  1FAA               	btfss	Lcd_Write_String@i,7
 10199  19DD  29DF               	goto	u7490
 10200  19DE  03A7               	decf	??_Lcd_Write_String,f
 10201  19DF                     u7490:
 10202  19DF  1283               	bcf	3,5	;RP0=0, select bank0
 10203  19E0  1303               	bcf	3,6	;RP1=0, select bank0
 10204  19E1  0827               	movf	??_Lcd_Write_String,w
 10205  19E2  00A9               	movwf	??_Lcd_Write_String+2
 10206  19E3  0829               	movf	??_Lcd_Write_String+2,w
 10207  19E4  00FF               	movwf	btemp+1
 10208  19E5  0828               	movf	??_Lcd_Write_String+1,w
 10209  19E6  0084               	movwf	4
 10210  19E7  120A  158A  2000  160A  158A  	fcall	stringtab
 10211  19EC  3A00               	xorlw	0
 10212  19ED  1D03               	skipz
 10213  19EE  29F0               	goto	u7501
 10214  19EF  29F1               	goto	u7500
 10215  19F0                     u7501:
 10216  19F0  29B1               	goto	l4206
 10217  19F1                     u7500:
 10218  19F1                     l77:
 10219  19F1  0008               	return
 10220  19F2                     __end_of_Lcd_Write_String:
 10221                           
 10222                           	psect	text24
 10223  196F                     __ptext24:	
 10224 ;; *************** function _Lcd_Write_Char *****************
 10225 ;; Defined at:
 10226 ;;		line 78 in file "./lcd.h"
 10227 ;; Parameters:    Size  Location     Type
 10228 ;;  a               1    wreg     unsigned char 
 10229 ;; Auto vars:     Size  Location     Type
 10230 ;;  a               1    4[BANK0 ] unsigned char 
 10231 ;;  y               1    3[BANK0 ] unsigned char 
 10232 ;;  temp            1    2[BANK0 ] unsigned char 
 10233 ;; Return value:  Size  Location     Type
 10234 ;;                  1    wreg      void 
 10235 ;; Registers used:
 10236 ;;		wreg, status,2, status,0, pclath, cstack
 10237 ;; Tracked objects:
 10238 ;;		On entry : 0/0
 10239 ;;		On exit  : 0/0
 10240 ;;		Unchanged: 0/0
 10241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10242 ;;      Params:         0       0       0       0       0
 10243 ;;      Locals:         0       3       0       0       0
 10244 ;;      Temps:          0       1       0       0       0
 10245 ;;      Totals:         0       4       0       0       0
 10246 ;;Total ram usage:        4 bytes
 10247 ;; Hardware stack levels used: 1
 10248 ;; Hardware stack levels required when called: 3
 10249 ;; This function calls:
 10250 ;;		_Lcd_Port
 10251 ;; This function is called by:
 10252 ;;		_Lcd_Write_String
 10253 ;; This function uses a non-reentrant model
 10254 ;;
 10255                           
 10256                           
 10257                           ;psect for function _Lcd_Write_Char
 10258  196F                     _Lcd_Write_Char:
 10259                           
 10260                           ;incstack = 0
 10261                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
 10262                           ;Lcd_Write_Char@a stored from wreg
 10263  196F  1283               	bcf	3,5	;RP0=0, select bank0
 10264  1970  1303               	bcf	3,6	;RP1=0, select bank0
 10265  1971  00A4               	movwf	Lcd_Write_Char@a
 10266  1972                     l3874:
 10267                           
 10268                           ;./lcd.h: 78: void Lcd_Write_Char(char a);./lcd.h: 79: {;./lcd.h: 80:    char temp,y;;./
      +                          lcd.h: 81:    temp = a&0x0F;
 10269  1972  0824               	movf	Lcd_Write_Char@a,w
 10270  1973  390F               	andlw	15
 10271  1974  00A1               	movwf	??_Lcd_Write_Char
 10272  1975  0821               	movf	??_Lcd_Write_Char,w
 10273  1976  00A2               	movwf	Lcd_Write_Char@temp
 10274                           
 10275                           ;./lcd.h: 82:    y = a&0xF0;
 10276  1977  0824               	movf	Lcd_Write_Char@a,w
 10277  1978  39F0               	andlw	240
 10278  1979  00A1               	movwf	??_Lcd_Write_Char
 10279  197A  0821               	movf	??_Lcd_Write_Char,w
 10280  197B  00A3               	movwf	Lcd_Write_Char@y
 10281  197C                     l3876:
 10282                           
 10283                           ;./lcd.h: 83:    PORTDbits.RD2 = 1;
 10284  197C  1508               	bsf	8,2	;volatile
 10285  197D                     l3878:
 10286                           
 10287                           ;./lcd.h: 84:    Lcd_Port(y>>4);
 10288  197D  0823               	movf	Lcd_Write_Char@y,w
 10289  197E  00A1               	movwf	??_Lcd_Write_Char
 10290  197F  3004               	movlw	4
 10291  1980                     u6625:
 10292  1980  1003               	clrc
 10293  1981  0CA1               	rrf	??_Lcd_Write_Char,f
 10294  1982  3EFF               	addlw	-1
 10295  1983  1D03               	skipz
 10296  1984  2980               	goto	u6625
 10297  1985  0821               	movf	??_Lcd_Write_Char,w
 10298  1986  160A  158A  20A2  160A  158A  	fcall	_Lcd_Port
 10299  198B                     l3880:
 10300                           
 10301                           ;./lcd.h: 85:    PORTDbits.RD3 = 1;
 10302  198B  1283               	bcf	3,5	;RP0=0, select bank0
 10303  198C  1303               	bcf	3,6	;RP1=0, select bank0
 10304  198D  1588               	bsf	8,3	;volatile
 10305  198E                     l3882:
 10306                           
 10307                           ;./lcd.h: 86:    _delay((unsigned long)((40)*(20000000/4000000.0)));
 10308  198E  3041               	movlw	65
 10309  198F  1283               	bcf	3,5	;RP0=0, select bank0
 10310  1990  1303               	bcf	3,6	;RP1=0, select bank0
 10311  1991  00A1               	movwf	??_Lcd_Write_Char
 10312  1992                     u7917:
 10313  1992  0BA1               	decfsz	??_Lcd_Write_Char,f
 10314  1993  2992               	goto	u7917
 10315  1994  2995               	nop2
 10316  1995                     l3884:
 10317                           
 10318                           ;./lcd.h: 87:    PORTDbits.RD3 = 0;
 10319  1995  1283               	bcf	3,5	;RP0=0, select bank0
 10320  1996  1303               	bcf	3,6	;RP1=0, select bank0
 10321  1997  1188               	bcf	8,3	;volatile
 10322  1998                     l3886:
 10323                           
 10324                           ;./lcd.h: 88:    Lcd_Port(temp);
 10325  1998  0822               	movf	Lcd_Write_Char@temp,w
 10326  1999  160A  158A  20A2  160A  158A  	fcall	_Lcd_Port
 10327  199E                     l3888:
 10328                           
 10329                           ;./lcd.h: 89:    PORTDbits.RD3 = 1;
 10330  199E  1283               	bcf	3,5	;RP0=0, select bank0
 10331  199F  1303               	bcf	3,6	;RP1=0, select bank0
 10332  19A0  1588               	bsf	8,3	;volatile
 10333  19A1                     l3890:
 10334                           
 10335                           ;./lcd.h: 90:    _delay((unsigned long)((40)*(20000000/4000000.0)));
 10336  19A1  3041               	movlw	65
 10337  19A2  1283               	bcf	3,5	;RP0=0, select bank0
 10338  19A3  1303               	bcf	3,6	;RP1=0, select bank0
 10339  19A4  00A1               	movwf	??_Lcd_Write_Char
 10340  19A5                     u7927:
 10341  19A5  0BA1               	decfsz	??_Lcd_Write_Char,f
 10342  19A6  29A5               	goto	u7927
 10343  19A7  29A8               	nop2
 10344  19A8                     l3892:
 10345                           
 10346                           ;./lcd.h: 91:    PORTDbits.RD3 = 0;
 10347  19A8  1283               	bcf	3,5	;RP0=0, select bank0
 10348  19A9  1303               	bcf	3,6	;RP1=0, select bank0
 10349  19AA  1188               	bcf	8,3	;volatile
 10350  19AB                     l71:
 10351  19AB  0008               	return
 10352  19AC                     __end_of_Lcd_Write_Char:
 10353                           
 10354                           	psect	text25
 10355  1B86                     __ptext25:	
 10356 ;; *************** function _Lcd_Set_Cursor *****************
 10357 ;; Defined at:
 10358 ;;		line 38 in file "./lcd.h"
 10359 ;; Parameters:    Size  Location     Type
 10360 ;;  a               1    wreg     unsigned char 
 10361 ;;  b               1    4[BANK0 ] unsigned char 
 10362 ;; Auto vars:     Size  Location     Type
 10363 ;;  a               1    7[BANK0 ] unsigned char 
 10364 ;;  temp            1   10[BANK0 ] unsigned char 
 10365 ;;  y               1    9[BANK0 ] unsigned char 
 10366 ;;  z               1    8[BANK0 ] unsigned char 
 10367 ;; Return value:  Size  Location     Type
 10368 ;;                  1    wreg      void 
 10369 ;; Registers used:
 10370 ;;		wreg, status,2, status,0, pclath, cstack
 10371 ;; Tracked objects:
 10372 ;;		On entry : 0/0
 10373 ;;		On exit  : 0/0
 10374 ;;		Unchanged: 0/0
 10375 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10376 ;;      Params:         0       1       0       0       0
 10377 ;;      Locals:         0       4       0       0       0
 10378 ;;      Temps:          0       2       0       0       0
 10379 ;;      Totals:         0       7       0       0       0
 10380 ;;Total ram usage:        7 bytes
 10381 ;; Hardware stack levels used: 1
 10382 ;; Hardware stack levels required when called: 4
 10383 ;; This function calls:
 10384 ;;		_Lcd_Cmd
 10385 ;; This function is called by:
 10386 ;;		_main
 10387 ;; This function uses a non-reentrant model
 10388 ;;
 10389                           
 10390                           
 10391                           ;psect for function _Lcd_Set_Cursor
 10392  1B86                     _Lcd_Set_Cursor:
 10393                           
 10394                           ;incstack = 0
 10395                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
 10396                           ;Lcd_Set_Cursor@a stored from wreg
 10397  1B86  1283               	bcf	3,5	;RP0=0, select bank0
 10398  1B87  1303               	bcf	3,6	;RP1=0, select bank0
 10399  1B88  00A7               	movwf	Lcd_Set_Cursor@a
 10400  1B89                     l4174:
 10401                           
 10402                           ;./lcd.h: 38: void Lcd_Set_Cursor(char a, char b);./lcd.h: 39: {;./lcd.h: 40:  char temp
      +                          ,z,y;;./lcd.h: 41:  if(a == 1)
 10403  1B89  0327               	decf	Lcd_Set_Cursor@a,w
 10404  1B8A  1D03               	btfss	3,2
 10405  1B8B  2B8D               	goto	u7441
 10406  1B8C  2B8E               	goto	u7440
 10407  1B8D                     u7441:
 10408  1B8D  2BB3               	goto	l4184
 10409  1B8E                     u7440:
 10410  1B8E                     l4176:
 10411                           
 10412                           ;./lcd.h: 42:  {;./lcd.h: 43:    temp = 0x80 + b - 1;
 10413  1B8E  0824               	movf	Lcd_Set_Cursor@b,w
 10414  1B8F  3E7F               	addlw	127
 10415  1B90  00A5               	movwf	??_Lcd_Set_Cursor
 10416  1B91  0825               	movf	??_Lcd_Set_Cursor,w
 10417  1B92  00AA               	movwf	Lcd_Set_Cursor@temp
 10418                           
 10419                           ;./lcd.h: 44:   z = temp>>4;
 10420  1B93  082A               	movf	Lcd_Set_Cursor@temp,w
 10421  1B94  00A5               	movwf	??_Lcd_Set_Cursor
 10422  1B95  3004               	movlw	4
 10423  1B96                     u7455:
 10424  1B96  1003               	clrc
 10425  1B97  0CA5               	rrf	??_Lcd_Set_Cursor,f
 10426  1B98  3EFF               	addlw	-1
 10427  1B99  1D03               	skipz
 10428  1B9A  2B96               	goto	u7455
 10429  1B9B  0825               	movf	??_Lcd_Set_Cursor,w
 10430  1B9C  00A6               	movwf	??_Lcd_Set_Cursor+1
 10431  1B9D  0826               	movf	??_Lcd_Set_Cursor+1,w
 10432  1B9E  00A8               	movwf	Lcd_Set_Cursor@z
 10433  1B9F                     l4178:
 10434                           
 10435                           ;./lcd.h: 45:   y = temp & 0x0F;
 10436  1B9F  082A               	movf	Lcd_Set_Cursor@temp,w
 10437  1BA0  390F               	andlw	15
 10438  1BA1  00A5               	movwf	??_Lcd_Set_Cursor
 10439  1BA2  0825               	movf	??_Lcd_Set_Cursor,w
 10440  1BA3  00A9               	movwf	Lcd_Set_Cursor@y
 10441  1BA4                     l4180:
 10442                           
 10443                           ;./lcd.h: 46:   Lcd_Cmd(z);
 10444  1BA4  0828               	movf	Lcd_Set_Cursor@z,w
 10445  1BA5  160A  158A  2086  160A  158A  	fcall	_Lcd_Cmd
 10446  1BAA                     l4182:
 10447                           
 10448                           ;./lcd.h: 47:   Lcd_Cmd(y);
 10449  1BAA  1283               	bcf	3,5	;RP0=0, select bank0
 10450  1BAB  1303               	bcf	3,6	;RP1=0, select bank0
 10451  1BAC  0829               	movf	Lcd_Set_Cursor@y,w
 10452  1BAD  160A  158A  2086  160A  158A  	fcall	_Lcd_Cmd
 10453                           
 10454                           ;./lcd.h: 48:  }
 10455  1BB2  2BDD               	goto	l65
 10456  1BB3                     l4184:
 10457  1BB3  3002               	movlw	2
 10458  1BB4  0627               	xorwf	Lcd_Set_Cursor@a,w
 10459  1BB5  1D03               	btfss	3,2
 10460  1BB6  2BB8               	goto	u7461
 10461  1BB7  2BB9               	goto	u7460
 10462  1BB8                     u7461:
 10463  1BB8  2BDD               	goto	l65
 10464  1BB9                     u7460:
 10465  1BB9                     l4186:
 10466                           
 10467                           ;./lcd.h: 50:  {;./lcd.h: 51:   temp = 0xC0 + b - 1;
 10468  1BB9  0824               	movf	Lcd_Set_Cursor@b,w
 10469  1BBA  3EBF               	addlw	191
 10470  1BBB  00A5               	movwf	??_Lcd_Set_Cursor
 10471  1BBC  0825               	movf	??_Lcd_Set_Cursor,w
 10472  1BBD  00AA               	movwf	Lcd_Set_Cursor@temp
 10473                           
 10474                           ;./lcd.h: 52:   z = temp>>4;
 10475  1BBE  082A               	movf	Lcd_Set_Cursor@temp,w
 10476  1BBF  00A5               	movwf	??_Lcd_Set_Cursor
 10477  1BC0  3004               	movlw	4
 10478  1BC1                     u7475:
 10479  1BC1  1003               	clrc
 10480  1BC2  0CA5               	rrf	??_Lcd_Set_Cursor,f
 10481  1BC3  3EFF               	addlw	-1
 10482  1BC4  1D03               	skipz
 10483  1BC5  2BC1               	goto	u7475
 10484  1BC6  0825               	movf	??_Lcd_Set_Cursor,w
 10485  1BC7  00A6               	movwf	??_Lcd_Set_Cursor+1
 10486  1BC8  0826               	movf	??_Lcd_Set_Cursor+1,w
 10487  1BC9  00A8               	movwf	Lcd_Set_Cursor@z
 10488  1BCA                     l4188:
 10489                           
 10490                           ;./lcd.h: 53:   y = temp & 0x0F;
 10491  1BCA  082A               	movf	Lcd_Set_Cursor@temp,w
 10492  1BCB  390F               	andlw	15
 10493  1BCC  00A5               	movwf	??_Lcd_Set_Cursor
 10494  1BCD  0825               	movf	??_Lcd_Set_Cursor,w
 10495  1BCE  00A9               	movwf	Lcd_Set_Cursor@y
 10496  1BCF                     l4190:
 10497                           
 10498                           ;./lcd.h: 54:   Lcd_Cmd(z);
 10499  1BCF  0828               	movf	Lcd_Set_Cursor@z,w
 10500  1BD0  160A  158A  2086  160A  158A  	fcall	_Lcd_Cmd
 10501  1BD5                     l4192:
 10502                           
 10503                           ;./lcd.h: 55:   Lcd_Cmd(y);
 10504  1BD5  1283               	bcf	3,5	;RP0=0, select bank0
 10505  1BD6  1303               	bcf	3,6	;RP1=0, select bank0
 10506  1BD7  0829               	movf	Lcd_Set_Cursor@y,w
 10507  1BD8  160A  158A  2086  160A  158A  	fcall	_Lcd_Cmd
 10508  1BDD                     l65:
 10509  1BDD  0008               	return
 10510  1BDE                     __end_of_Lcd_Set_Cursor:
 10511                           
 10512                           	psect	text26
 10513  1BDE                     __ptext26:	
 10514 ;; *************** function _Lcd_Init *****************
 10515 ;; Defined at:
 10516 ;;		line 59 in file "./lcd.h"
 10517 ;; Parameters:    Size  Location     Type
 10518 ;;		None
 10519 ;; Auto vars:     Size  Location     Type
 10520 ;;		None
 10521 ;; Return value:  Size  Location     Type
 10522 ;;                  1    wreg      void 
 10523 ;; Registers used:
 10524 ;;		wreg, status,2, status,0, pclath, cstack
 10525 ;; Tracked objects:
 10526 ;;		On entry : 0/0
 10527 ;;		On exit  : 0/0
 10528 ;;		Unchanged: 0/0
 10529 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10530 ;;      Params:         0       0       0       0       0
 10531 ;;      Locals:         0       0       0       0       0
 10532 ;;      Temps:          0       2       0       0       0
 10533 ;;      Totals:         0       2       0       0       0
 10534 ;;Total ram usage:        2 bytes
 10535 ;; Hardware stack levels used: 1
 10536 ;; Hardware stack levels required when called: 4
 10537 ;; This function calls:
 10538 ;;		_Lcd_Cmd
 10539 ;;		_Lcd_Port
 10540 ;; This function is called by:
 10541 ;;		_main
 10542 ;; This function uses a non-reentrant model
 10543 ;;
 10544                           
 10545                           
 10546                           ;psect for function _Lcd_Init
 10547  1BDE                     _Lcd_Init:
 10548  1BDE                     l4194:	
 10549                           ;incstack = 0
 10550                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
 10551                           
 10552                           
 10553                           ;./lcd.h: 61:   Lcd_Port(0x00);
 10554  1BDE  3000               	movlw	0
 10555  1BDF  160A  158A  20A2  160A  158A  	fcall	_Lcd_Port
 10556  1BE4                     l4196:
 10557                           
 10558                           ;./lcd.h: 62:    _delay((unsigned long)((20)*(20000000/4000.0)));
 10559  1BE4  3082               	movlw	130
 10560  1BE5  1283               	bcf	3,5	;RP0=0, select bank0
 10561  1BE6  1303               	bcf	3,6	;RP1=0, select bank0
 10562  1BE7  00A5               	movwf	??_Lcd_Init+1
 10563  1BE8  30DD               	movlw	221
 10564  1BE9  00A4               	movwf	??_Lcd_Init
 10565  1BEA                     u7937:
 10566  1BEA  0BA4               	decfsz	??_Lcd_Init,f
 10567  1BEB  2BEA               	goto	u7937
 10568  1BEC  0BA5               	decfsz	??_Lcd_Init+1,f
 10569  1BED  2BEA               	goto	u7937
 10570  1BEE                     l4198:
 10571                           
 10572                           ;./lcd.h: 63:   Lcd_Cmd(0x03);
 10573  1BEE  3003               	movlw	3
 10574  1BEF  160A  158A  2086  160A  158A  	fcall	_Lcd_Cmd
 10575                           
 10576                           ;./lcd.h: 64:  _delay((unsigned long)((5)*(20000000/4000.0)));
 10577  1BF4  3021               	movlw	33
 10578  1BF5  1283               	bcf	3,5	;RP0=0, select bank0
 10579  1BF6  1303               	bcf	3,6	;RP1=0, select bank0
 10580  1BF7  00A5               	movwf	??_Lcd_Init+1
 10581  1BF8  3075               	movlw	117
 10582  1BF9  00A4               	movwf	??_Lcd_Init
 10583  1BFA                     u7947:
 10584  1BFA  0BA4               	decfsz	??_Lcd_Init,f
 10585  1BFB  2BFA               	goto	u7947
 10586  1BFC  0BA5               	decfsz	??_Lcd_Init+1,f
 10587  1BFD  2BFA               	goto	u7947
 10588  1BFE  2BFF               	nop2
 10589  1BFF                     l4200:
 10590                           
 10591                           ;./lcd.h: 65:   Lcd_Cmd(0x03);
 10592  1BFF  3003               	movlw	3
 10593  1C00  160A  158A  2086  160A  158A  	fcall	_Lcd_Cmd
 10594  1C05                     l4202:
 10595                           
 10596                           ;./lcd.h: 66:  _delay((unsigned long)((11)*(20000000/4000.0)));
 10597  1C05  3048               	movlw	72
 10598  1C06  1283               	bcf	3,5	;RP0=0, select bank0
 10599  1C07  1303               	bcf	3,6	;RP1=0, select bank0
 10600  1C08  00A5               	movwf	??_Lcd_Init+1
 10601  1C09  306B               	movlw	107
 10602  1C0A  00A4               	movwf	??_Lcd_Init
 10603  1C0B                     u7957:
 10604  1C0B  0BA4               	decfsz	??_Lcd_Init,f
 10605  1C0C  2C0B               	goto	u7957
 10606  1C0D  0BA5               	decfsz	??_Lcd_Init+1,f
 10607  1C0E  2C0B               	goto	u7957
 10608  1C0F  2C10               	nop2
 10609                           
 10610                           ;./lcd.h: 67:   Lcd_Cmd(0x03);
 10611  1C10  3003               	movlw	3
 10612  1C11  160A  158A  2086  160A  158A  	fcall	_Lcd_Cmd
 10613                           
 10614                           ;./lcd.h: 69:   Lcd_Cmd(0x02);
 10615  1C16  3002               	movlw	2
 10616  1C17  160A  158A  2086  160A  158A  	fcall	_Lcd_Cmd
 10617                           
 10618                           ;./lcd.h: 70:   Lcd_Cmd(0x02);
 10619  1C1C  3002               	movlw	2
 10620  1C1D  160A  158A  2086  160A  158A  	fcall	_Lcd_Cmd
 10621                           
 10622                           ;./lcd.h: 71:   Lcd_Cmd(0x08);
 10623  1C22  3008               	movlw	8
 10624  1C23  160A  158A  2086  160A  158A  	fcall	_Lcd_Cmd
 10625                           
 10626                           ;./lcd.h: 72:   Lcd_Cmd(0x00);
 10627  1C28  3000               	movlw	0
 10628  1C29  160A  158A  2086  160A  158A  	fcall	_Lcd_Cmd
 10629                           
 10630                           ;./lcd.h: 73:   Lcd_Cmd(0x0C);
 10631  1C2E  300C               	movlw	12
 10632  1C2F  160A  158A  2086  160A  158A  	fcall	_Lcd_Cmd
 10633                           
 10634                           ;./lcd.h: 74:   Lcd_Cmd(0x00);
 10635  1C34  3000               	movlw	0
 10636  1C35  160A  158A  2086  160A  158A  	fcall	_Lcd_Cmd
 10637                           
 10638                           ;./lcd.h: 75:   Lcd_Cmd(0x06);
 10639  1C3A  3006               	movlw	6
 10640  1C3B  160A  158A  2086  160A  158A  	fcall	_Lcd_Cmd
 10641  1C40                     l68:
 10642  1C40  0008               	return
 10643  1C41                     __end_of_Lcd_Init:
 10644                           
 10645                           	psect	text27
 10646  1879                     __ptext27:	
 10647 ;; *************** function _Lcd_Clear *****************
 10648 ;; Defined at:
 10649 ;;		line 32 in file "./lcd.h"
 10650 ;; Parameters:    Size  Location     Type
 10651 ;;		None
 10652 ;; Auto vars:     Size  Location     Type
 10653 ;;		None
 10654 ;; Return value:  Size  Location     Type
 10655 ;;                  1    wreg      void 
 10656 ;; Registers used:
 10657 ;;		wreg, status,2, status,0, pclath, cstack
 10658 ;; Tracked objects:
 10659 ;;		On entry : 0/0
 10660 ;;		On exit  : 0/0
 10661 ;;		Unchanged: 0/0
 10662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10663 ;;      Params:         0       0       0       0       0
 10664 ;;      Locals:         0       0       0       0       0
 10665 ;;      Temps:          0       0       0       0       0
 10666 ;;      Totals:         0       0       0       0       0
 10667 ;;Total ram usage:        0 bytes
 10668 ;; Hardware stack levels used: 1
 10669 ;; Hardware stack levels required when called: 4
 10670 ;; This function calls:
 10671 ;;		_Lcd_Cmd
 10672 ;; This function is called by:
 10673 ;;		_main
 10674 ;; This function uses a non-reentrant model
 10675 ;;
 10676                           
 10677                           
 10678                           ;psect for function _Lcd_Clear
 10679  1879                     _Lcd_Clear:
 10680  1879                     l4172:	
 10681                           ;incstack = 0
 10682                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
 10683                           
 10684                           
 10685                           ;./lcd.h: 34:  Lcd_Cmd(0);
 10686  1879  3000               	movlw	0
 10687  187A  160A  158A  2086  160A  158A  	fcall	_Lcd_Cmd
 10688                           
 10689                           ;./lcd.h: 35:  Lcd_Cmd(1);
 10690  187F  3001               	movlw	1
 10691  1880  160A  158A  2086  160A  158A  	fcall	_Lcd_Cmd
 10692  1885                     l59:
 10693  1885  0008               	return
 10694  1886                     __end_of_Lcd_Clear:
 10695                           
 10696                           	psect	text28
 10697  1886                     __ptext28:	
 10698 ;; *************** function _Lcd_Cmd *****************
 10699 ;; Defined at:
 10700 ;;		line 23 in file "./lcd.h"
 10701 ;; Parameters:    Size  Location     Type
 10702 ;;  a               1    wreg     unsigned char 
 10703 ;; Auto vars:     Size  Location     Type
 10704 ;;  a               1    3[BANK0 ] unsigned char 
 10705 ;; Return value:  Size  Location     Type
 10706 ;;                  1    wreg      void 
 10707 ;; Registers used:
 10708 ;;		wreg, status,2, status,0, pclath, cstack
 10709 ;; Tracked objects:
 10710 ;;		On entry : 0/0
 10711 ;;		On exit  : 0/0
 10712 ;;		Unchanged: 0/0
 10713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10714 ;;      Params:         0       0       0       0       0
 10715 ;;      Locals:         0       1       0       0       0
 10716 ;;      Temps:          0       2       0       0       0
 10717 ;;      Totals:         0       3       0       0       0
 10718 ;;Total ram usage:        3 bytes
 10719 ;; Hardware stack levels used: 1
 10720 ;; Hardware stack levels required when called: 3
 10721 ;; This function calls:
 10722 ;;		_Lcd_Port
 10723 ;; This function is called by:
 10724 ;;		_Lcd_Clear
 10725 ;;		_Lcd_Set_Cursor
 10726 ;;		_Lcd_Init
 10727 ;;		_Lcd_Shift_Right
 10728 ;;		_Lcd_Shift_Left
 10729 ;; This function uses a non-reentrant model
 10730 ;;
 10731                           
 10732                           
 10733                           ;psect for function _Lcd_Cmd
 10734  1886                     _Lcd_Cmd:
 10735                           
 10736                           ;incstack = 0
 10737                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
 10738                           ;Lcd_Cmd@a stored from wreg
 10739  1886  1283               	bcf	3,5	;RP0=0, select bank0
 10740  1887  1303               	bcf	3,6	;RP1=0, select bank0
 10741  1888  00A3               	movwf	Lcd_Cmd@a
 10742  1889                     l3864:
 10743                           
 10744                           ;./lcd.h: 23: void Lcd_Cmd(char a);./lcd.h: 24: {;./lcd.h: 25:  PORTDbits.RD2 = 0;
 10745  1889  1108               	bcf	8,2	;volatile
 10746  188A                     l3866:
 10747                           
 10748                           ;./lcd.h: 26:  Lcd_Port(a);
 10749  188A  0823               	movf	Lcd_Cmd@a,w
 10750  188B  160A  158A  20A2  160A  158A  	fcall	_Lcd_Port
 10751  1890                     l3868:
 10752                           
 10753                           ;./lcd.h: 27:  PORTDbits.RD3 = 1;
 10754  1890  1283               	bcf	3,5	;RP0=0, select bank0
 10755  1891  1303               	bcf	3,6	;RP1=0, select bank0
 10756  1892  1588               	bsf	8,3	;volatile
 10757  1893                     l3870:
 10758                           
 10759                           ;./lcd.h: 28:         _delay((unsigned long)((4)*(20000000/4000.0)));
 10760  1893  301A               	movlw	26
 10761  1894  1283               	bcf	3,5	;RP0=0, select bank0
 10762  1895  1303               	bcf	3,6	;RP1=0, select bank0
 10763  1896  00A2               	movwf	??_Lcd_Cmd+1
 10764  1897  30F7               	movlw	247
 10765  1898  00A1               	movwf	??_Lcd_Cmd
 10766  1899                     u7967:
 10767  1899  0BA1               	decfsz	??_Lcd_Cmd,f
 10768  189A  2899               	goto	u7967
 10769  189B  0BA2               	decfsz	??_Lcd_Cmd+1,f
 10770  189C  2899               	goto	u7967
 10771  189D  289E               	nop2
 10772  189E                     l3872:
 10773                           
 10774                           ;./lcd.h: 29:         PORTDbits.RD3 = 0;
 10775  189E  1283               	bcf	3,5	;RP0=0, select bank0
 10776  189F  1303               	bcf	3,6	;RP1=0, select bank0
 10777  18A0  1188               	bcf	8,3	;volatile
 10778  18A1                     l56:
 10779  18A1  0008               	return
 10780  18A2                     __end_of_Lcd_Cmd:
 10781                           
 10782                           	psect	text29
 10783  18A2                     __ptext29:	
 10784 ;; *************** function _Lcd_Port *****************
 10785 ;; Defined at:
 10786 ;;		line 1 in file "./lcd.h"
 10787 ;; Parameters:    Size  Location     Type
 10788 ;;  a               1    wreg     unsigned char 
 10789 ;; Auto vars:     Size  Location     Type
 10790 ;;  a               1    0[BANK0 ] unsigned char 
 10791 ;; Return value:  Size  Location     Type
 10792 ;;                  1    wreg      void 
 10793 ;; Registers used:
 10794 ;;		wreg
 10795 ;; Tracked objects:
 10796 ;;		On entry : 0/0
 10797 ;;		On exit  : 0/0
 10798 ;;		Unchanged: 0/0
 10799 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10800 ;;      Params:         0       0       0       0       0
 10801 ;;      Locals:         0       1       0       0       0
 10802 ;;      Temps:          0       0       0       0       0
 10803 ;;      Totals:         0       1       0       0       0
 10804 ;;Total ram usage:        1 bytes
 10805 ;; Hardware stack levels used: 1
 10806 ;; Hardware stack levels required when called: 2
 10807 ;; This function calls:
 10808 ;;		Nothing
 10809 ;; This function is called by:
 10810 ;;		_Lcd_Cmd
 10811 ;;		_Lcd_Init
 10812 ;;		_Lcd_Write_Char
 10813 ;; This function uses a non-reentrant model
 10814 ;;
 10815                           
 10816                           
 10817                           ;psect for function _Lcd_Port
 10818  18A2                     _Lcd_Port:
 10819                           
 10820                           ;incstack = 0
 10821                           ; Regs used in _Lcd_Port: [wreg]
 10822                           ;Lcd_Port@a stored from wreg
 10823  18A2  1283               	bcf	3,5	;RP0=0, select bank0
 10824  18A3  1303               	bcf	3,6	;RP1=0, select bank0
 10825  18A4  00A0               	movwf	Lcd_Port@a
 10826  18A5                     l3460:
 10827                           
 10828                           ;./lcd.h: 1: void Lcd_Port(char a);./lcd.h: 2: {;./lcd.h: 3:  if(a & 1)
 10829  18A5  1C20               	btfss	Lcd_Port@a,0
 10830  18A6  28A8               	goto	u5601
 10831  18A7  28A9               	goto	u5600
 10832  18A8                     u5601:
 10833  18A8  28AB               	goto	l45
 10834  18A9                     u5600:
 10835  18A9                     l3462:
 10836                           
 10837                           ;./lcd.h: 4:   PORTDbits.RD4 = 1;
 10838  18A9  1608               	bsf	8,4	;volatile
 10839  18AA  28AC               	goto	l46
 10840  18AB                     l45:	
 10841                           ;./lcd.h: 5:  else
 10842                           
 10843                           
 10844                           ;./lcd.h: 6:   PORTDbits.RD4 = 0;
 10845  18AB  1208               	bcf	8,4	;volatile
 10846  18AC                     l46:
 10847                           
 10848                           ;./lcd.h: 8:  if(a & 2)
 10849  18AC  1CA0               	btfss	Lcd_Port@a,1
 10850  18AD  28AF               	goto	u5611
 10851  18AE  28B0               	goto	u5610
 10852  18AF                     u5611:
 10853  18AF  28B2               	goto	l47
 10854  18B0                     u5610:
 10855  18B0                     l3464:
 10856                           
 10857                           ;./lcd.h: 9:   PORTDbits.RD5 = 1;
 10858  18B0  1688               	bsf	8,5	;volatile
 10859  18B1  28B3               	goto	l48
 10860  18B2                     l47:	
 10861                           ;./lcd.h: 10:  else
 10862                           
 10863                           
 10864                           ;./lcd.h: 11:   PORTDbits.RD5 = 0;
 10865  18B2  1288               	bcf	8,5	;volatile
 10866  18B3                     l48:
 10867                           
 10868                           ;./lcd.h: 13:  if(a & 4)
 10869  18B3  1D20               	btfss	Lcd_Port@a,2
 10870  18B4  28B6               	goto	u5621
 10871  18B5  28B7               	goto	u5620
 10872  18B6                     u5621:
 10873  18B6  28B9               	goto	l49
 10874  18B7                     u5620:
 10875  18B7                     l3466:
 10876                           
 10877                           ;./lcd.h: 14:   PORTDbits.RD6 = 1;
 10878  18B7  1708               	bsf	8,6	;volatile
 10879  18B8  28BA               	goto	l50
 10880  18B9                     l49:	
 10881                           ;./lcd.h: 15:  else
 10882                           
 10883                           
 10884                           ;./lcd.h: 16:   PORTDbits.RD6 = 0;
 10885  18B9  1308               	bcf	8,6	;volatile
 10886  18BA                     l50:
 10887                           
 10888                           ;./lcd.h: 18:  if(a & 8)
 10889  18BA  1DA0               	btfss	Lcd_Port@a,3
 10890  18BB  28BD               	goto	u5631
 10891  18BC  28BE               	goto	u5630
 10892  18BD                     u5631:
 10893  18BD  28C0               	goto	l51
 10894  18BE                     u5630:
 10895  18BE                     l3468:
 10896                           
 10897                           ;./lcd.h: 19:   PORTDbits.RD7 = 1;
 10898  18BE  1788               	bsf	8,7	;volatile
 10899  18BF  28C1               	goto	l53
 10900  18C0                     l51:	
 10901                           ;./lcd.h: 20:  else
 10902                           
 10903                           
 10904                           ;./lcd.h: 21:   PORTDbits.RD7 = 0;
 10905  18C0  1388               	bcf	8,7	;volatile
 10906  18C1                     l53:
 10907  18C1  0008               	return
 10908  18C2                     __end_of_Lcd_Port:
 10909                           
 10910                           	psect	text30
 10911  1B2E                     __ptext30:	
 10912 ;; *************** function _Interrupcao *****************
 10913 ;; Defined at:
 10914 ;;		line 38 in file "Main.c"
 10915 ;; Parameters:    Size  Location     Type
 10916 ;;		None
 10917 ;; Auto vars:     Size  Location     Type
 10918 ;;		None
 10919 ;; Return value:  Size  Location     Type
 10920 ;;                  1    wreg      void 
 10921 ;; Registers used:
 10922 ;;		wreg, status,2, status,0, pclath, cstack
 10923 ;; Tracked objects:
 10924 ;;		On entry : 0/0
 10925 ;;		On exit  : 0/0
 10926 ;;		Unchanged: 0/0
 10927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10928 ;;      Params:         0       0       0       0       0
 10929 ;;      Locals:         0       0       0       0       0
 10930 ;;      Temps:          2       0       0       0       0
 10931 ;;      Totals:         2       0       0       0       0
 10932 ;;Total ram usage:        2 bytes
 10933 ;; Hardware stack levels used: 1
 10934 ;; Hardware stack levels required when called: 1
 10935 ;; This function calls:
 10936 ;;		_conversorADC
 10937 ;; This function is called by:
 10938 ;;		Interrupt level 1
 10939 ;; This function uses a non-reentrant model
 10940 ;;
 10941                           
 10942                           
 10943                           ;psect for function _Interrupcao
 10944  1B2E                     _Interrupcao:
 10945  1B2E                     i1l3302:
 10946  1B2E  0064               	clrwdt	;# 
 10947                           
 10948                           ;Main.c: 40:  INTCONbits.GIE = 0;
 10949  1B2F  138B               	bcf	11,7	;volatile
 10950                           
 10951                           ;Main.c: 41:  if (PIR1bits.TMR1IF){
 10952  1B30  1283               	bcf	3,5	;RP0=0, select bank0
 10953  1B31  1303               	bcf	3,6	;RP1=0, select bank0
 10954  1B32  1C0C               	btfss	12,0	;volatile
 10955  1B33  2B35               	goto	u551_21
 10956  1B34  2B36               	goto	u551_20
 10957  1B35                     u551_21:
 10958  1B35  2B7D               	goto	i1l114
 10959  1B36                     u551_20:
 10960  1B36                     i1l3304:
 10961                           
 10962                           ;Main.c: 42:   if(Timer == 1*5){
 10963  1B36  3005               	movlw	5
 10964  1B37  0675               	xorwf	_Timer,w
 10965  1B38  0476               	iorwf	_Timer+1,w
 10966  1B39  1D03               	btfss	3,2
 10967  1B3A  2B3C               	goto	u552_21
 10968  1B3B  2B3D               	goto	u552_20
 10969  1B3C                     u552_21:
 10970  1B3C  2B70               	goto	i1l3312
 10971  1B3D                     u552_20:
 10972  1B3D                     i1l3306:
 10973                           
 10974                           ;Main.c: 43:             ADC_tensao = conversorADC(1);
 10975  1B3D  3001               	movlw	1
 10976  1B3E  00F0               	movwf	conversorADC@canal
 10977  1B3F  3000               	movlw	0
 10978  1B40  00F1               	movwf	conversorADC@canal+1
 10979  1B41  160A  158A  20C2  160A  158A  	fcall	_conversorADC
 10980  1B46  0871               	movf	?_conversorADC+1,w
 10981  1B47  1683               	bsf	3,5	;RP0=1, select bank3
 10982  1B48  1703               	bsf	3,6	;RP1=1, select bank3
 10983  1B49  00C7               	movwf	(_ADC_tensao+1)^(0+384)
 10984  1B4A  0870               	movf	?_conversorADC,w
 10985  1B4B  00C6               	movwf	_ADC_tensao^(0+384)
 10986                           
 10987                           ;Main.c: 44:             ADC_temp = conversorADC(2);
 10988  1B4C  3002               	movlw	2
 10989  1B4D  00F0               	movwf	conversorADC@canal
 10990  1B4E  3000               	movlw	0
 10991  1B4F  00F1               	movwf	conversorADC@canal+1
 10992  1B50  160A  158A  20C2  160A  158A  	fcall	_conversorADC
 10993  1B55  0871               	movf	?_conversorADC+1,w
 10994  1B56  1683               	bsf	3,5	;RP0=1, select bank3
 10995  1B57  1703               	bsf	3,6	;RP1=1, select bank3
 10996  1B58  00C9               	movwf	(_ADC_temp+1)^(0+384)
 10997  1B59  0870               	movf	?_conversorADC,w
 10998  1B5A  00C8               	movwf	_ADC_temp^(0+384)
 10999                           
 11000                           ;Main.c: 45:             ADC_corrente = conversorADC(0);
 11001  1B5B  3000               	movlw	0
 11002  1B5C  00F0               	movwf	conversorADC@canal
 11003  1B5D  00F1               	movwf	conversorADC@canal+1
 11004  1B5E  160A  158A  20C2  160A  158A  	fcall	_conversorADC
 11005  1B63  0871               	movf	?_conversorADC+1,w
 11006  1B64  1683               	bsf	3,5	;RP0=1, select bank3
 11007  1B65  1703               	bsf	3,6	;RP1=1, select bank3
 11008  1B66  00C5               	movwf	(_ADC_corrente+1)^(0+384)
 11009  1B67  0870               	movf	?_conversorADC,w
 11010  1B68  00C4               	movwf	_ADC_corrente^(0+384)
 11011  1B69                     i1l3308:
 11012                           
 11013                           ;Main.c: 47:             Timer = 0;
 11014  1B69  01F5               	clrf	_Timer
 11015  1B6A  01F6               	clrf	_Timer+1
 11016  1B6B                     i1l3310:
 11017                           
 11018                           ;Main.c: 48:             flag = 1;
 11019  1B6B  3001               	movlw	1
 11020  1B6C  00CA               	movwf	_flag^(0+384)
 11021  1B6D  3000               	movlw	0
 11022  1B6E  00CB               	movwf	(_flag^(0+384)+1)
 11023                           
 11024                           ;Main.c: 49:   }
 11025  1B6F  2B76               	goto	i1l116
 11026  1B70                     i1l3312:
 11027                           
 11028                           ;Main.c: 51:    Timer++;
 11029  1B70  3001               	movlw	1
 11030  1B71  07F5               	addwf	_Timer,f
 11031  1B72  1803               	skipnc
 11032  1B73  0AF6               	incf	_Timer+1,f
 11033  1B74  3000               	movlw	0
 11034  1B75  07F6               	addwf	_Timer+1,f
 11035  1B76                     i1l116:	
 11036                           ;Main.c: 52:   }
 11037                           
 11038                           
 11039                           ;Main.c: 53:   TMR1L = 220;
 11040  1B76  30DC               	movlw	220
 11041  1B77  1283               	bcf	3,5	;RP0=0, select bank0
 11042  1B78  1303               	bcf	3,6	;RP1=0, select bank0
 11043  1B79  008E               	movwf	14	;volatile
 11044                           
 11045                           ;Main.c: 54:   TMR1H = 11;
 11046  1B7A  300B               	movlw	11
 11047  1B7B  008F               	movwf	15	;volatile
 11048  1B7C                     i1l3314:
 11049                           
 11050                           ;Main.c: 55:   PIR1bits.TMR1IF = 0;
 11051  1B7C  100C               	bcf	12,0	;volatile
 11052  1B7D                     i1l114:	
 11053                           ;Main.c: 56:  }
 11054                           
 11055  1B7D  0064               	clrwdt	;# 
 11056  1B7E                     i1l3316:
 11057                           
 11058                           ;Main.c: 58:  INTCONbits.GIE = 1;
 11059  1B7E  178B               	bsf	11,7	;volatile
 11060  1B7F                     i1l117:
 11061  1B7F  0874               	movf	??_Interrupcao+1,w
 11062  1B80  008A               	movwf	10
 11063  1B81  0E73               	swapf	??_Interrupcao,w
 11064  1B82  0083               	movwf	3
 11065  1B83  0EFE               	swapf	btemp,f
 11066  1B84  0E7E               	swapf	btemp,w
 11067  1B85  0009               	retfie
 11068  1B86                     __end_of_Interrupcao:
 11069                           
 11070                           	psect	intentry
 11071  0004                     __pintentry:	
 11072                           ;incstack = 0
 11073                           ; Regs used in _Interrupcao: [wreg+status,2+status,0+pclath+cstack]
 11074                           
 11075  0004                     interrupt_function:
 11076  007E                     saved_w	set	btemp
 11077  0004  00FE               	movwf	btemp
 11078  0005  0E03               	swapf	3,w
 11079  0006  00F3               	movwf	??_Interrupcao
 11080  0007  080A               	movf	10,w
 11081  0008  00F4               	movwf	??_Interrupcao+1
 11082  0009  160A  158A  2B2E   	ljmp	_Interrupcao
 11083                           
 11084                           	psect	text31
 11085  18C2                     __ptext31:	
 11086 ;; *************** function _conversorADC *****************
 11087 ;; Defined at:
 11088 ;;		line 27 in file "Main.c"
 11089 ;; Parameters:    Size  Location     Type
 11090 ;;  canal           2    0[COMMON] int 
 11091 ;; Auto vars:     Size  Location     Type
 11092 ;;		None
 11093 ;; Return value:  Size  Location     Type
 11094 ;;                  2    0[COMMON] int 
 11095 ;; Registers used:
 11096 ;;		wreg, status,2, status,0
 11097 ;; Tracked objects:
 11098 ;;		On entry : 0/0
 11099 ;;		On exit  : 0/0
 11100 ;;		Unchanged: 0/0
 11101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11102 ;;      Params:         2       0       0       0       0
 11103 ;;      Locals:         0       0       0       0       0
 11104 ;;      Temps:          1       0       0       0       0
 11105 ;;      Totals:         3       0       0       0       0
 11106 ;;Total ram usage:        3 bytes
 11107 ;; Hardware stack levels used: 1
 11108 ;; This function calls:
 11109 ;;		Nothing
 11110 ;; This function is called by:
 11111 ;;		_Interrupcao
 11112 ;; This function uses a non-reentrant model
 11113 ;;
 11114                           
 11115                           
 11116                           ;psect for function _conversorADC
 11117  18C2                     _conversorADC:
 11118  18C2                     i1l3080:	
 11119                           ;incstack = 0
 11120                           ; Regs used in _conversorADC: [wreg+status,2+status,0]
 11121                           
 11122                           
 11123                           ;Main.c: 28:     ADCON0= (canal<<3);
 11124  18C2  0870               	movf	conversorADC@canal,w
 11125  18C3  00F2               	movwf	??_conversorADC
 11126  18C4  3002               	movlw	2
 11127  18C5                     u514_25:
 11128  18C5  1003               	clrc
 11129  18C6  0DF2               	rlf	??_conversorADC,f
 11130  18C7  3EFF               	addlw	-1
 11131  18C8  1D03               	skipz
 11132  18C9  28C5               	goto	u514_25
 11133  18CA  1003               	clrc
 11134  18CB  0D72               	rlf	??_conversorADC,w
 11135  18CC  1283               	bcf	3,5	;RP0=0, select bank0
 11136  18CD  1303               	bcf	3,6	;RP1=0, select bank0
 11137  18CE  009F               	movwf	31	;volatile
 11138  18CF                     i1l3082:
 11139                           
 11140                           ;Main.c: 29:     ADON = 1;
 11141  18CF  141F               	bsf	31,0	;volatile
 11142  18D0                     i1l3084:
 11143                           
 11144                           ;Main.c: 30:     _delay((unsigned long)((10)*(20000000/4000000.0)));
 11145  18D0  3010               	movlw	16
 11146  18D1  00F2               	movwf	??_conversorADC
 11147  18D2                     u797_27:
 11148  18D2  0BF2               	decfsz	??_conversorADC,f
 11149  18D3  28D2               	goto	u797_27
 11150  18D4  0000               	nop
 11151  18D5                     i1l3086:
 11152                           
 11153                           ;Main.c: 32:     GO=1;
 11154  18D5  1283               	bcf	3,5	;RP0=0, select bank0
 11155  18D6  1303               	bcf	3,6	;RP1=0, select bank0
 11156  18D7  151F               	bsf	31,2	;volatile
 11157  18D8                     i1l106:	
 11158                           ;Main.c: 33:     while(GO_DONE==1);
 11159                           
 11160  18D8  191F               	btfsc	31,2	;volatile
 11161  18D9  28DB               	goto	u515_21
 11162  18DA  28DC               	goto	u515_20
 11163  18DB                     u515_21:
 11164  18DB  28D8               	goto	i1l106
 11165  18DC                     u515_20:
 11166  18DC                     i1l3088:
 11167                           
 11168                           ;Main.c: 35:     return((ADRESH<<8) + ADRESL);
 11169  18DC  081E               	movf	30,w	;volatile
 11170  18DD  00F1               	movwf	?_conversorADC+1
 11171  18DE  1683               	bsf	3,5	;RP0=1, select bank1
 11172  18DF  1303               	bcf	3,6	;RP1=0, select bank1
 11173  18E0  081E               	movf	30,w	;volatile
 11174  18E1  00F0               	movwf	?_conversorADC
 11175  18E2                     i1l109:
 11176  18E2  0008               	return
 11177  18E3                     __end_of_conversorADC:
 11178  007E                     btemp	set	126	;btemp
 11179  007E                     wtemp0	set	126
 11180                           
 11181                           	psect	config
 11182                           
 11183                           ;Config register CONFIG @ 0x2007
 11184                           ;	Oscillator Selection bits
 11185                           ;	FOSC = HS, HS oscillator
 11186                           ;	Watchdog Timer Enable bit
 11187                           ;	WDTE = ON, WDT enabled
 11188                           ;	Power-up Timer Enable bit
 11189                           ;	PWRTE = ON, PWRT enabled
 11190                           ;	Brown-out Reset Enable bit
 11191                           ;	BOREN = ON, BOR enabled
 11192                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
 11193                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
 11194                           ;	Data EEPROM Memory Code Protection bit
 11195                           ;	CPD = OFF, Data EEPROM code protection off
 11196                           ;	Flash Program Memory Write Enable bits
 11197                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
 11198                           ;	In-Circuit Debugger Mode bit
 11199                           ;	DEBUG = 0x1, unprogrammed default
 11200                           ;	Flash Program Memory Code Protection bit
 11201                           ;	CP = OFF, Code protection off
 11202  2007                     	org	8199
 11203  2007  3F76               	dw	16246

Data Sizes:
    Strings     61
    Constant    144
    Data        0
    BSS         29
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       9
    BANK0            80     78      78
    BANK1            80     50      55
    BANK3            96     40      60
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_4(CODE[17]), STR_3(CODE[15]), STR_2(CODE[14]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> main@msg1(BANK3[20]), main@msg(BANK3[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 20
		 -> main@msg1(BANK3[20]), main@msg(BANK3[20]), STR_1(CODE[15]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _Interrupcao in COMMON

    _Interrupcao->_conversorADC

Critical Paths under _main in BANK0

    _sprintf->___fladd
    _scale->___flmul
    ___awdiv->___awmod
    _fround->___flmul
    ___lwdiv->___lwmod
    ___flmul->___awdiv
    ___xxtofl->___awdiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _Interrupcao in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf
    _sprintf->___flsub
    ___flsub->___fladd

Critical Paths under _Interrupcao in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Interrupcao in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Interrupcao in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                43    43      0   46529
                                             47 BANK1      3     3      0
                                              0 BANK3     40    40      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            ___awdiv
                             ___flge
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             42    37      5   40472
                                             12 BANK1     35    30      5
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    9351
                                             42 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1513
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1516
                                              7 BANK0      9     5      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      99
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    7433
                                             42 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     772
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     618
                                              6 BANK0      8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    5693
                                             16 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     980
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         18    10      8     634
                                              0 BANK0     18    10      8
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     634
                                              0 BANK0     15     7      8
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     626
                                             16 BANK0     14    10      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     496
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     772
                                              0 BANK0     10     2      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     601
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     457
                                             61 BANK0     11     7      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    3547
                                              4 BANK1      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    3302
                                             62 BANK0     16     8      8
                                              0 BANK1      4     4      0
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     155
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8    1526
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     490
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2     744
                                              5 BANK0      7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     254
                                              1 BANK0      4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     905
                                              4 BANK0      7     6      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     279
                                              4 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     155
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     155
                                              1 BANK0      3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0     124
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _Interrupcao                                          2     2      0     250
                                              3 COMMON     2     2      0
                       _conversorADC
 ---------------------------------------------------------------------------------
 (6) _conversorADC                                         3     1      2     250
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   ___awdiv
     ___awmod (ARG)
   ___flge
   ___xxtofl
     ___awdiv (ARG)
   _sprintf
     ___awdiv
     ___fladd
       _fround (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___lwdiv
         ___lwmod
     ___fleq
     ___flge
     ___flmul
     ___flneg
     ___flsub
       ___fladd
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
       _scale (ARG)
         ___awdiv
         ___awmod
         ___flmul
     ___lldiv
     ___llmod
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
     _isdigit
     _scale

 _Interrupcao (ROOT)
   _conversorADC

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      CA       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4E      4E       5       97.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     32      37       7       68.8%
BITBANK3            60      0       0       8        0.0%
BANK3               60     28      3C       9       62.5%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      CA      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Sep 20 17:42:43 2021

                        _i 0077                          pc 0002                         l50 18BA  
                       l51 18C0                         l53 18C1                         l45 18AB  
                       l46 18AC                         l47 18B2                         l71 19AB  
                       l48 18B3                         l56 18A1                         l49 18B9  
                       l65 1BDD                         l59 1885                         l68 1C40  
                       l77 19F1                         _GO 00FA               ___awdiv@sign 002D  
                       fsr 0004        ___wmul@multiplicand 0022          conversorADC@canal 0070  
      __Umul8_16@word_mpld 0026                        l122 12BB                        l126 14B7  
                      l311 1909                        l232 1285                        l305 07E6  
                      l500 1D43                        l309 18F1                        l503 1DAF  
                      l239 0FFF                        l504 1DC8                        l512 1D24  
                      l345 1CA8                        l522 1D24                        l530 1F04  
                      l258 00A6                        l291 05D8                        l508 100F  
                      l284 0594                        l526 1F41                        l462 1078  
                      l519 1D0F                        l527 1EB3                        l615 1A37  
                      l640 163D                        l480 1F64                        l537 1F34  
                      l625 196E                        l642 1609                        l490 1FF2  
                      l483 1FC2                        l475 093B                        l299 079F  
                      l636 1545                        l732 0C9C                        l661 174C  
                      l565 1B2D                        l670 17BF                        l495 1A56  
                      l479 1FFF                        l751 1920                        l496 1A72  
                      l744 0C90                        l497 1A87                        l657 171F  
                      l649 17FF                        l753 1932                        l682 1AD7  
                      l738 0C08                        l667 1775                        l678 17EB  
                      l790 1E5A                        l782 1E32                        l679 17FF  
                      l776 1DED                        l778 1E84                        l796 07FA  
                      l789 1E4E                        fsr0 0004                        indf 0000  
             ___awmod@sign 0026               ___flmul@aexp 003E               ___flmul@bexp 0043  
             ___flmul@sign 003D               ___flmul@temp 0048               ___flmul@prod 0044  
             ___fltol@exp1 0067                       l3000 1DD5                       l2200 1027  
                     l3010 1E03                       l3002 1DE5                       l2210 103D  
                     l2202 102B                       l3020 1E39                       l3012 1E10  
                     l3004 1DF5                       l2220 105D                       l2212 1041  
                     l2204 102D                       l3030 1E72                       l3022 1E44  
                     l3014 1E17                       l2222 1064                       l2214 1045  
                     l2206 1033                       l3032 1E77                       l3024 1E48  
                     l3016 1E1B                       l3008 1DFE                       l2216 1056  
                     l2208 1036                       l2224 106A                       l3034 1E7B  
                     l3026 1E52                       l3018 1E29                       l4010 1F29  
                     l4002 1F10                       l2226 106F                       l2218 105C  
                     l4100 1C9A                       l3036 1E7C                       l3028 1E5C  
                     l4012 1F39                       l4004 1F22                       l2228 1074  
                     l4110 1A6A                       l4102 1CA0                       l4030 1F6D  
                     l4022 1F58                       l2270 19F2                       l2190 1013  
                     l4200 1BFF                       l4112 1A84                       l4120 1D3B  
                     l4040 1FA4                       l4032 1F7E                       l4016 1F42  
                     l2280 1A0A                       l2272 19F6                       l2192 1017  
                     l4202 1C05                       l4210 19D5                       l4114 1A86  
                     l4106 1A38                       l4130 1D8B                       l4122 1D57  
                     l4042 1FB2                       l4034 1F80                       l4018 1F4F  
                     l2290 1A2D                       l2282 1A0E                       l2274 19FC  
                     l2194 101C                       l4204 19AC                       l4108 1A4E  
                     l4132 1DC5                       l4124 1D5F                       l4140 100D  
                     l4044 1FB3                       l4036 1F89                       l4028 1F65  
                     l2284 1A1F                       l2276 19FF                       l2292 1A33  
                     l2196 101E                       l2188 1010                       l3500 092D  
                     l4300 0356                       l4220 0041                       l4212 002A  
                     l4206 19B1                       l4134 1DC7                       l4126 1D63  
                     l4118 1D25                       l4142 100F                       l4150 1AE5  
                     l4070 18E7                       l4062 1FE7                       l4054 1FCE  
                     l4046 1FBC                       l4038 1F92                       l2286 1A25  
                     l2278 1A06                       l3510 193B                       l2198 1022  
                     l3502 0932                       l4310 03BD                       l4302 0365  
                     l4230 0057                       l4222 0043                       l4214 002F  
                     l4208 19CD                       l4128 1D87                       l3600 15A7  
                     l4160 1B1F                       l4152 1AF2                       l4072 18EB  
                     l4064 1FF7                       l4048 1FC6                       l4056 1FE0  
                     l2288 1A26                       l3520 1957                       l3512 193E  
                     l3504 0937                       l4400 07BA                       l4320 0491  
                     l4304 038E                       l4240 00A4                       l4232 007A  
                     l4224 004F                       l4216 0035                       l4138 1003  
                     l3610 15C6                       l3602 15AF                       l3530 14C0  
                     l4090 1C67                       l4082 1C41                       l4154 1AF6  
                     l4162 1B25                       l4146 1AD8                       l4074 18F8  
                     l3450 1916                       l3522 195D                       l3514 1945  
                     l4402 07C8                       l4322 0493                       l4314 0408  
                     l4306 0397                       l4250 00D4                       l4234 008D  
                     l4226 0050                       l4218 003C                       l3460 18A5  
                     l4172 1879                       l4180 1BA4                       l3700 1793  
                     l3620 1622                       l3612 15E3                       l3604 15B5  
                     l3540 14E3                       l3532 14C9                       l4092 1C70  
                     l4084 1C53                       l4156 1B08                       l4148 1AE2  
                     l4076 18FF                       l4068 18E3                       l3452 191A  
                     l3524 1964                       l3516 1949                       l3508 1933  
                     l4340 04EE                       l4332 04CC                       l4308 039F  
                     l4316 0411                       l4260 0146                       l4252 00D8  
                     l4244 00A8                       l4236 0091                       l4228 0054  
                     l4500 1413                       l3462 18A9                       l4190 1BCF  
                     l4182 1BAA                       l4174 1B89                       l3710 17D5  
                     l3702 1797                       l3630 1646                       l3622 1625  
                     l3614 160D                       l3606 15BB                       l3550 1500  
                     l3542 14E8                       l3534 14D3                       l4166 1A88  
                     l4094 1C82                       l4086 1C56                       l4158 1B16  
                     l4078 1905                       l3454 1929                       l3446 190D  
                     l3518 194D                       l3526 196A                       l3470 08E1  
                     l4350 05A9                       l4342 0549                       l4334 04D6  
                     l4318 0446                       l4270 0186                       l4262 014A  
                     l4254 00E6                       l4246 00C4                       l4238 00A2  
                     l4406 07D0                       l4510 14B1                       l4502 141E  
                     l4430 1292                       l4422 1286                       l3464 18B0  
                     l4192 1BD5                       l4176 1B8E                       l4184 1BB3  
                     l3720 17F6                       l3712 17DC                       l3704 17B7  
                     l3640 1674                       l3624 162F                       l3616 161A  
                     l3608 15C3                       l3560 151E                       l3552 1507  
                     l3544 14F2                       l3536 14D9                       l4168 1A8C  
                     l4096 1C90                       l4088 1C63                       l3456 192E  
                     l3448 190F                       l3800 0B39                       l3480 08F3  
                     l3472 08E4                       l4360 05E1                       l4352 05AF  
                     l4344 0588                       l4336 04E2                       l4328 0495  
                     l4280 01F5                       l4272 01A9                       l4264 014E  
                     l4256 00EA                       l4248 00D0                       l4408 07E2  
                     l4504 1442                       l4440 1297                       l4432 1293  
                     l4424 128C                       l3466 18B7                       l4194 1BDE  
                     l4186 1BB9                       l4178 1B9F                       l3722 17FC  
                     l3714 17DD                       l3706 17C6                       l3650 1696  
                     l3642 1681                       l3634 1651                       l3618 161C  
                     l3626 1635                       l3570 1539                       l3562 1521  
                     l3554 150D                       l3546 14F4                       l3538 14DC  
                     l4098 1C91                       l3810 0BCB                       l3802 0B66  
                     l3730 094D                       l3490 090C                       l3482 08F8  
                     l3474 08E8                       l4370 066A                       l4362 05E6  
                     l4354 05BC                       l4346 059C                       l4338 04E9  
                     l4282 0240                       l4274 01CC                       l4266 0175  
                     l4290 02A1                       l4258 0111                       l4506 1457  
                     l4450 12A2                       l4442 129C                       l4434 1294  
                     l4426 1290                       l3468 18BE                       l4196 1BE4  
                     l4188 1BCA                       l3716 17E1                       l3708 17CB  
                     l3660 1700                       l3644 1683                       l3636 166A  
                     l3628 1641                       l3652 169D                       l3580 1561  
                     l3564 1528                       l3572 153B                       l3556 150E  
                     l3548 14F6                       l2940 1CBF                       l3812 0BD4  
                     l3820 0BE8                       l3804 0B8C                       l3740 0962  
                     l3732 094E                       l3724 093C                       l3492 0910  
                     l3484 08FE                       l3476 08ED                       l4380 0773  
                     l4372 06C5                       l4364 05ED                       l4356 05CB  
                     l4348 05A5                       l4292 02B0                       l4284 0267  
                     l4276 01D0                       l4268 0180                       l4508 1486  
                     l4460 12AF                       l4452 12A3                       l4444 129D  
                     l4436 1295                       l4428 1291                       l4198 1BEE  
                     l3718 17E5                       l3670 173A                       l3654 16B5  
                     l3662 1711                       l3646 1689                       l3638 166E  
                     l3590 1587                       l3582 1569                       l3574 154D  
                     l3566 152D                       l3558 1518                       l2950 1CE3  
                     l2942 1CD4                       l2934 1CA9                       l3822 0BEC  
                     l3814 0BD8                       l3806 0BB4                       l3750 097A  
                     l3742 096A                       l3734 0953                       l3726 0943  
                     l3902 1191                       l3494 091A                       l3486 0901  
                     l3478 08EF                       l4390 0791                       l4382 077A  
                     l4374 0704                       l4366 05F1                       l4358 05D2  
                     l4294 02F7                       l4286 0270                       l4278 01D6  
                     l4542 00BC                       l4470 12B6                       l4462 12B0  
                     l4454 12A7                       l4446 129E                       l4438 1296  
                     l3680 1757                       l3672 1743                       l3664 1728  
                     l3656 16F3                       l3648 168C                       l3592 158D  
                     l3584 1571                       l3576 1551                       l3568 1537  
                     l2944 1CD5                       l2936 1CB6                       l3840 0C3D  
                     l3832 0C0D                       l3824 0BED                       l3816 0BD9  
                     l3808 0BBD                       l3760 0996                       l3752 097F  
                     l3744 096F                       l3736 0958                       l3728 0949  
                     l3904 1197                       l3496 0920                       l3488 0908  
                     l3912 0CA0                       l4392 0799                       l4384 077E  
                     l4376 0710                       l4368 060F                       l4296 0306  
                     l4288 0299                       l4480 12EC                       l4472 12BC  
                     l4464 12B1                       l4456 12A8                       l4448 12A0  
                     l3690 176A                       l3682 175C                       l3674 1749  
                     l3666 172F                       l3658 16FB                       l3594 1593  
                     l3586 1579                       l3578 1559                       l2946 1CDD  
                     l3850 0C74                       l3834 0C12                       l3842 0C43  
                     l3826 0BF1                       l3818 0BE2                       l3770 09B9  
                     l3762 099B                       l3754 0984                       l3746 0975  
                     l3738 0960                       l3498 0927                       l3930 0E26  
                     l3914 0CA4                       l4394 07AA                       l4386 0784  
                     l4378 076B                       l4298 032F                       l4490 13C3  
                     l4474 12C4                       l4482 12F0                       l4466 12B4  
                     l4458 12AB                       l3692 1770                       l3676 1752  
                     l3684 175E                       l3596 159B                       l3588 157F  
                     l2964 1D04                       l2956 1CEB                       l2948 1CDF  
                     l3860 0C94                       l3852 0C76                       l3844 0C50  
                     l3836 0C20                       l3828 0C05                       l3780 0A47  
                     l3772 09C6                       l3764 09A0                       l3756 098C  
                     l3748 0979                       l3908 1242                       l3924 0D97  
                     l3916 0CA6                       l4396 07AB                       l4388 078B  
                     l4492 13CF                       l4484 1340                       l4476 12D3  
                     l4468 12B5                       l3870 1893                       l3678 1755  
                     l3686 1763                       l3598 15A1                       l2966 1D14  
                     l2958 1CFD                       l3854 0C84                       l3846 0C5B  
                     l3838 0C24                       l3790 0AA9                       l3782 0A63  
                     l3774 09E3                       l3758 098E                       l3942 0F44  
                     l3926 0D9E                       l3918 0CAD                       l3934 0E53  
                     l4398 07BA                       l4494 13D9                       l4486 136D  
                     l4478 12DE                       l3872 189E                       l3864 1889  
                     l3880 198B                       l3696 177C                       l3688 1766  
                     l2968 1D19                       l3856 0C88                       l3848 0C6A  
                     l3792 0AC6                       l3784 0A6C                       l3776 09FF  
                     l3768 09A9                       l3960 07F9                       l3952 07EA  
                     l3944 0F4B                       l3936 0E5A                       l4488 1398  
                     l4496 13E5                       l3866 188A                       l3890 19A1  
                     l3882 198E                       l3874 1972                       l3698 1783  
                     l3970 1EA1                       l3858 0C89                       l3794 0ADF  
                     l3786 0A7C                       l3778 0A2B                       l3954 07EB  
                     l4498 1409                       l3868 1890                       l3892 19A8  
                     l3884 1995                       l3876 197C                       l2996 1DCC  
                     l3980 1EC9                       l3964 1E85                       l3796 0AFC  
                     l3788 0A99                       l3956 07F1                       l3948 0FD3  
                     l3886 1998                       l3878 197D                       l2998 1DD1  
                     l3990 1EF5                       l3982 1ECB                       l3966 1E98  
                     l3798 0B29                       l3894 107C                       l3958 07F7  
                     l3888 199E                       l3992 1EF6                       l3984 1ED4  
                     l3976 1EB4                       l3896 1082                       l3994 1EFE  
                     l3986 1EDD                       l3978 1EBA                       l3996 1F08  
                     l3988 1EEB                       _ADON 00F8                       STR_1 08C0  
                     STR_2 08CF                       STR_3 08B1                       STR_4 08A0  
                     u3110 1A33                       u3111 1A32                       u3105 1A27  
                     u3050 19FC                       u3051 19FB                       u3070 1A0E  
                     u3071 1A0D                       u3065 1A00                       u5010 1E48  
                     u3090 1A1F                       u5011 1E47                       u3091 1A1E  
                     u5020 1E4E                       u5021 1E4D                       u5005 1E3D  
                     u3085 1A0F                       u5030 1E52                       u5031 1E51  
                     u3095 1A1B                       u6000 1689                       u5040 1E67  
                     u6001 1688                       u5050 1E77                       u5051 1E76  
                     u6100 1752                       u6020 16B5                       u5060 1E7B  
                     u2900 1045                       u6101 1751                       u6021 16B4  
                     u5061 1E7A                       u5045 1E62                       u2901 1044  
                     u6110 175C                       u6111 175B                       u6031 16CC  
                     u6023 16B1                       u6015 168F                       u6200 17C6  
                     u6120 1763                       u6040 16E0                       u6032 16CD  
                     u7000 1F28                       u2920 1056                       u6201 17C5  
                     u6121 1762                       u6041 16E1                       u6033 16D2  
                     u7001 1F27                       u2921 1055                       u6210 17CB  
                     u6130 176A                       u6050 1700                       u6042 16E6  
                     u6034 16D3                       u6211 17CA                       u6131 1769  
                     u6051 16FF                       u6043 16E7                       u6035 16D8  
                     u2915 1046                       u6220 17DC                       u6140 1770  
                     u6060 1728                       u6036 16D9                       u7100 1FCD  
                     u7020 1F39                       u6300 0984                       u2940 106A  
                     u2860 1017                       u6221 17DB                       u6141 176F  
                     u6061 1727                       u7101 1FCC                       u7021 1F38  
                     u6301 0983                       u2941 1069                       u2925 1052  
                     u2861 1016                       u6230 17E1                       u6150 177B  
                     u6070 172F                       u7030 1F4F                       u6310 099B  
                     u2950 106F                       u2870 1022                       u6231 17E0  
                     u6151 177A                       u6071 172E                       u7031 1F4E  
                     u7015 1F2B                       u6311 099A                       u2951 106E  
                     u2935 105E                       u2871 1021                       u5600 18A9  
                     u6240 17FC                       u6160 1783                       u4800 1CEA  
                     u7200 1C53                       u7120 1FDF                       u7040 1F63  
                     u6320 09A0                       u2880 1033                       u5601 18A8  
                     u6241 17FB                       u6161 1782                       u4801 1CE9  
                     u7201 1C52                       u7121 1FDE                       u7041 1F62  
                     u6321 099F                       u2881 1032                       u5610 18B0  
                     u6170 1797                       u6090 1749                       u7130 1FE6  
                     u6250 094D                       u5611 18AF                       u6171 1796  
                     u6091 1748                       u7131 1FE5                       u7115 1FCF  
                     u6411 0AEE                       u6331 09F1                       u6251 094C  
                     u5620 18B7                       u7300 1D3B                       u6180 17A6  
                     u4820 1CFC                       u7220 1C67                       u7060 1FA4  
                     u6500 0BD8                       u6412 0AF5                       u6332 09F8  
                     u6260 0953                       u5621 18B6                       u7301 1D3A  
                     u6085 173C                       u4821 1CFB                       u7221 1C66  
                     u7061 1FA3                       u6501 0BD7                       u6421 0B1B  
                     u6413 0AFC                       u6405 0AC8                       u6341 0A0D  
                     u6333 09FF                       u6261 0952                       u5630 18BE  
                     u7310 1D57                       u6190 17B7                       u4830 1D03  
                     u7150 1FF7                       u6422 0B22                       u6342 0A14  
                     u6270 0958                       u5710 092D                       u5631 18BD  
                     u7311 1D56                       u6191 17B6                       u4831 1D02  
                     u4815 1CEC                       u7215 1C58                       u7151 1FF6  
                     u7055 1F8B                       u6431 0B48                       u6423 0B29  
                     u6351 0A39                       u6343 0A1B                       u6271 0957  
                     u2895 1037                       u5711 092C                       u7320 1D63  
                     u5800 14E3                       u7240 1C82                       u7400 1AF6  
                     u7160 18EB                       u7080 1FC2                       u6600 0C6A  
                     u6520 0BEC                       u6440 0B72                       u6432 0B4F  
                     u6352 0A40                       u6280 0979                       u5720 0932  
                     u5640 08E8                       u7321 1D62                       u6185 17A1  
                     u5801 14E2                       u7241 1C81                       u7401 1AF5  
                     u7161 18EA                       u7145 1FE9                       u7081 1FC1  
                     u7065 1FA0                       u6601 0C69                       u6521 0BEB  
                     u6433 0B56                       u6361 0A55                       u6353 0A47  
                     u6281 0978                       u5721 0931                       u5705 0921  
                     u5641 08E7                       u5810 14E8                       u4850 1D14  
                     u4770 1CB6                       u7410 1B08                       u4930 1DD1  
                     u7090 1FC6                       u5570 191A                       u6610 0C88  
                     u6530 0BF1                       u6362 0A5C                       u6290 097F  
                     u5730 193B                       u5650 08F3                       u7331 1D72  
                     u5811 14E7                       u4851 1D13                       u4771 1CB5  
                     u7235 1C69                       u7411 1B07                       u4931 1DD0  
                     u7091 1FC5                       u7075 1FB5                       u5571 1919  
                     u6611 0C87                       u6531 0BF0                       u6515 0BDB  
                     u6451 0B7E                       u6363 0A63                       u6291 097E  
                     u5731 193A                       u5651 08F2                       u7500 19F1  
                     u7340 1D8B                       u7332 1D73                       u5900 15EF  
                     u5820 150D                       u4860 1D19                       u4780 1CCD  
                     u7260 1CA0                       u4940 1DD5                       u6540 0C05  
                     u6460 0B9A                       u6452 0B85                       u5660 08FE  
                     u7501 19F0                       u7341 1D8A                       u7333 1D78  
                     u5821 150C                       u4861 1D18                       u4845 1D06  
                     u7261 1C9F                       u7245 1C7E                       u4941 1DD4  
                     u6605 0C66                       u6541 0C04                       u6453 0B8C  
                     u6445 0B6D                       u6381 0A8B                       u5661 08FD  
                     u7270 1A4E                       u7334 1D79                       u5910 160D  
                     u5830 151E                       u4790 1CE3                       u7430 1B25  
                     u7190 1905                       u4950 1DF5                       u5590 192E  
                     u6550 0C0C                       u6382 0A92                       u5750 194D  
                     u6630 1082                       u6710 0CA4                       u7510 0035  
                     u7271 1A4D                       u7351 1D9A                       u7335 1D7E  
                     u5911 160C                       u5831 151D                       u4791 1CE2  
                     u7255 1C92                       u7431 1B24                       u7415 1B04  
                     u7191 1904                       u7175 18F2                       u4951 1DF4  
                     u5591 192D                       u6551 0C0B                       u6471 0BA6  
                     u6391 0AB8                       u6383 0A99                       u6375 0A65  
                     u5751 194C                       u6631 1081                       u6711 0CA3  
                     u7511 0034                       u7440 1B8E                       u7280 1A6A  
                     u7360 1DC5                       u7352 1D9B                       u7336 1D7F  
                     u5920 1622                       u5840 1528                       u6560 0C12  
                     u6472 0BAD                       u6392 0ABF                       u5760 1957  
                     u5680 0910                       u6800 0E5A                       u6720 0CAD  
                     u7600 0299                       u7520 004F                       u7441 1B8D  
                     u6625 1980                       u7281 1A69                       u7361 1DC4  
                     u7353 1DA0                       u5921 1621                       u5841 1527  
                     u4785 1CC8                       u7425 1B17                       u7185 18F9  
                     u5585 1921                       u6561 0C11                       u6473 0BB4  
                     u6465 0B95                       u6393 0AC6                       u5761 1956  
                     u5745 193F                       u6705 124D                       u5681 090F  
                     u6801 0E59                       u6721 0CAC                       u7601 0298  
                     u7521 004E                       u7290 1A84                       u7354 1DA1  
                     u7370 100D                       u5850 152D                       u4970 1E16  
                     u6570 0C24                       u5690 091A                       u7610 02B0  
                     u7530 00A1                       u7291 1A83                       u7355 1DA6  
                     u7371 100C                       u5851 152C                       u4971 1E15  
                     u6571 0C23                       u5691 0919                       u5675 0902  
                     u7611 02AF                       u7531 00A0                       u7460 1BB9  
                     u7356 1DA7                       u5940 163D                       u5860 154D  
                     u7380 1AE2                       u6900 1E98                       u6580 0C33  
                     u5780 196A                       u7700 04E2                       u7620 0306  
                     u7540 00D0                       u7461 1BB8                       u7365 1DC1  
                     u5941 163C                       u5861 154C                       u7381 1AE1  
                     u4965 1E08                       u6901 1E97                       u6485 0BB6  
                     u5781 1969                       u5765 1953                       u6645 109F  
                     u7701 04E1                       u7621 0305                       u7541 00CF  
                     u5950 1641                       u5870 1551                       u5790 14D9  
                     u4990 1E38                       u6910 1EB2                       u6590 0C50  
                     u6670 1197                       u7630 032F                       u7550 00D4  
                     u7455 1B96                       u7295 1A80                       u5951 1640  
                     u5935 1628                       u5871 1550                       u5791 14D8  
                     u4991 1E37                       u6911 1EB1                       u6591 0C4F  
                     u6495 0BCD                       u5775 195E                       u6671 1196  
                     u6655 10FB                       u5695 0916                       u6815 0E7C  
                     u6735 0CCF                       u7631 032E                       u7615 02AC  
                     u7551 00D3                       u7480 19BB                       u5960 1646  
                     u5880 15E3                       u6840 0F4B                       u6760 0D9E  
                     u7800 0791                       u7720 059B                       u7640 0356  
                     u7560 0111                       u5961 1645                       u5881 15E2  
                     u4985 1E2A                       u6585 0C2E                       u6665 1150  
                     u6841 0F4A                       u6825 0EB8                       u6761 0D9D  
                     u6745 0D0B                       u7801 0790                       u7721 059A  
                     u7641 0355                       u7625 0302                       u7561 0110  
                     u7490 19DF                       u5890 15EE                       u6930 1EEB  
                     u7810 0799                       u7730 05BC                       u7650 0365  
                     u7570 0175                       u7475 1BC1                       u5971 165C  
                     u5891 15EC                       u7395 1AE7                       u6931 1EEA  
                     u6595 0C4C                       u6835 0F03                       u6755 0D56  
                     u7811 0798                       u7731 05BB                       u7715 04F1  
                     u7651 0364                       u7571 0174                       u5980 166E  
                     u5972 1663                       u7820 07AA                       u7740 05CB  
                     u7660 038E                       u7580 01D0                       u5981 166D  
                     u5973 166A                       u5885 15DF                       u6925 1ED6  
                     u6685 11B4                       u7821 07A9                       u7741 05CA  
                     u7661 038D                       u7581 01CF                       u5990 1674  
                     u6950 1F04                       u7830 07BA                       u7750 05E6  
                     u7590 0267                       u5991 1673                       u6951 1F03  
                     u6935 1EE7                       u6695 1201                       u6855 0F5E  
                     u6775 0DB1                       u7831 07B9                       u7751 05E5  
                     u7735 05B8                       u7655 0361                       u7591 0266  
                     u6960 1F08                       u6880 07F1                       u7840 07C8  
                     u7680 04CB                       u6961 1F07                       u6945 1EF7  
                     u6881 07F0                       u6865 0F9A                       u6785 0DED  
                     u7841 07C7                       u7825 07A6                       u7745 05C7  
                     u7681 04CA                       u6970 1F0F                       u6890 07F7  
                     u7850 07E2                       u7690 04D6                       u6971 1F0E  
                     u6891 07F6                       u6875 0FD6                       u6795 0E29  
                     u7851 07E1                       u7835 07B6                       u7691 04D5  
                     u7675 0498                       u7907 12E6                       u7780 0772  
                     u7860 12C4                       u7917 1992                       u7781 0771  
                     u7765 066D                       u7685 04C7                       u7861 12C3  
                     u6990 1F21                       u7790 078A                       u7870 1398  
                     u7927 19A5                       u6991 1F20                       u7791 0789  
                     u7775 0713                       u7871 1397                       u7880 13C3  
                     u7937 1BEA                       u6985 1F11                       u7881 13C2  
                     u7890 14B1                       u7947 1BFA                       u7891 14B0  
                     u7957 1C0B                       u7967 1899          ?_Lcd_Write_String 0025  
                     _flag 01CA                       _main 1286                       btemp 007E  
                     start 000C         ??_Lcd_Write_String 0027               _sprintf$1013 00B6  
          __end_of_Lcd_Cmd 18A2              ?_conversorADC 0070              ___fltol@sign1 0066  
          __end_of___fladd 1800                      ?_main 0070            __end_of___awdiv 1079  
          __end_of___flneg 1010            __end_of___awmod 093C            __end_of___flmul 0C9D  
          __end_of___flsub 1AD8            __end_of___fltol 1D25            __end_of___lldiv 1CA9  
          ___awdiv@divisor 0027            __end_of___llmod 1B2E            __end_of___lwdiv 1A38  
                    i1l106 18D8                      i1l114 1B7D                      i1l116 1B76  
                    i1l109 18E2                      i1l117 1B7F            __end_of___lwmod 196F  
          ___awdiv@counter 002C                      _TMR1H 000F                      _TMR1L 000E  
  __size_of_Lcd_Set_Cursor 0058                      _TRISA 0085                      _TRISB 0086  
                    _TRISD 0088                      _Timer 0075            __end_of_dpowers 08A0  
                    _scale 0C9D            __end_of_isdigit 07FB                      pclath 000A  
                    status 0003                      wtemp0 007E            __end_of_sprintf 07E7  
            ??_Interrupcao 0073           __end_of_Lcd_Init 1C41           __end_of_Lcd_Port 18C2  
          __initialization 000F             ??_conversorADC 0072               __end_of_main 14C0  
                   ??_main 00CF         __size_of_Lcd_Clear 000D       __size_of__tdiv_to_l_ 00BD  
                   _ADCON0 001F                     _ADCON1 009F           ___llmod@dividend 0024  
                   ?_scale 004A                     _ADRESH 001E                     _ADRESL 009E  
         ___awdiv@dividend 0029                     i1l3310 1B6B                     i1l3302 1B2E  
                   i1l3080 18C2                     i1l3312 1B70                     i1l3304 1B36  
                   i1l3082 18CF                     i1l3314 1B7C                     i1l3306 1B3D  
                   i1l3084 18D0                     i1l3316 1B7E                     i1l3308 1B69  
                   i1l3086 18D5                     i1l3088 18DC                     u514_25 18C5  
                   u515_20 18DC                     u515_21 18DB                     u551_20 1B36  
                   u551_21 1B35                     u552_20 1B3D                     u552_21 1B3C  
                ??_Lcd_Cmd 0021                     u797_27 18D2    __size_of_Lcd_Write_Char 003D  
         __end_of___xxtofl 1E85               _ADC_corrente 01C4           __end_of__powers_ 0844  
                   ___flge 1D25                     ___fleq 1A38                  ??___fladd 0066  
                   ___wmul 18E3                  ??___awdiv 002B                  ??___flneg 0075  
                ??___awmod 0024                  ??___flmul 0038                  ??___flsub 0075  
                ??___fltol 0061                  ??___lldiv 0028                  ??___llmod 0028  
                ??___lwdiv 002A        __end_of_Interrupcao 1B86                  ??___lwmod 0024  
                   _buffer 00D2                     _fround 1079           ___awdiv@quotient 002E  
          ___awmod@divisor 0020                     _tensao 01BC            ___awmod@counter 0025  
                ??_isdigit 0075         __size_of__Umul8_16 0029                     saved_w 007E  
                ??_sprintf 00B1            Lcd_Set_Cursor@a 0027            Lcd_Set_Cursor@b 0024  
          Lcd_Set_Cursor@y 0029            Lcd_Set_Cursor@z 0028                 ___flge@ff1 0020  
               ___flge@ff2 0024               ___xxtofl@arg 003A               ___xxtofl@exp 0039  
             ___xxtofl@val 0030                 ___fleq@ff1 0020                 ___fleq@ff2 0024  
  __end_of__initialization 0023                 ___flneg@f1 0020          __end_of_Lcd_Clear 1886  
               ___fltol@f1 005D             __pcstackCOMMON 0070              __end_of_scale 1000  
           _Lcd_Set_Cursor 1B86                 __div_to_l_ 1F42             _OPTION_REGbits 0081  
                ?_Lcd_Init 0070                  ?_Lcd_Port 0070            __div_to_l_@exp1 002E  
          __div_to_l_@cntr 002D       __end_of_conversorADC 18E3                    ??_scale 004E  
          __div_to_l_@quot 0029                 __pbssBANK1 00D2                 __pbssBANK3 01B8  
            __div_to_l_@f1 0020              __div_to_l_@f2 0024                _Interrupcao 1B2E  
        __end_of__Umul8_16 1933                 __pmaintext 1286                    ?___flge 0020  
                  ?___fleq 0020                    ?___wmul 0020                 __pintentry 0004  
                  ?_fround 004A  __size_of_Lcd_Write_String 0046     __end_of_Lcd_Set_Cursor 1BDE  
                ?___xxtofl 0030                    _GO_DONE 00FA                 ??_Lcd_Init 0024  
               ??_Lcd_Port 0075                 __stringtab 0800             _Lcd_Write_Char 196F  
                  _Lcd_Cmd 1886          __end_of__npowers_ 0878                 _scale$1012 0058  
          __size_of___flge 00A4            __size_of___fleq 0050                    ___fladd 14C0  
                  ___awdiv 1010                    ___flneg 1003                    ___awmod 08E1  
                  ___flmul 093C                    ___flsub 1A88                    ___fltol 1CA9  
                  ___lldiv 1C41            __size_of___wmul 0027                    ___llmod 1AD8  
                  ___lwdiv 19F2                    ___lwmod 1933            __size_of_fround 020D  
          ?_Lcd_Set_Cursor 0024                    __ptext1 0027                    __ptext2 0C9D  
                  __ptext3 08E1                    __ptext4 1010                    __ptext5 07E7  
                  __ptext6 1079                    __ptext7 1933                    __ptext8 19F2  
                  __ptext9 093C                  _T1CONbits 0010                ?__div_to_l_ 0020  
                  _dpowers 0878                    _isdigit 07E7                 ??___xxtofl 0034  
         ___awmod@dividend 0022                    _sprintf 0027                    main@msg 01A4  
                  clrloop0 1872     __end_of_Lcd_Write_Char 19AC       end_of_initialization 0023  
          ___lldiv@divisor 0020            ___lldiv@counter 002D                  Lcd_Port@a 0020  
           __tdiv_to_l_@f1 0020             __tdiv_to_l_@f2 0024              ??__tdiv_to_l_ 0028  
                _PORTBbits 0006                  _PORTDbits 0008      __size_of_conversorADC 0021  
              ___fladd@grs 00A3              ___xxtofl@sign 0038            ?_Lcd_Write_Char 0070  
        Lcd_Write_String@a 0025          Lcd_Write_String@i 002A                ___flmul@grs 003F  
      __size_of__div_to_l_ 00BE                  _Lcd_Clear 1879               _conversorADC 18C2  
           __end_of___flge 1DC9             __end_of___fleq 1A88             __end_of___wmul 190A  
         _Lcd_Write_String 19AC             __end_of_fround 1286        start_initialization 000F  
      __end_of__tdiv_to_l_ 1F42          __size_of_Lcd_Init 0063          __size_of_Lcd_Port 0020  
          ___llmod@divisor 0020            ___llmod@counter 0029               ?_Interrupcao 0070  
               ?_Lcd_Clear 0070                   ??___flge 0028                   ??___fleq 0028  
                 ??___wmul 0075                  __Umul8_16 190A            Lcd_Write_Char@a 0024  
          Lcd_Write_Char@y 0023                   ??_fround 004E              sprintf@tmpval 00C3  
                ___fladd@a 0062                  ___fladd@b 005E                 fround@prec 005D  
                ___flmul@a 0034                  ___flmul@b 0030                __pbssCOMMON 0075  
                ___flsub@a 00A4                  ___flsub@b 00A8                  ___latbits 0002  
            __pcstackBANK0 0020              __pcstackBANK1 00A0              __pcstackBANK3 0190  
        __size_of___xxtofl 00BC                   ?_Lcd_Cmd 0070                sprintf@flag 00BB  
              sprintf@eexp 00C1                sprintf@fval 00CA                sprintf@prec 00C8  
         ___lwdiv@dividend 0028           ??_Lcd_Set_Cursor 0025                   ?___fladd 005E  
                 ?___awdiv 0027                   ?___flneg 0020                   ?___awmod 0020  
                 ?___flmul 0030                   ?___flsub 00A4                   ?___fltol 005D  
                 ?___lldiv 0020                   ?___llmod 0020                  __npowers_ 0844  
               ?__Umul8_16 0020                   ?___lwdiv 0026                   ?___lwmod 0020  
                __pstrings 0800                __tdiv_to_l_ 1E85               ??__div_to_l_ 0028  
                 ?_isdigit 0070                   _ADC_temp 01C8           ___lwdiv@quotient 002B  
                 ?_sprintf 00AC             __size_of_scale 0363          interrupt_function 0004  
           ___wmul@product 0024                  clear_ram0 1871                   _PIE1bits 008C  
                 Lcd_Cmd@a 0023                   _PIR1bits 000C         __end_of__div_to_l_ 2000  
              ??_Lcd_Clear 0075                __stringbase 080F          ___wmul@multiplier 0020  
         ??_Lcd_Write_Char 0021                   _Lcd_Init 1BDE                   _Lcd_Port 18A2  
 __end_of_Lcd_Write_String 19F2           __size_of_Lcd_Cmd 001C       __size_of_Interrupcao 0058  
               _ADC_tensao 01C6                ??__Umul8_16 0022           __size_of___fladd 0340  
         __size_of___awdiv 0069           __size_of___flneg 000D           __size_of___awmod 005B  
         __size_of___flmul 0361           __size_of___flsub 0050           __size_of___fltol 007C  
         __size_of___lldiv 0068           __size_of___llmod 0056           __size_of___lwdiv 0046  
         __size_of___lwmod 003C                _fround$1010 0059                _fround$1011 0055  
       __end_of__stringtab 0810                _isdigit$819 0020                 sprintf@val 00BD  
                 ___xxtofl 1DC9           __size_of_isdigit 0014            ___lwdiv@divisor 0026  
          ___lwdiv@counter 002D                   __ptext10 190A                   __ptext11 1E85  
                 __ptext20 1003                   __ptext12 1F42                   __ptext21 1D25  
                 __ptext13 1DC9                   __ptext30 1B2E                   __ptext22 1A38  
                 __ptext14 18E3                   __ptext31 18C2                   __ptext23 19AC  
                 __ptext15 1AD8                   __ptext24 196F                   __ptext16 1C41  
                 __ptext25 1B86                   __ptext17 1CA9                   __ptext26 1BDE  
                 __ptext18 1A88                   __ptext27 1879                   __ptext19 14C0  
                 __ptext28 1886                   __ptext29 18A2                   __powers_ 0810  
         __size_of_sprintf 07C0                   _corrente 01B8              __size_of_main 023A  
                 main@msg1 0190                 _INTCONbits 000B                   isdigit@c 0021  
                 scale@scl 005C         Lcd_Write_Char@temp 0022                   intlevel1 0000  
                sprintf@ap 00BA           __tdiv_to_l_@exp1 0031           __tdiv_to_l_@cntr 0030  
                sprintf@sp 00C7           __tdiv_to_l_@quot 002C           ___lwmod@dividend 0022  
         ___lldiv@dividend 0024                  stringcode 080A         Lcd_Set_Cursor@temp 002A  
             ?__tdiv_to_l_ 0020     __Umul8_16@multiplicand 0020                _temperatura 01C0  
                 sprintf@c 00CE                   sprintf@f 00AC           ___lldiv@quotient 0029  
          ___lwmod@divisor 0020            ___lwmod@counter 0025                   stringdir 080A  
                 stringtab 0800              ___fladd@signs 00A0               ___fladd@aexp 00A1  
             ___fladd@bexp 00A2       __Umul8_16@multiplier 0028          __Umul8_16@product 0024  
